{"version":3,"sources":["../../src/services/log.service.ts","../../src/services/ilias-app-utils.service.ts","../../src/actions/show-object-list-page-action.ts","../../src/pages/object-list/object-list.ts","../../src/actions/show-details-page-action.ts","../../src/actions/mark-as-favorite-action.ts","../../src/actions/mark-as-offline-available-action.ts","../../src/actions/unmark-as-offline-available-action.ts","../../src/actions/synchronize-action.ts","../../src/actions/remove-local-files-action.ts","../../src/actions/download-and-open-file-external-action.ts","../../src/services/footer-toolbar.service.ts","../../node_modules/@angular/core/@angular lazy","../../src/services/database.service.ts","../../src/models/ilias-object.ts","../../src lazy","../../src/models/user.ts","../../src/exceptions/noWLANException.ts","../../src/pages/settings/settings.ts","../../src/providers/handlers/file-object-handler.ts","../../src/pages/favorites/favorites.ts","../../src/pages/object-details/object-details.ts","../../src/pages/info/info.ts","../../src/services/migrations.service.ts","../../src/migrations/migration.ts","../../src/pages/new-objects/new-objects.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/services/file.service.ts","../../src/app/app.component.ts","../../src/presenters/presenter-factory.ts","../../src/presenters/course-presenter.ts","../../src/presenters/folder-presenter.ts","../../src/presenters/group-presenter.ts","../../src/presenters/file-presenter.ts","../../src/models/favorites.ts","../../src/actions/remove-local-file-action.ts","../../src/actions/open-file-external-action.ts","../../src/actions/download-file-action.ts","../../src/models/page-layout.ts","../../src/models/timeline.ts","../../src/migrations/1-create-models-migration.ts","../../src/migrations/2-add-object-attributes-migration.ts","../../src/services/ilias-app.service.ts","../../src/pipes/fileSize.pipe.ts","../../src/pages/modal/modal.ts","../../src/models/file-data.ts","../../src/providers/data-provider.provider.ts","../../src/services/synchronization.service.ts","../../src/models/active-record.ts","../../src/models/settings.ts","../../src/presenters/object-presenter.ts","../../src/providers/ilias-rest.provider.ts","../../src/exceptions/RESTAPIException.ts","../../src/exceptions/Exception.ts","../../src/actions/object-action.ts","../../src/services/ilias-config-factory.ts","../../src/exceptions/CantOpenFileTypeException.ts","../../src/exceptions/OfflineException.ts","../../src/services/url-converter.service.ts","../../src/pages/login/login.ts","../../src/models/desktop-item.ts","../../src/actions/open-object-in-ilias-action.ts","../../src/actions/unmark-as-favorite-action.ts","../../src/pages/sync-finished-modal/sync-finished-modal.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class Log {\n\n    public static debug:boolean = false;\n\n    /**\n     * Use this to do console text logs. This way we can more easily turn them on/off.\n     * @param object\n     * @param text\n     */\n    public static write(logger:any, text:string, ...param:any[]) {\n        if(!Log.debug)\n            return;\n        if(!logger.constructor)\n            return\n        if(param.length > 0)\n            console.log(\"[\" + logger.constructor.name  + \"] \" + text, param[0]);\n        else\n            console.log(\"[\" + logger.constructor.name  + \"] \" + text);\n    }\n\n\n    public static describe(logger:any, description:string, object:any) {\n        if(!Log.debug)\n            return;\n        Log.write(logger, description, object);\n    }\n\n    public static error(logger:any, error:any) {\n        if(!Log.debug)\n            return;\n        console.error(\"[\" + logger.constructor.name  + \"] \", error);\n\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/log.service.ts","export class ILIASAppUtils {\n\n    public static formatSize(bytes:number, decimals:number = 2):string {\n        if(!bytes) return '0 KB';\n        let k = 1000; // or 1024 for binary\n        let sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n        let i = Math.floor(Math.log(bytes) / Math.log(k));\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(decimals)) + ' ' + sizes[i];\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/ilias-app-utils.service.ts","import {NavController} from \"ionic-angular/index\";\nimport {ILIASObject} from \"../models/ilias-object\";\nimport {ILIASObjectAction, ILIASObjectActionAlert} from \"./object-action\";\nimport {ObjectListPage} from \"../pages/object-list/object-list\";\nimport {ILIASObjectActionResult} from \"./object-action\";\nimport {ILIASObjectActionNoMessage} from \"./object-action\";\n\nexport class ShowObjectListPageAction extends ILIASObjectAction {\n\n    public constructor(public title:string, public object:ILIASObject, public nav:NavController) {\n        super();\n    }\n\n    public execute():Promise<ILIASObjectActionResult> {\n        return new Promise((resolve, reject) => {\n            this.nav.push(ObjectListPage, {parent: this.object}).then(() => {\n                resolve(new ILIASObjectActionNoMessage());\n            }).catch(error =>{\n                reject(error);\n            });\n        });\n    }\n\n    public alert():ILIASObjectActionAlert|any {\n        return null;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/actions/show-object-list-page-action.ts","import {Component} from '@angular/core';\nimport {\n  NavController, NavParams, ActionSheetController, AlertController,\n  ToastController, Events, ActionSheetOptions, ActionSheetButton\n} from 'ionic-angular';\nimport {DataProvider} from \"../../providers/data-provider.provider\";\nimport {ILIASObject} from \"../../models/ilias-object\";\nimport {FileService} from \"../../services/file.service\";\nimport {User} from \"../../models/user\";\nimport {SynchronizationService} from \"../../services/synchronization.service\";\nimport {LoginPage} from \"../login/login\";\nimport {ILIASObjectAction, ILIASObjectActionSuccess} from \"../../actions/object-action\";\nimport {ShowObjectListPageAction} from \"../../actions/show-object-list-page-action\";\nimport {OpenObjectInILIASAction} from \"../../actions/open-object-in-ilias-action\";\nimport {ShowDetailsPageAction} from \"../../actions/show-details-page-action\";\nimport {MarkAsFavoriteAction} from \"../../actions/mark-as-favorite-action\";\nimport {UnMarkAsFavoriteAction} from \"../../actions/unmark-as-favorite-action\";\nimport {MarkAsOfflineAvailableAction} from \"../../actions/mark-as-offline-available-action\";\nimport {UnMarkAsOfflineAvailableAction} from \"../../actions/unmark-as-offline-available-action\";\nimport {SynchronizeAction} from \"../../actions/synchronize-action\";\nimport {RemoveLocalFilesAction} from \"../../actions/remove-local-files-action\";\nimport {DesktopItem} from \"../../models/desktop-item\";\nimport {FooterToolbarService} from \"../../services/footer-toolbar.service\";\nimport {DownloadAndOpenFileExternalAction} from \"../../actions/download-and-open-file-external-action\";\nimport {TranslateService} from \"ng2-translate/src/translate.service\";\nimport {Log} from \"../../services/log.service\";\nimport {Job} from \"../../services/footer-toolbar.service\";\nimport {ModalController} from \"ionic-angular/index\";\nimport {SyncFinishedModal} from \"../sync-finished-modal/sync-finished-modal\";\nimport {CantOpenFileTypeException} from \"../../exceptions/CantOpenFileTypeException\";\nimport {LoadingController} from \"ionic-angular/index\";\nimport {NoWLANException} from \"../../exceptions/noWLANException\";\nimport {OfflineException} from \"../../exceptions/OfflineException\";\nimport {RESTAPIException} from \"../../exceptions/RESTAPIException\";\nimport {ILIASLinkBuilder, ILIASLinkView, TokenUrlConverter} from \"../../services/url-converter.service\";\nimport {PageLayout} from \"../../models/page-layout\";\nimport {Exception} from \"../../exceptions/Exception\";\nimport {TimeLine} from \"../../models/timeline\";\nimport {InAppBrowser} from \"@ionic-native/in-app-browser\";\n\n\n@Component({\n    templateUrl: 'object-list.html',\n})\nexport class ObjectListPage {\n\n    /**\n     * Objects under the given parent object\n     */\n    public objects: ILIASObject[] = [];\n\n    /**\n     * The parent container object that was clicked to display the current objects\n     */\n    public parent: ILIASObject;\n    public pageTitle: string;\n    public user: User;\n    public actionSheetActive = false;\n    public numberOfNewChildren = [];\n    protected static desktopLastUpdate = null;\n\n    readonly pageLayout: PageLayout;\n    readonly timeline: TimeLine;\n\n    constructor(public nav: NavController,\n                params: NavParams,\n                public actionSheet: ActionSheetController,\n                public file: FileService,\n                public sync: SynchronizationService,\n                public modal: ModalController,\n                public alert: AlertController,\n                public toast: ToastController,\n                public translate: TranslateService,\n                public dataProvider: DataProvider,\n                public footerToolbar: FooterToolbarService,\n                public events: Events,\n                public loading: LoadingController,\n                private readonly urlConverter: TokenUrlConverter,\n                private readonly browser: InAppBrowser\n    ) {\n        this.parent = params.get('parent');\n\n        if (this.parent) {\n            this.pageTitle = this.parent.title;\n            this.pageLayout = new PageLayout(this.parent.type);\n            this.timeline = new TimeLine(this.parent.type);\n        } else {\n            this.pageTitle = ''; // will be updated by the observer\n            this.pageLayout = new PageLayout();\n            this.timeline = new TimeLine();\n            translate.get(\"object-list.title\").subscribe((lng) => {\n                this.pageTitle = lng;\n            });\n        }\n        this.initEventListeners();\n    }\n\n  /**\n   * Opens the parent object in ILIAS.\n   */\n  openPageLayout() {\n      this.checkParen();\n      const action = new OpenObjectInILIASAction(this.translate.instant(\"actions.view_in_ilias\"), new ILIASLinkBuilder(this.parent.link), this.urlConverter, this.browser);\n      this.executeAction(action);\n    }\n\n  /**\n   * Opens the timeline of the parent object in ILIAS.\n   */\n  openTimeline() {\n      this.checkParen();\n      const action = new OpenObjectInILIASAction(this.translate.instant(\"actions.view_in_ilias\"), new ILIASLinkBuilder(this.parent.link, ILIASLinkView.TIMELINE), this.urlConverter, this.browser);\n      this.executeAction(action);\n    }\n\n  /**\n   * Checks the parent on null.\n   *\n   * @throws Exception if the parent is null\n   */\n  private checkParen() {\n      if (this.parent == null) {\n        throw new Exception(\"Can not open link for undefined. Do not call this method on ILIAS objects with no parent.\");\n      }\n    }\n\n    public ionViewDidEnter() {\n        Log.write(this, \"Did enter.\");\n        return this.calculateChildrenMarkedAsNew();\n    }\n\n    public ionViewDidLoad() {\n        Log.write(this, \"Did load page object list.\");\n        this.loadObjects()\n            .then(() => User.currentUser())\n            .then(user => this.sync.updateLastSync(user.id))\n            .then(last => {\n                if(!last && !this.sync.isRunning)\n                    this.startSync();\n                return Promise.resolve();\n            })\n            .catch(error => Log.error(this, error))\n        Log.describe(this, \"lastdate\", this.sync.lastSync);\n    }\n\n    protected loadObjects() {\n        return User.currentUser().then(user => {\n            this.user = user;\n            if (this.parent) {\n                return this.loadObjectData();\n            } else {\n                return this.loadDesktopData();\n            }\n        }, () => {\n            // We should never get to this page if no user is logged in... just in case -> redirect to LoginPage\n            Log.write(this, \"landed on object-list.\");\n            this.nav.setRoot(LoginPage);\n        }).catch(error => {\n            Log.error(this, error);\n            if (error instanceof RESTAPIException) {\n                //TODO: maybe some notification?\n            }\n        });\n    }\n\n    /**\n     * loads the object data from the cache. iff the cache data is older than a minute then we also update the cache data with the api data.\n     * @returns {Promise<void>}\n     */\n    protected loadObjectData(): Promise<any> {\n        return this.loadCachedObjectData()\n            .then(() => {\n                let currentDate = new Date();\n                let updatedAt = new Date(this.parent.updatedAt);\n\n                let needsRefresh = updatedAt.getTime() + (1 * 60 * 1000) < currentDate.getTime();\n                Log.describe(this, \"needs refrehs\", needsRefresh);\n                if (needsRefresh)\n                    return this.loadOnlineObjectData();\n                else\n                    return Promise.resolve();\n            });\n    }\n\n    /**\n     * Loads the object data from db cache.\n     * @returns {Promise<void>}\n     */\n    protected loadCachedObjectData(): Promise<any> {\n        this.footerToolbar.addJob(this.parent.refId, \"\");\n        return ILIASObject.findByParentRefId(this.parent.refId, this.user.id)\n            .then(objects => objects.sort(ILIASObject.compare))\n            .then(objects => {\n                // Update by ref id.\n                this.objects = objects;\n                this.calculateChildrenMarkedAsNew();\n                this.footerToolbar.removeJob(this.parent.refId);\n                return Promise.resolve();\n            }).catch(error => {\n                this.footerToolbar.removeJob(this.parent.refId);\n                return Promise.reject(error);\n            });\n    }\n\n    /**\n     * loads the object data from the rest api and stores it into the db chache.\n     * @returns {Promise<void>}\n     */\n    protected loadOnlineObjectData(): Promise<any> {\n        this.footerToolbar.addJob(this.parent.refId, \"\");\n        return this.dataProvider.getObjectData(this.parent, this.user, false).then(objects => {\n            this.objects = objects;\n            this.calculateChildrenMarkedAsNew();\n            this.footerToolbar.removeJob(this.parent.refId);\n            this.parent.updatedAt = new Date().toISOString();\n            return Promise.resolve();\n        }).catch(error => {\n            this.footerToolbar.removeJob(this.parent.refId);\n            return Promise.reject(error);\n        });\n    }\n\n    /**\n     * Loads desktop items from local DB and iff the sync is NOT running then update local data with remote data.\n     */\n    protected loadDesktopData() {\n        return this.loadCachedDesktopData()\n            .then(() => {\n                if (this.sync.isRunning)\n                    return Promise.resolve();\n                else {\n                    let currentDate = new Date();\n                    let updatedAt = ObjectListPage.desktopLastUpdate != null ? ObjectListPage.desktopLastUpdate : new Date(1);\n\n                    let needsRefresh = updatedAt.getTime() + (1 * 60 * 1000) < currentDate.getTime();\n                    Log.describe(this, \"needs refrehs\", needsRefresh);\n                    if (needsRefresh)\n                        return this.loadOnlineDesktopData()\n                            .then(() => {ObjectListPage.desktopLastUpdate = new Date()});\n                    else\n                        return Promise.resolve();\n                }\n            });\n    }\n\n    /**\n     * load the desktop data from the local db.\n     * @returns {Promise<void>}\n     */\n    protected loadCachedDesktopData(): Promise<any> {\n        this.footerToolbar.addJob(Job.DesktopAction, \"\");\n\n        return DesktopItem.findByUserId(this.user.id)\n            .then(objects => {\n                Log.describe(this, \"Got desktop data before sorting\", objects);\n                return Promise.resolve(objects.sort(ILIASObject.compare));\n            })\n            .then(desktopItems => {\n                Log.describe(this, \"Desktop Data before:\", desktopItems);\n                this.objects = desktopItems;\n                this.calculateChildrenMarkedAsNew();\n                this.footerToolbar.removeJob(Job.DesktopAction);\n                return Promise.resolve();\n            }).catch(error => {\n                this.footerToolbar.removeJob(Job.DesktopAction);\n                return Promise.reject(error);\n            });\n    }\n\n    /**\n     * load the desktop data from the rest api. and save the data into the local db.\n     * @returns {Promise<void>}\n     */\n    protected loadOnlineDesktopData(): Promise<any> {\n        this.footerToolbar.addJob(Job.DesktopAction, \"\");\n\n        return this.dataProvider.getDesktopData(this.user)\n            .then(objects => objects.sort(ILIASObject.compare))\n            .then(desktopItems => {\n                Log.describe(this, \"loading desktop data for  \", this.user);\n                Log.describe(this, \"Desktop Data after online update:\", desktopItems);\n                this.objects = desktopItems;\n                this.calculateChildrenMarkedAsNew();\n                this.footerToolbar.removeJob(Job.DesktopAction);\n                if(this.sync.lastSync)\n                return Promise.resolve();\n            }).catch(error => {\n                this.footerToolbar.removeJob(Job.DesktopAction);\n                return Promise.reject(error);\n            });\n    }\n\n    protected calculateChildrenMarkedAsNew() {\n        // Container objects marked as offline available display the number of new children as badge\n        this.objects.forEach(iliasObject => {\n            if (iliasObject.isContainer()) {\n                ILIASObject.findByParentRefIdRecursive(iliasObject.refId, iliasObject.userId).then(iliasObjects => {\n                    let newObjects = iliasObjects.filter(iliasObject => {\n                        return iliasObject.isNew || iliasObject.isUpdated;\n                    });\n                    let n = newObjects.length;\n                    Log.describe(this, \"Object:\", iliasObject);\n                    Log.describe(this, \"Objects marked as new: \", n);\n                    iliasObject.newSubItems = n;\n                });\n            } else {\n                iliasObject.newSubItems = 0;\n            }\n        });\n    }\n\n\n    /**\n     * Run a global synchronization\n     */\n    public startSync() {\n        Log.write(this, \"Sync start\", [], []);\n        this.footerToolbar.addJob(Job.Synchronize, this.translate.instant(\"synchronisation_in_progress\"));\n        this.sync.execute()\n            .then(result => {\n                this.calculateChildrenMarkedAsNew();\n                return Promise.resolve(result);\n            })\n            .then((result) => {\n                this.loadObjects().then(() => {\n                    // We have some files that were marked but not downloaded. We need to explain why and open a modal.\n                    if (result.objectsLeftOut.length > 0) {\n                        let syncModal = this.modal.create(SyncFinishedModal, {syncResult: result});\n                        syncModal.present();\n                    } else {\n                        // If there were no files left out and everything went okay, we just display a \"okay\" result!\n                        this.displaySuccessToast();\n                    }\n                    //maybe some objects came in new.\n                    this.footerToolbar.removeJob(Job.Synchronize);\n                });\n            }).catch((error) => {\n                Log.error(this, error);\n                if (error instanceof NoWLANException) {\n                    this.footerToolbar.removeJob(Job.Synchronize);\n                    this.displayAlert(this.translate.instant(\"sync.title\"), this.translate.instant(\"sync.stopped_no_wlan\"));\n                    return Promise.resolve();\n                }\n                return Promise.reject(error);\n            }).catch(error => {\n                if (error instanceof RESTAPIException) {\n                    this.displayAlert(this.translate.instant(\"sync.title\"), this.translate.instant(\"actions.server_not_reachable\"));\n                    this.footerToolbar.removeJob(Job.Synchronize);\n                    return Promise.resolve();\n                }\n                return Promise.reject(error);\n\n            }).catch((message) => {\n                this.footerToolbar.removeJob(Job.Synchronize);\n                if (message) {\n                    Log.error(this, message);\n                    this.displayAlert(this.translate.instant(\"sync.title\"), this.translate.instant(\"sync.sync_incomplete\"));\n                } else {\n                    this.displayAlert(this.translate.instant(\"sync.title\"), this.translate.instant(\"sync.sync_incomplete\"))\n                }\n            });\n    }\n\n    protected displaySuccessToast() {\n        let toast = this.toast.create({\n            message: this.translate.instant(\"sync.success\"),\n            duration: 3000\n        });\n        toast.present();\n    }\n\n    protected displayAlert(title: string, message: string) {\n        let alert = this.alert.create({\n            title: title,\n            message: message,\n        });\n        alert.present();\n    }\n\n    /**\n     * Execute primary action of given object\n     * @param iliasObject\n     */\n    public onClick(iliasObject: ILIASObject) {\n        if (this.actionSheetActive) return;\n        let primaryAction = this.getPrimaryAction(iliasObject);\n        this.executeAction(primaryAction);\n        // When executing the primary action, we reset the isNew state\n        if (iliasObject.isNew || iliasObject.isUpdated) {\n            iliasObject.isNew = false;\n            iliasObject.isUpdated = false;\n            iliasObject.save();\n        }\n    }\n\n    /**\n     * Returns the primary action for the given object\n     * @param iliasObject\n     * @returns {ILIASObjectAction}\n     */\n    protected getPrimaryAction(iliasObject: ILIASObject): ILIASObjectAction {\n\n        if (iliasObject.isLinked()) {\n          return new OpenObjectInILIASAction(this.translate.instant(\"actions.view_in_ilias\"), new ILIASLinkBuilder(iliasObject.link), this.urlConverter, this.browser);\n        }\n\n        if (iliasObject.isContainer()) {\n            return new ShowObjectListPageAction(this.translate.instant(\"actions.show_object_list\"), iliasObject, this.nav);\n        }\n        if (iliasObject.type == 'file') {\n            return new DownloadAndOpenFileExternalAction(this.translate.instant(\"actions.download_and_open_in_external_app\"), iliasObject, this.file, this.translate, this.alert);\n        }\n\n        return new OpenObjectInILIASAction(this.translate.instant(\"actions.view_in_ilias\"), new ILIASLinkBuilder(iliasObject.link), this.urlConverter, this.browser);\n    }\n\n    /**\n     * Show the action sheet for the given object\n     * @param iliasObject\n     */\n    public showActions(iliasObject: ILIASObject) {\n        this.actionSheetActive = true;\n        // let actions = this.objectActions.getActions(object, ILIASObjectActionsService.CONTEXT_ACTION_MENU);\n        const actions: ILIASObjectAction[] = [\n            new ShowDetailsPageAction(this.translate.instant(\"actions.show_details\"), iliasObject, this.nav),\n            new OpenObjectInILIASAction(this.translate.instant(\"actions.view_in_ilias\"), new ILIASLinkBuilder(iliasObject.link), this.urlConverter, this.browser)\n        ];\n        if (!iliasObject.isFavorite) {\n            actions.push(new MarkAsFavoriteAction(this.translate.instant(\"actions.mark_as_favorite\"), iliasObject));\n        } else if (iliasObject.isFavorite) {\n            actions.push(new UnMarkAsFavoriteAction(this.translate.instant(\"actions.unmark_as_favorite\"), iliasObject));\n        }\n\n        if (iliasObject.isContainer() && !iliasObject.isLinked() || iliasObject.type == 'file') {\n            if (!iliasObject.isOfflineAvailable) {\n                actions.push(new MarkAsOfflineAvailableAction(this.translate.instant(\"actions.mark_as_offline_available\"), iliasObject, this.dataProvider, this.sync, this.modal));\n            } else if (iliasObject.isOfflineAvailable && iliasObject.offlineAvailableOwner != ILIASObject.OFFLINE_OWNER_SYSTEM) {\n                actions.push(new UnMarkAsOfflineAvailableAction(this.translate.instant(\"actions.unmark_as_offline_available\"), iliasObject));\n                actions.push(new SynchronizeAction(this.translate.instant(\"actions.synchronize\"), iliasObject, this.sync, this.modal, this.translate));\n            }\n            actions.push(new RemoveLocalFilesAction(this.translate.instant(\"actions.remove_local_files\"), iliasObject, this.file, this.translate));\n        }\n\n        const buttons: Array<ActionSheetButton> = actions.map(action => {\n\n           return <ActionSheetButton>{\n            text: action.title,\n            handler: () => {\n              this.actionSheetActive = false;\n              // This action displays an alert before it gets executed\n              if (action.alert()) {\n                let alert = this.alert.create({\n                  title: action.alert().title,\n                  subTitle: action.alert().subTitle,\n                  buttons: [\n                    {\n                      text: this.translate.instant(\"cancel\"),\n                      role: 'cancel'\n                    },\n                    {\n                      text: 'Ok',\n                      handler: () => {\n                        this.executeAction(action);\n                      }\n                    }\n                  ]\n                });\n                alert.present();\n              } else {\n                this.executeAction(action);\n              }\n            }\n          };\n\n        });\n\n        buttons.push(<ActionSheetButton>{\n            text: this.translate.instant(\"cancel\"),\n            role: 'cancel',\n            handler: () => {\n                this.actionSheetActive = false;\n            }\n        });\n\n      let options: ActionSheetOptions = {\n        title: iliasObject.title,\n        buttons: buttons\n      };\n        let actionSheet = this.actionSheet.create(options);\n        actionSheet.onDidDismiss(() => {\n            this.actionSheetActive = false;\n        });\n        actionSheet.present();\n    }\n\n\n    protected handleActionResult(result) {\n        if (!result) return;\n        if (result instanceof ILIASObjectActionSuccess) {\n            if (result.message) {\n                let toast = this.toast.create({\n                    message: result.message,\n                    duration: 3000\n                });\n                toast.present();\n            }\n        }\n    }\n\n    public initEventListeners(): void {\n        // We want to refresh after a synchronization.\n        this.events.subscribe(\"sync:complete\", () => {\n            this.loadObjects();\n        });\n    }\n\n    public executeAction(action: ILIASObjectAction): void {\n        var hash = action.instanceId();\n        this.footerToolbar.addJob(hash, \"\");\n        action.execute().then((result) => {\n            this.handleActionResult(result);\n            this.calculateChildrenMarkedAsNew();\n            this.footerToolbar.removeJob(hash);\n        }).catch((error: CantOpenFileTypeException) => {\n            if (error instanceof CantOpenFileTypeException) {\n                this.showAlert(this.translate.instant(\"actions.cant_open_file\"));\n                this.footerToolbar.removeJob(hash);\n                return Promise.resolve();\n            }\n            return Promise.reject(error);\n        }).catch((error) => {\n            Log.error(this, error);\n            if (error instanceof NoWLANException) {\n                this.footerToolbar.removeJob(Job.Synchronize);\n                this.displayAlert(this.translate.instant(\"sync.title\"), this.translate.instant(\"sync.stopped_no_wlan\"));\n                return Promise.resolve();\n            }\n            return Promise.reject(error);\n        }).catch(error => {\n            if (error instanceof OfflineException) {\n                this.showAlert(this.translate.instant(\"actions.offline_and_no_local_file\"));\n                this.footerToolbar.removeJob(hash);\n                return Promise.resolve();\n            }\n            return Promise.reject(error);\n        }).catch(error => {\n            if (error instanceof RESTAPIException) {\n                this.showAlert(this.translate.instant(\"actions.server_not_reachable\"));\n                this.footerToolbar.removeJob(hash);\n                return Promise.resolve();\n            }\n            return Promise.reject(error);\n\n        }).catch((message) => {\n            if (message) {\n                Log.describe(this, \"action gone wrong: \", message);\n            }\n\n            this.showAlert(this.translate.instant(\"something_went_wrong\"));\n            this.footerToolbar.removeJob(hash);\n        });\n    }\n\n    protected showAlert(message) {\n        let alert = this.alert.create({\n            title: message,\n            buttons: [\n                {\n                    text: this.translate.instant(\"close\"),\n                    role: 'cancel'\n                }\n            ]\n        });\n        alert.present();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/object-list/object-list.ts","import {NavController} from \"ionic-angular/index\";\nimport {ObjectDetailsPage} from \"../pages/object-details/object-details\";\nimport {ILIASObject} from \"../models/ilias-object\";\nimport {ILIASObjectAction, ILIASObjectActionAlert} from \"./object-action\";\nimport {ILIASObjectActionResult} from \"./object-action\";\nimport {ILIASObjectActionNoMessage} from \"./object-action\";\n\nexport class ShowDetailsPageAction extends ILIASObjectAction {\n\n    public constructor(public title:string, public object:ILIASObject, public nav:NavController) {\n        super();\n    }\n\n    public execute():Promise<ILIASObjectActionResult> {\n        return new Promise((resolve, reject) => {\n            this.nav.push(ObjectDetailsPage, {object: this.object}).then(() => {\n                resolve(new ILIASObjectActionNoMessage());\n            }).catch(error =>{\n                reject(error);\n            });\n        });\n    }\n\n    public alert():ILIASObjectActionAlert|any {\n        return null;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/actions/show-details-page-action.ts","import {ILIASObject} from \"../models/ilias-object\";\nimport {ILIASObjectAction, ILIASObjectActionAlert} from \"./object-action\";\nimport {ILIASObjectActionNoMessage} from \"./object-action\";\nimport {ILIASObjectActionResult} from \"./object-action\";\n\nexport class MarkAsFavoriteAction extends ILIASObjectAction {\n\n    public constructor(public title:string,\n                       public object:ILIASObject) {\n        super();\n    }\n\n    public execute():Promise<ILIASObjectActionResult> {\n\n            this.object.isFavorite = true;\n            return this.object.save()\n                .then( () => Promise.resolve(new ILIASObjectActionNoMessage()) );\n    }\n\n    public alert():ILIASObjectActionAlert|any {\n        return null;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/actions/mark-as-favorite-action.ts","import {ILIASObject} from \"../models/ilias-object\";\nimport {ILIASObjectAction, ILIASObjectActionAlert} from \"./object-action\";\nimport {Log} from \"../services/log.service\";\nimport {ILIASObjectActionNoMessage} from \"./object-action\";\nimport {ILIASObjectActionResult} from \"./object-action\";\nimport {DataProvider} from \"../providers/data-provider.provider\";\nimport {ActiveRecord} from \"../models/active-record\";\nimport {User} from \"../models/user\";\nimport {SynchronizationService} from \"../services/synchronization.service\";\nimport {SyncFinishedModal} from \"../pages/sync-finished-modal/sync-finished-modal\";\nimport {ModalController} from \"ionic-angular\";\n\nexport class MarkAsOfflineAvailableAction extends ILIASObjectAction {\n\n    public constructor(public title:string, public object:ILIASObject, public dataProvider:DataProvider, public syncService: SynchronizationService, public modal: ModalController) {\n        super();\n        this.object = object;\n    }\n\n    public execute():Promise<ILIASObjectActionResult> {\n        this.object.isOfflineAvailable = true;\n        this.object.offlineAvailableOwner = ILIASObject.OFFLINE_OWNER_USER;\n        this.object.needsDownload = true;\n\n        // Recursively mark children as offline available\n        return User.find(this.object.userId)\n            .then( user => this.dataProvider.getObjectData(this.object, user, true, false) )\n            .then( (children) => {\n                var promises = [];\n                children.forEach(child => {\n                    promises.push(this.setChildToOfflineAvailable(child));\n                });\n\n                return Promise.resolve(promises);\n            })\n            .then( () => this.object.needsDownload = true )\n            .then( () => this.object.save() )\n            .then( () => this.syncService.execute(this.object))\n            .then( (syncResult) =>  {\n                if(syncResult.objectsLeftOut.length > 0 ) {\n                    let syncModal = this.modal.create(SyncFinishedModal, {syncResult: syncResult});\n                    syncModal.present();\n                }\n            }).then( () => Promise.resolve(new ILIASObjectActionNoMessage()) )\n    }\n\n    public alert():ILIASObjectActionAlert|any {\n        return null;\n    }\n\n    /**\n     * Recursively sets children of given object to \"offline available\"\n     * Note: We don't wait for the async ILIASObject::save() operation here\n     * @param iliasObject\n     */\n    protected setChildrenToOfflineAvailable(iliasObject:ILIASObject) {\n        ILIASObject.findByParentRefId(iliasObject.refId, iliasObject.userId).then(children => {\n            for (let child of children) {\n                this.setChildToOfflineAvailable(child).catch(error => {Log.error(this, error);});\n                this.setChildrenToOfflineAvailable(child);\n            }\n        });\n    }\n\n    protected setChildToOfflineAvailable(child:ILIASObject):Promise<ActiveRecord> {\n        child.isOfflineAvailable = true;\n        child.offlineAvailableOwner = ILIASObject.OFFLINE_OWNER_SYSTEM;\n\n        return child.save();\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/actions/mark-as-offline-available-action.ts","import {ILIASObject} from \"../models/ilias-object\";\nimport {ILIASObjectAction, ILIASObjectActionAlert} from \"./object-action\";\nimport {ILIASObjectActionResult} from \"./object-action\";\nimport {ILIASObjectActionNoMessage} from \"./object-action\";\n\nexport class UnMarkAsOfflineAvailableAction extends ILIASObjectAction {\n\n    public constructor(public title:string,\n                       public object:ILIASObject) {\n        super();\n    }\n\n    public execute():Promise<ILIASObjectActionResult> {\n        return new Promise((resolve, reject) => {\n            this.object.isOfflineAvailable = false;\n            this.object.offlineAvailableOwner = null;\n            this.unmarkChildrenAsOfflineAvailable(this.object);\n            this.object.save().then(() => {\n                resolve(new ILIASObjectActionNoMessage());\n            }).catch(error =>{\n                reject(error);\n            });\n        });\n    }\n\n    public alert():ILIASObjectActionAlert|any {\n        return null;\n    }\n\n    /**\n     * Recursively unsets children of given object to \"offline available\"\n     * Note: We don't wait for the async ILIASObject::save() operation here\n     * @param iliasObject\n     */\n    public unmarkChildrenAsOfflineAvailable(iliasObject:ILIASObject) {\n        ILIASObject.findByParentRefId(iliasObject.refId, iliasObject.userId).then(children => {\n            for (let child of children) {\n                child.isOfflineAvailable = false;\n                child.offlineAvailableOwner = null;\n                child.save();\n                this.unmarkChildrenAsOfflineAvailable(child);\n            }\n        });\n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/actions/unmark-as-offline-available-action.ts","import {ILIASObject} from \"../models/ilias-object\";\nimport {ILIASObjectAction, ILIASObjectActionAlert} from \"./object-action\";\nimport {SynchronizationService} from \"../services/synchronization.service\";\nimport {ILIASObjectActionResult} from \"./object-action\";\nimport {ILIASObjectActionSuccess} from \"./object-action\";\nimport {ModalController} from \"ionic-angular\";\nimport {TranslateService} from \"ng2-translate/ng2-translate\";\nimport {ILIASObjectActionNoMessage} from \"./object-action\";\nimport {SyncFinishedModal} from \"../pages/sync-finished-modal/sync-finished-modal\";\n\nexport class SynchronizeAction extends ILIASObjectAction {\n\n    public constructor(public title:string,\n                       public object:ILIASObject,\n                       public sync:SynchronizationService,\n                        public modal: ModalController,\n                        public translate:TranslateService) {\n        super();\n    }\n\n    public execute():Promise<ILIASObjectActionResult> {\n            return this.sync.execute(this.object).then((syncResult) => {\n                if(syncResult.objectsLeftOut.length > 0 ){\n                    let syncModal = this.modal.create(SyncFinishedModal, {syncResult: syncResult});\n                    syncModal.present();\n                    return Promise.resolve(new ILIASObjectActionNoMessage());\n                } else {\n                    return Promise.resolve(new ILIASObjectActionSuccess(this.translate.instant(\"sync.object_synced\", {title: this.object.title} )));\n                }\n            });\n    }\n\n    public alert():ILIASObjectActionAlert|any {\n        return null;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/actions/synchronize-action.ts","import {ILIASObject} from \"../models/ilias-object\";\nimport {ILIASObjectAction, ILIASObjectActionAlert, ILIASObjectActionSuccess} from \"./object-action\";\nimport {FileService} from \"../services/file.service\";\nimport {ILIASObjectActionResult} from \"./object-action\";\nimport {TranslateService} from \"ng2-translate/ng2-translate\";\n\nexport class RemoveLocalFilesAction extends ILIASObjectAction {\n\n    public constructor(public title:string, public containerObject:ILIASObject, public file:FileService, public translate:TranslateService) {\n        super();\n    }\n\n    public execute():Promise<ILIASObjectActionResult> {\n        return this.file.removeRecursive(this.containerObject)\n            .then(() => new ILIASObjectActionSuccess(this.translate.instant(\"actions.removed_local_files\")));\n    }\n\n    public alert():ILIASObjectActionAlert {\n        return {\n            title: this.translate.instant('actions.remove_local_files_in', {title: this.containerObject.title}),\n            subTitle: this.translate.instant('actions.remove_local_files_in_text'),\n        }\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/actions/remove-local-files-action.ts","import {ILIASObject} from \"../models/ilias-object\";\nimport {ILIASObjectAction, ILIASObjectActionAlert} from \"./object-action\";\nimport {FileService} from \"../services/file.service\";\nimport {Log} from \"../services/log.service\";\nimport {TranslateService} from \"ng2-translate/ng2-translate\";\nimport {AlertController} from \"ionic-angular/index\";\nimport {Settings} from \"../models/settings\";\nimport {ILIASObjectActionResult} from \"./object-action\";\nimport {ILIASObjectActionSuccess} from \"./object-action\";\nimport {ILIASObjectActionNoMessage} from \"./object-action\";\nimport {OfflineException} from \"../exceptions/OfflineException\";\n\nexport class DownloadAndOpenFileExternalAction extends ILIASObjectAction {\n\n    public constructor(public title:string,\n                       public fileObject:ILIASObject,\n                       public file:FileService,\n                       public translate:TranslateService,\n                       public alerter:AlertController) {\n        super();\n        this.title = title;\n    }\n\n    public execute():Promise<ILIASObjectActionResult> {\n\n        // Download is only executed if a newer version is available in ILIAS\n        Log.write(this, \"Do we need to download the file first? \", this.fileObject.needsDownload)\n        if (this.fileObject.needsDownload && this.file.isOffline())\n            return Promise.reject(new OfflineException());\n\n        else if(this.fileObject.needsDownload)\n            return Settings.findByUserId(this.fileObject.userId)\n                .then( settings => this.checkWLANAndDownload(settings) );\n\n        else\n            return this.open(this.fileObject);\n    }\n\n    protected open(fileObject:ILIASObject):Promise<any> {\n            return this.file.open(fileObject);\n    }\n\n    private checkWLANAndDownload(settings):Promise<ILIASObjectActionResult> {\n        return new Promise((resolve, reject) => {\n            if (settings.shouldntDownloadBecauseOfWLAN()) {\n                let alert = this.alerter.create({\n                    title: this.translate.instant(\"actions.download_without_wlan\"),\n                    subTitle: this.translate.instant(\"actions.download_without_wlan_continue\"),\n                    buttons: [\n                        {\n                            text: this.translate.instant(\"cancel\"),\n                            role: 'cancel',\n                            handler: () => {\n                                resolve(new ILIASObjectActionNoMessage());\n                            }\n                        },\n                        {\n                            text: 'Ok',\n                            handler: () => {\n                                this.checkExceedDiskQuota(settings).then((res) => resolve(res)).catch(err => reject(err));\n                            }\n                        }\n                    ]\n                });\n                alert.present();\n            } else {\n                this.checkExceedDiskQuota(settings).then((res) => resolve(res)).catch(err => reject(err));\n            }\n        });\n    };\n\n    /**\n     * Download the file.\n     * If we might exeed the disk quota we warn the user and ask him for permission.\n     * @param settings\n     * @returns {Promise<T>}\n     */\n    public checkExceedDiskQuota(settings:Settings):Promise<any> {\n        return new Promise((resolve, reject) => {\n            settings.quotaExceeds(this.fileObject).then(tooBig => {\n                if (tooBig) {\n                    let alert = this.alerter.create({\n                        title: this.translate.instant(\"actions.download_without_disk_quota\"),\n                        subTitle: this.translate.instant(\"actions.download_without_disk_quota_text\"),\n                        buttons: [\n                            {\n                                text: this.translate.instant(\"cancel\"),\n                                role: 'cancel',\n                                handler: () => {\n                                    resolve(new ILIASObjectActionNoMessage());\n                                }\n                            },\n                            {\n                                text: 'Ok',\n                                handler: () => {\n                                    this.checkFileTooBigAndDownload(settings).then((res) => resolve(res)).catch(err => reject(err));\n                                }\n                            }\n                        ]\n                    });\n                    alert.present();\n                } else {\n                    this.checkFileTooBigAndDownload(settings).then((res) => resolve(res)).catch(err => reject(err));\n                }\n            });\n        });\n    }\n\n    /**\n     * Download the file.\n     * If we might exeed the disk quota we warn the user and ask him for permission.\n     * @param settings\n     * @returns {Promise<T>}\n     */\n    public checkFileTooBigAndDownload(settings:Settings):Promise<any> {\n        return new Promise((resolve, reject) => {\n            if (settings.fileTooBig(this.fileObject)) {\n                let alert = this.alerter.create({\n                    title: this.translate.instant(\"actions.download_with_file_too_big\"),\n                    subTitle: this.translate.instant(\"actions.download_with_file_too_big_text\"),\n                    buttons: [\n                        {\n                            text: this.translate.instant(\"cancel\"),\n                            role: 'cancel',\n                            handler: () => {\n                                resolve(new ILIASObjectActionNoMessage());\n                            }\n                        },\n                        {\n                            text: 'Ok',\n                            handler: () => {\n                                this.downloadAndOpen().then((res) => resolve(res)).catch(err => reject(err));\n                            }\n                        }\n                    ]\n                });\n                alert.present();\n            } else {\n                this.downloadAndOpen().then((res) => resolve(res)).catch(err => reject(err));\n            }\n        });\n    }\n\n    public downloadAndOpen():Promise<any> {\n        return this.file.download(this.fileObject, true)\n            .then(() => this.file.open(this.fileObject))\n            .then(() => new ILIASObjectActionSuccess(this.translate.instant(\"actions.download_successful\")));\n    };\n\n    public alert():ILIASObjectActionAlert {\n        return null;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/actions/download-and-open-file-external-action.ts","import {Injectable} from '@angular/core';\nimport {DownloadProgress} from \"./file.service\";\nimport {Log} from \"./log.service\";\n\n@Injectable()\nexport class FooterToolbarService {\n\n    private _offline: boolean = false;\n\n    public constructor() {\n    }\n\n    protected _isLoading: boolean = false;\n    protected _loadingText: string = '';\n    protected _buttons: Array<{label: string, icon: string, handler: any}> = [];\n    protected _jobs: {id: number, text: string}[] = [];\n    protected _jobsProgress: {[id: number]: DownloadProgress} = {};\n\n    public get isLoading() {\n        return this._isLoading;\n    }\n\n    public addJob(id: number, text: string) {\n        this.spliceId(id);\n        this._jobs.push({id: id, text: text});\n        this.updateLoading();\n    }\n\n    public removeJob(id: number) {\n        this.spliceId(id);\n        this.updateLoading();\n    }\n\n    /**\n     * this method removes all occurences of the job with id.\n     * @param id\n     */\n    private spliceId(id: number) {\n        for (let key in this._jobs) {\n            if (this._jobs[key].id == id) {\n                this._jobs.splice((<any> key), 1);\n            }\n        }\n    };\n\n    protected updateLoading() {\n        var jobs = this.countJobs();\n        Log.write(this, \"number of jobs running: \", this.countJobs());\n        Log.write(this, \"Currently running jobs: \", this._jobs);\n        if (jobs > 0) {\n            this._isLoading = true;\n            this._loadingText = this.getCurrentText();\n        } else {\n            this._isLoading = false;\n            this._loadingText = '';\n        }\n    }\n\n    protected getCurrentText(): string {\n        // with the slice we make sure the last element is not popped from the original array.\n        if (this._jobs.slice(-1).pop()) {\n            let job: {id: number, text: string} = this._jobs.slice(-1).pop();\n            return job.text;\n        }\n        else\n            return \"\";\n    }\n\n    protected countJobs(): number {\n        return this._jobs.length;\n    }\n\n    public get loadingText() {\n        return this._loadingText;\n    }\n\n    get offline(): boolean {\n        return this._offline;\n    }\n\n    set offline(value: boolean) {\n        this._offline = value;\n    }\n}\n\n// Positive Ids are reserved for Jobs that have an ID related to the ILIAS object id.\nexport enum Job {\n    DeleteFilesTree = -1,\n    MarkFiles = -2,\n    FileDownload = -3,\n    Synchronize = -4,\n    DeleteFilesSettings = -5,\n    DesktopAction = -6,\n    LoadFavorites = -7,\n    LoadNewObjects = -8,\n    MetaDataFetch = -1,\n}\n\n\n// WEBPACK FOOTER //\n// ./src/services/footer-toolbar.service.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 151;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/@angular lazy\n// module id = 151\n// module chunks = 0","import {SQLite, SQLiteDatabaseConfig, SQLiteObject} from '@ionic-native/sqlite';\nimport {Log} from \"./log.service\";\n\nexport interface DatabaseService {\n    query(sql:string, params?:Array<any>):Promise<any>;\n}\n\n/**\n * Abstracts access to database (SQLite)\n */\nexport class SQLiteDatabaseService implements DatabaseService {\n\n    public static _instance:SQLiteDatabaseService;\n    static  SQLITE: SQLite;\n\n    public DB_NAME = 'ilias_app';\n    private database: SQLiteObject;\n\n  private constructor() {}\n\n  /**\n     * Return singleton instance of DatabaseService\n     *\n     * @returns {DatabaseService}\n     * @deprecated Since version 1.1.0. Will be deleted in version 2.0.0. Use angular injection instead.\n     */\n    static instance():Promise<SQLiteDatabaseService> {\n        if (SQLiteDatabaseService._instance != null) {\n            return Promise.resolve(SQLiteDatabaseService._instance);\n        }\n\n        SQLiteDatabaseService._instance = new SQLiteDatabaseService();\n        return SQLiteDatabaseService._instance.initDatabase().then(\n            () => Promise.resolve(SQLiteDatabaseService._instance));\n    }\n\n    private openDatabase():Promise<SQLiteObject> {\n        return new Promise((resolve, reject) => {\n\n            if ((<any> window).cordova) {\n                Log.write(this, \"using database cordova plugin.\");\n                Log.write(this, \"opening DB.\");\n\n                let config: SQLiteDatabaseConfig = {\n                  name: this.DB_NAME,\n                  location: \"default\"\n                };\n\n                SQLiteDatabaseService.SQLITE.create(config)\n                  .then( (db) => {\n                    Log.write(this, \"database opened\");\n                   resolve(db);\n                  }).catch((err) => {\n                    console.error('Unable to open database: ', err);\n                    reject(err);\n                  });\n            } else {\n                let database = (<any> window).openDatabase(this.DB_NAME, '1.0', this.DB_NAME, 1024 * 1024 * 100); // browser\n                if(database) {\n                    resolve(database);\n                } else {\n                    Log.error(this, \"Unable to open database\");\n                    reject(\"Unable to open database\");\n                }\n            }\n        });\n    }\n\n    private initDatabase():Promise<any> {\n        Log.write(this, \"Initializing database.\");\n        return new Promise((resolve, reject) => {\n        \tthis.openDatabase().then(db => {\n                Log.describe(this, \"database inited with: \", db);\n                this.database = db;\n                resolve(db);\n            }).catch( err => {\n                Log.error(this, err);\n                reject(err);\n            })\n        });\n    }\n\n    /**\n     * Execute SQL statement\n     * @param sql SQL statement as string, values can be escaped with \"?\"\n     * @param params Array holding the values escaped in the SQL string, in the same order\n     * @returns {Promise<any>}\n     */\n    query(sql:string, params = []):Promise<any> {\n        if ((<any> window).cordova) {\n          return this.database.executeSql(sql, params);\n        } else {\n            return new Promise((resolve, reject) => {\n                this.database.transaction((tx) => {\n                    tx.executeSql(sql, params, (tx, res) =>{\n                        resolve(res);\n                    });\n                });\n            });\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/database.service.ts","import {ActiveRecord, SQLiteConnector} from \"./active-record\";\nimport {SQLiteDatabaseService} from \"../services/database.service\";\nimport {ILIASObjectPresenter} from \"../presenters/object-presenter\";\nimport {ILIASObjectPresenterFactory} from \"../presenters/presenter-factory\";\nimport {FileData} from \"./file-data\";\nimport {Log} from \"../services/log.service\";\n\nexport class ILIASObject extends ActiveRecord {\n\n    // A nice technique to simulate class constants :) ILIASObject.OFFLINE_OWNER_USER => 'user'\n    public static get OFFLINE_OWNER_USER(): string {\n        return 'user';\n    }\n\n    public static get OFFLINE_OWNER_SYSTEM(): string {\n        return 'system';\n    }\n\n    /**\n     * Internal user-ID\n     */\n    public userId: number;\n\n    /**\n     * ILIAS Object-ID\n     */\n    public objId: number;\n\n    /**\n     * ILIAS Ref-ID\n     */\n    public refId: number;\n\n    /**\n     * Ref-ID of parent in tree\n     */\n    public parentRefId: number;\n\n    /**\n     * ILIAS object type\n     */\n    public type: string;\n\n    /**\n     * ILIAS object title\n     */\n    public title: string;\n\n    /**\n     * ILIAS object description\n     */\n    public description: string;\n\n    /**\n     * Static link to object in ILIAS\n     */\n    public link: string;\n\n    /**\n     * Repository path in json.\n     */\n    public _repoPath: string;\n\n    /**\n     * True if object is marked as \"offline available\"\n     */\n    public isOfflineAvailable: boolean;\n\n    /**\n     * The owner that was setting this object to \"offline available\", either 'user' or 'system'\n     */\n    public offlineAvailableOwner: string;\n\n    /**\n     * Object is marked as new\n     */\n    public isNew: boolean;\n\n    /**\n     * Object is marked as updated\n     */\n    public isUpdated: boolean;\n\n    /**\n     * Object is marked as favorite\n     */\n    public isFavorite: boolean;\n\n    /**\n     * Is true iff aditional resources need to be downloaded before this object is offline available.\n     */\n    public needsDownload: boolean;\n\n    public newSubItems: number = 0;\n\n    public hasPageLayout: boolean = false;\n\n    public hasTimeline: boolean = false;\n\n    public permissionType: string = \"\";\n\n    /**\n     * Holds additional data as JSON string that must be accessed in a synchronous way, e.g. FileData\n     */\n    protected _data: string;\n\n    protected order: {[type: string]: number} = {\n        \"crs\" : 1,\n        \"grp\" : 2,\n        \"fold\": 3,\n        \"file\": 4\n    };\n\n    public static objectsCache: {[id: number]: ILIASObject} = {};\n    public static promiseCache: {[id: number]: Promise<ILIASObject>} = {};\n\n    public createdAt: string;\n    public updatedAt: string;\n\n    protected _presenter: ILIASObjectPresenter;\n\n    constructor(id = 0) {\n        super(id, new SQLiteConnector('objects', [\n            'userId',\n            'objId',\n            'refId',\n            'parentRefId',\n            'type',\n            'title',\n            'description',\n            'link',\n            'isOfflineAvailable',\n            'offlineAvailableOwner',\n            'isNew',\n            'isUpdated',\n            'isFavorite',\n            'data',\n            'repoPath',\n            'createdAt',\n            'updatedAt',\n            'needsDownload',\n            'hasPageLayout',\n            'hasTimeline',\n            'permissionType'\n        ]));\n    }\n\n    /**\n     * Returns additional data as object\n     * @returns {object}\n     */\n    public get data(): any {\n        if (this._data) {\n            try {\n                return JSON.parse(this._data);\n            } catch (e) {\n                return {}\n            }\n        }\n\n        return {};\n    }\n\n    public set data(data) {\n        if (typeof data === 'string') {\n            this._data = data;\n        } else if (typeof data === 'object' && data !== null) {\n            this._data = JSON.stringify(data);\n        }\n    }\n\n    /**\n     * Returns additional data as object\n     * @returns {object}\n     */\n    public get repoPath(): string[]|string {\n        if (this._repoPath) {\n            try {\n                return JSON.parse(this._repoPath);\n            } catch (e) {\n                Log.error(this, \"Could not get json from: \" + this._repoPath);\n                return [];\n            }\n        }\n\n        return [];\n    }\n\n    public set repoPath(path: string[]|string) {\n        if (typeof path === 'string') {\n            this._repoPath = path;\n        } else if (path !== null) {\n            this._repoPath = JSON.stringify(path);\n        } else if ( path === null) {\n            this._repoPath = null;\n        }else {\n            Log.describe(this, \"repo path is: \", path)\n            throw new Error(\"Please provide a string or a list of strings for repoPath in ilias-object.ts\");\n        }\n    }\n\n\n    /**\n     * @returns {boolean}\n     */\n    public isContainer(): boolean {\n        return (['crs', 'grp', 'fold'].indexOf(this.type) > -1);\n    }\n\n  /**\n   * @returns {boolean} true if the object has permission visible, otherwise false\n   */\n  public isLinked(): boolean {\n      return this.permissionType == \"visible\";\n    }\n\n    /**\n     * @returns {ILIASObjectPresenter}\n     */\n    public get presenter(): ILIASObjectPresenter {\n        if (!this._presenter) {\n            this._presenter = ILIASObjectPresenterFactory.instance(this);\n        }\n\n        return this._presenter;\n    }\n\n    /**\n     * Returns the root parent, e.g. the top container (course or group) or null\n     */\n    public getRootParent(): Promise<ILIASObject> {\n        return this.getParentsChain()\n            .then(chain => Promise.resolve(chain[0]));\n    }\n\n    public get rootParent(): Promise<String> {\n        return this.getRootParent().then(object => object.title);\n    }\n\n    public getParentsChain(): Promise<ILIASObject[]> {\n        return this.parent.then(parentObject => {\n            if (!parentObject) {\n                return <Promise<ILIASObject[]>> Promise.resolve([this]);\n            } else {\n                return parentObject.getParentsChain()\n                    .then(chain => {\n                        chain.push(this);\n                        return Promise.resolve(chain);\n                    })\n            }\n        });\n    }\n\n    /**\n     *\n     * @returns {Promise<string>}\n     */\n    public getParentsTitleChain(): Promise<string[]> {\n        return this.getParentsChain()\n            .then(items => items.map((item) => item.title));\n    }\n\n    /**\n     * Returns the objects parent or null, if no parent is available\n     * @returns {Promise<ILIASObject>}\n     */\n    public get parent(): Promise<ILIASObject> {\n        return new Promise((resolve, reject) => {\n            ILIASObject.findByRefId(this.parentRefId, this.userId).then(parentObject => {\n                if (parentObject.id) {\n                    resolve(parentObject);\n                } else {\n                    resolve(null);\n                }\n            });\n        });\n    }\n\n\n    /**\n     * Find ILIAS-Object by primary ID, returns a Promise resolving the fully loaded ILIASObject object\n     * @param id\n     * @returns {Promise<ILIASObject>}\n     */\n    static find(id: number): Promise<ILIASObject> {\n\n        // If we already have the object, just return it.\n        if (ILIASObject.objectsCache[id]) {\n            return Promise.resolve(ILIASObject.objectsCache[id]);\n        }\n\n        //if the object is currently loading.\n        if (ILIASObject.promiseCache[id]) {\n            return new Promise((resolve, reject) => {\n                ILIASObject.promiseCache[id].then(() => {\n                    resolve(ILIASObject.objectsCache[id]);\n                });\n            });\n        }\n\n        //if the object needs to be loaded\n        let iliasObject = new ILIASObject(id);\n        let promise = iliasObject.read().then(() => {\n            //save the object into cache\n            ILIASObject.objectsCache[id] = iliasObject;\n            //we are no longer loading the object.\n            delete ILIASObject.promiseCache[id];\n            return Promise.resolve(iliasObject);\n        });\n\n        //we save the promise so that we are aware that we are currently loading this object.\n        ILIASObject.promiseCache[id] = promise;\n        return promise;\n    }\n\n    /**\n     * Find ILIAS-Object by Ref-ID for the given user-ID. If no Object is existing, returns a new instance!\n     *\n     * To check whether an existing object is returned or a new instance, check the id:\n     * ILIASObject.findByRefId(150, 1).then((object) => {\n     *   if (object.id > 0) {\n     *     alert('exists');\n     *   } else {\n     *     alert('new');\n     *   }\n     * });\n     *\n     * @param refId\n     * @param userId\n     * @returns {Promise<ILIASObject>}\n     */\n    public static findByRefId(refId: number, userId: number): Promise<ILIASObject> {\n        return SQLiteDatabaseService.instance()\n            .then(db => db.query('SELECT * FROM objects WHERE refId = ? AND userId = ?', [refId, userId]))\n            .then((response: any) => {\n                if (response.rows.length == 0) {\n                    let object = new ILIASObject();\n                    object.userId = userId;\n                    return Promise.resolve(object);\n                } else if(response.rows.length == 1) {\n                    return ILIASObject.find(response.rows.item(0).id);\n                } else if(response.rows.length > 1) {\n                    // We find and save the object\n                    let object = null;\n                    let objectPromise =  ILIASObject.find(response.rows.item(0).id)\n                        .then(theObject => object = theObject);\n                    let allPromises = [objectPromise];\n\n                    // We destroy all overdue instances.\n                    for (let i = 1; i < response.rows.length; i++) {\n                        allPromises.push(ILIASObject.find(response.rows.item(i).id)\n                            .then(object => object.destroy()));\n                    }\n\n                    // After finding and deletion we return the found object.\n                    return Promise.all(allPromises)\n                        .then(() => object);\n                }\n            });\n    }\n\n    /**\n     * Get ILIAS objects under a given parentRefId\n     * @param parentRefId\n     * @param userId\n     * @returns {Promise<ILIASObject[]>}\n     */\n    static findByParentRefId(parentRefId: number, userId: number): Promise<ILIASObject[]> {\n        let sql = 'SELECT * FROM objects WHERE parentRefId = ? AND userId = ?';\n        let parameters = [parentRefId, userId];\n        return ILIASObject.queryDatabase(sql, parameters);\n\n    }\n\n    static findNewObjects(userId: number): Promise<ILIASObject[]> {\n        let sql = 'SELECT * FROM objects WHERE userId = ? AND (isNew = ? OR isUpdated = ?)';\n        let parameters = [userId, 1, 1];\n        return ILIASObject.queryDatabase(sql, parameters);\n    }\n\n    protected static queryDatabase(sql: string, parameters: any[]): Promise<ILIASObject[]> {\n        return SQLiteDatabaseService.instance()\n            .then(db => db.query(sql, parameters))\n            .then((response: any) => {\n                let promises = [];\n                for (let i = 0; i < response.rows.length; i++) {\n                    promises.push(ILIASObject.find(response.rows.item(i).id));\n                }\n\n                return Promise.all(promises)\n            });\n    }\n\n    /**\n     * Get ILIAS objects under a given parentRefId, recursive!\n     * @param parentRefId\n     * @param userId\n     * @returns {Promise<ILIASObject[]>}\n     */\n    static findByParentRefIdRecursive(parentRefId: number, userId: number): Promise<ILIASObject[]> {\n        let iliasObjects: ILIASObject[] = [];\n\n        return ILIASObject.findByParentRefId(parentRefId, userId).then(children => {\n            let childrenPromises: Promise<ILIASObject[]>[] = [];\n            children.forEach(child => {\n                iliasObjects.push(child);\n                childrenPromises.push(ILIASObject.findByParentRefIdRecursive(child.refId, userId));\n            });\n            return Promise.all(childrenPromises);\n        }).then(promiseResults => {\n            promiseResults.forEach((list: ILIASObject[]) => {\n                list.forEach(child => {\n                    iliasObjects.push(child);\n                });\n            });\n            return Promise.resolve(iliasObjects);\n        });\n    }\n\n    /**\n     * updates the needsDownload state depending on the object type recursivly. This object and every parent recursively.\n     * @returns {Promise<T>} returns a list of the changed objects\n     */\n    public updateNeedsDownload(childNeedsUpdate = null): Promise<ILIASObject[]> {\n        Log.write(this, \"recursive update needs download. going through: \" + this.title);\n        if (this.type == 'file') {\n            // A file needs to check its file state and then escalate.\n            return FileData.find(this.id).then(fileData => {\n                if (this.id && fileData.isUpdated())\n                    this.isUpdated = true;\n                return this.saveAndEscalateNeedsDownload(fileData.needsDownload());\n            });\n        } else if (this.isContainer()) {\n            //performance improvmente, if a child needs update we certainly need to update too.\n            if(childNeedsUpdate !== null && childNeedsUpdate)\n                return this.saveAndEscalateNeedsDownload(true);\n            // A container needs to check all its children.\n            return ILIASObject.findByParentRefId(this.refId, this.userId).then(objects => {\n                objects = objects.filter(object => {\n                    return object.needsDownload == true;\n                });\n                return this.saveAndEscalateNeedsDownload((objects.length > 0));\n            });\n\n        } else {\n            this.needsDownload = false;\n            return Promise.resolve([]);\n            //we do not need to escalate. we don't even save :-)\n        }\n    }\n\n    /**\n     *\n     * @returns {Promise<T>} return a list of all ILIASObjects touched.\n     */\n    protected saveAndEscalateNeedsDownload(newValue): Promise<ILIASObject[]> {\n        if (newValue == this.needsDownload) {\n            Log.write(this, \"Needs download stays the same for \" + this.title + \". No need for escalation.\");\n            return Promise.resolve([this]);\n        }\n        this.needsDownload = newValue;\n\n        return this.save()\n            .then(() => this.parent)\n            .then((parent) => {\n                if (parent) {\n                    return parent.updateNeedsDownload(this.needsDownload)\n                        .then((objects) => {\n                        objects.push(this);\n                        return Promise.resolve(objects);\n                    });\n                } else {\n                    return Promise.resolve([this]);\n                }\n            });\n    }\n\n    static findByUserId(userId: number): Promise<ILIASObject[]> {\n        let sql = 'SELECT * FROM objects WHERE userId = ?';\n        let parameters = [userId];\n        return ILIASObject.queryDatabase(sql, parameters);\n    }\n\n    /**\n     * returns 0 for crs, 1 for grp, 2 for fold, 3 for file and 9999 for all the rest.\n     * @returns {number}\n     */\n    public getOrderByType() {\n        let a = this.order[this.type];\n        return a ? a : 9999;\n    }\n\n    /**\n     *\n     * @param a ILIASObject\n     * @param b ILIASObject\n     * @returns {number}\n     */\n    public static compare(a, b) {\n        if (a.getOrderByType() != b.getOrderByType()) {\n            return (a.getOrderByType() > b.getOrderByType()) ? 1 : -1;\n        }\n        if (a.type != b.type) {\n            return (a.type > b.type) ? 1 : -1;\n        }\n        if (a.title == b.title) return 0;\n\n        return (a.title > b.title) ? 1 : -1;\n    }\n\n    /**\n     * Deletes the object from the database\n     * Note: delete is a reserved word ;)\n     * @returns {Promise<any>}\n     */\n    public destroy(): Promise<any> {\n        let promise = super.destroy();\n\n        return promise;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/ilias-object.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 193;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 193\n// module chunks = 0","import {ActiveRecord, SQLiteConnector} from \"./active-record\";\nimport {SQLiteDatabaseService} from \"../services/database.service\";\nimport {Settings} from \"./settings\";\nimport {ILIASObject} from \"./ilias-object\";\n\nexport class User extends ActiveRecord {\n\n    /**\n     * The internal user-ID in ILIAS corresponding to the installation given by installationID\n     */\n    public iliasUserId:number;\n\n    /**\n     * The ILIAS username corresponding to the installation given by installationID\n     */\n    public iliasLogin:string;\n\n    /**\n     * The ID of the ILIAS installation\n     */\n    public installationId:number;\n\n    /**\n     * OAuth2 Access-Token to query the ILIAS REST-interface\n     */\n    public accessToken:string;\n\n    /**\n     * OAuth2 Refresh-Token needed in exchange for a new access-token\n     */\n    public refreshToken:string;\n\n    /**\n     * When was the last time we refreshed the access token?\n     */\n    public lastTokenUpdate:number;\n\n    /**\n     * Holds the app settings\n     */\n    protected _settings:Settings;\n\n    constructor(id = 0) {\n        super(id, new SQLiteConnector('users', [\n            'installationId',\n            'iliasUserId',\n            'iliasLogin',\n            'accessToken',\n            'refreshToken',\n            'lastTokenUpdate'\n        ]));\n    }\n\n    /**\n     * Get settings\n     * @returns {Promise<Settings>}\n     */\n    public get settings():Promise<Settings> {\n        if (this._settings) {\n            return Promise.resolve(this._settings);\n        }\n\n        return Settings.findByUserId(this.id);\n    }\n\n\n    /**\n     * Find user by primary ID, returns a Promise resolving the fully loaded user object\n     * @param id\n     * @returns {Promise<User>}\n     */\n    static find(id:number):Promise<User> {\n        let user = new User(id);\n        return user.read()\n          .then(activeRecord => { return activeRecord as User })\n    }\n\n\n    /**\n     * Find user by ILIAS userId and installationId. Returns either existing user or new instance!\n     * @returns {Promise<User>}\n     */\n    static findByILIASUserId(iliasUserId:number, installationId:number):Promise<User> {\n        return new Promise((resolve, reject) => {\n            SQLiteDatabaseService.instance().then(db => {\n                db.query('SELECT * FROM users WHERE iliasUserId = ? AND installationId = ?', [iliasUserId, installationId]).then((response:any) => {\n                    let user = new User();\n                    if (response.rows.length == 0) {\n                        user.iliasUserId = iliasUserId;\n                        user.installationId = installationId;\n                        resolve(user);\n                    } else {\n                        user.readFromObject(response.rows.item(0));\n                        resolve(user);\n                    }\n                }, (error) => {\n                    reject(error);\n                });\n            });\n        });\n    }\n\n\n    /**\n     * Find the active user in the app (accessToken is present). Resolves the promise if found, rejects otherwise\n     * @returns {Promise<User>}\n     */\n    static findActiveUser():Promise<User> {\n        return SQLiteDatabaseService.instance()\n            .then(db => db.query('SELECT * FROM users WHERE accessToken IS NOT NULL'))\n            .then((response:any) => {\n                if (response.rows.length == 0) {\n                    return <Promise<User>> Promise.reject(\"No active user found.\");\n                } else {\n                    let user = new User();\n                    user.readFromObject(response.rows.item(0));\n                    return Promise.resolve(<User> user);\n                }\n            });\n    }\n\n    /**\n     * Returns a promise resolving the current active user. If no active user is found (no user has an accessToken),\n     * the promise is rejected.\n     * @returns {User}\n     */\n    public static currentUser():Promise<User> {\n        if (window['cordova']) {\n            return User.findActiveUser();\n        }\n\n        throw new Error(\"User can not be loaded in browser. This is not possible due the current state of the app.\");\n\n        // Return a fake user when developing in browser\n        // return new Promise((resolve, reject) => {\n        //     User.findActiveUser().then((user) => {\n        //         resolve(user);\n        //     }, () => {\n        //         let user = new User();\n        //         user.iliasLogin = 'root';\n        //         user.accessToken = 'NixkZWZhdWx0LGlsaWFzX3BlZ2FzdXMsYWNjZXNzLCwsMTcxOTM4NTU3NCxsdktPRHBKWXlBSjFueW9CY2dmbzhFS0l1LGE3ZWFlNTVhZDcyOTc1NGNlN2Y5ZDhmODYwNGE2ODU0NGNmYWM1NWNhNWQ2M2Y5N2RlOGI2MGRiYjNmNjFmYWE';\n        //         user.installationId = 5;\n        //         user.iliasUserId = 6;\n        //         user.refreshToken = '';\n        //         user.lastTokenUpdate = Date.now();\n        //         user.save().then((u) => {\n        //             Log.describe(this, \"user saved\", u);\n        //             resolve(u);\n        //         }).catch(err => {\n        //             Log.error(this, err);\n        //             reject(err);\n        //         });\n        //     });\n        // });\n    }\n\n    /**\n     * Deletes the object from the database\n     * Note: delete is a reserved word ;)\n     * @returns {Promise<any>}\n     */\n    public destroy():Promise<any> {\n        return new Promise((resolve, reject) => {\n            let promises = [];\n            ILIASObject.findByUserId(this.id).then(objects => {\n                objects.forEach(object => {\n                    promises.push(object.destroy());\n                });\n            });\n\n            promises.push(super.destroy());\n\n            Promise.all(promises).then(() => {\n                resolve();\n            }).catch(error => {\n                reject(error);\n            });\n        });\n    }\n\n    /**\n     * Find all users of this app\n     */\n    public static findAllUsers():Promise<User[]> {\n       return SQLiteDatabaseService.instance()\n           .then(db => db.query(\"SELECT * FROM users\"))\n           .then((response:any) => {\n               let users = [];\n               for (let i = 0; i < response.rows.length; i++) {\n                   let user = new User();\n                   user.readFromObject(response.rows.item(i));\n                   users.push(user);\n               }\n\n               return Promise.resolve(users);\n           });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/user.ts","import {Exception} from \"./Exception\";\n/**\n * This error is thrown by the sync when you lose WLAN connection and you specified in the options that you only want\n * to download with WLAN.\n */\nexport class NoWLANException extends Exception {\n}\n\n\n// WEBPACK FOOTER //\n// ./src/exceptions/noWLANException.ts","import {Component, Inject} from '@angular/core';\nimport {NavController, ToastController, ToastOptions} from 'ionic-angular';\nimport {Settings} from \"../../models/settings\";\nimport {FooterToolbarService} from \"../../services/footer-toolbar.service\";\nimport {TranslateService} from \"ng2-translate/src/translate.service\";\nimport {Log} from \"../../services/log.service\";\nimport {User} from \"../../models/user\";\nimport {FileData} from \"../../models/file-data\";\nimport {ILIASInstallation} from \"../../config/ilias-config\";\nimport {AlertController} from \"ionic-angular/index\";\nimport {DataProvider} from \"../../providers/data-provider.provider\";\nimport {FileService} from \"../../services/file.service\";\nimport {DesktopItem} from \"../../models/desktop-item\";\nimport {Job} from \"../../services/footer-toolbar.service\";\nimport {ILIAS_CONFIG_FACTORY, ILIASConfigFactory} from \"../../services/ilias-config-factory\";\n\n@Component({\n    templateUrl: 'settings.html'\n})\n\nexport class SettingsPage {\n\n    public settingsMode = 'general';\n\n    public settings: Settings;\n\n    public installationsWithUsers: ILIASInstallation[];\n\n    public totalSize: number = 0;\n\n    /**\n     * Stores the users per installation together with their used disk space on the device\n     */\n    public usersPerInstallation: {[installationId: number]: {user: User, diskSpace: number}[]} = {};\n\n    public loggedInUser:User;\n\n    constructor(public nav: NavController,\n                public toast: ToastController,\n                public footerToolbar: FooterToolbarService,\n                public translate: TranslateService,\n                @Inject(ILIAS_CONFIG_FACTORY)\n                private readonly configFactory: ILIASConfigFactory,\n                public alert: AlertController,\n                public dataProvider: DataProvider,\n                public fileService: FileService) {\n    }\n\n    public ionViewDidEnter() {\n        this.init();\n    }\n\n    protected init() {\n\n        // Load settings of current user\n        User.currentUser()\n            .then(user => {\n                this.loggedInUser = user;\n                return user.settings;\n            })\n            .then(settings => {\n                this.settings = settings;\n                return Promise.resolve();\n            });\n\n        // Load all users of current app showing the used disk space\n        this.loadUsersAndDiskspace();\n    }\n\n    private loadUsersAndDiskspace(): Promise<any> {\n        this.usersPerInstallation = [];\n        this.totalSize = 0;\n        //Load installations\n        Log.write(this, \"loading users and diskspace\");\n        return this.configFactory.get().then((config) => {\n            this.installationsWithUsers = config.installations;\n            return User.findAllUsers().then(users => {\n                let diskSpacePromises = [];\n                users.forEach(user => {\n                    if (!this.usersPerInstallation[user.installationId]) {\n                        this.usersPerInstallation[user.installationId] = [];\n                    }\n                    let diskSpacePromise = FileData.getTotalDiskSpaceForUser(user).then(diskSpace => {\n                        this.usersPerInstallation[user.installationId].push({\n                            user: user,\n                            diskSpace: diskSpace\n                        });\n                        this.totalSize += diskSpace;\n                    });\n                    diskSpacePromises.push(diskSpacePromise);\n                });\n                // Remove installations not having any users\n                this.installationsWithUsers = this.installationsWithUsers.filter(installation => {\n                   return installation.id in this.usersPerInstallation;\n                });\n                return Promise.all(diskSpacePromises);\n            });\n        });\n   }\n\n    public deleteLocalUserDataPrompt(user: User) {\n        let alert = this.alert.create({\n            title: this.translate.instant(\"settings.delete_user_local_data_title\", {'username': user.iliasLogin}),\n            subTitle: this.translate.instant(\"settings.delete_user_local_data_text\"),\n            buttons: [\n                {\n                    text: this.translate.instant(\"cancel\"),\n                    role: 'cancel',\n                    handler: () => {\n                        // alert.dismiss();\n                    }\n                },\n                {\n                    text: this.translate.instant(\"ok\"),\n                    handler: () => {\n                        this.deleteLocalUserData(user);\n                    }\n                }\n            ]\n        });\n        alert.present();\n    }\n\n    public saveSettings() {\n        this.settings.downloadSize = Math.min(this.settings.downloadSize, 9999);\n        this.settings.quotaSize = Math.min(this.settings.quotaSize, 99999);\n\n        if (this.settings.userId) {\n            Log.write(this, \"Saving settings.\");\n            this.settings.save().then(() => {\n                Log.write(this, \"Settings saved successfully.\");\n                this.translate.use(this.settings.language).subscribe(() => {\n                    Log.write(this, \"Switching language successful.\");\n                    let toast = this.toast.create(<ToastOptions>{\n                        message: this.translate.instant(\"settings.settings_saved\"),\n                        duration: 3000\n                    });\n                    toast.present();\n                });\n            });\n        }\n    }\n\n    protected deleteLocalUserData(user: User): Promise<any> {\n        this.footerToolbar.addJob(Job.DeleteFilesSettings, this.translate.instant(\"settings.deleting_files\"));\n        return this.deleteFiles(user)\n            .then(() => this.loadUsersAndDiskspace())\n            .then(() => {\n                this.showFilesDeletedToast();\n                this.footerToolbar.removeJob(Job.DeleteFilesSettings);\n                return Promise.resolve();\n            }).catch(err => {\n                this.footerToolbar.removeJob(Job.DeleteFilesSettings);\n                return Promise.reject(err);\n            });\n    }\n\n    protected showFilesDeletedToast() {\n        let toast = this.toast.create({\n            message: this.translate.instant(\"settings.files_deleted\"),\n            duration: 3000\n        });\n        toast.present();\n    }\n\n    protected doDeleteAllFiles() {\n        return User.findAllUsers().then(users => {\n            let promises = [];\n            users.forEach(user => {\n                promises.push(this.deleteFiles(user));\n            });\n\n            return Promise.all(promises);\n        });\n\n    }\n\n    public deleteAllFilesPrompt() {\n        let alert = this.alert.create({\n            title: this.translate.instant(\"settings.delete_all_files\"),\n            subTitle: this.translate.instant(\"settings.delete_all_files_text\"),\n            buttons: [\n                {\n                    text: this.translate.instant(\"cancel\"),\n                    role: 'cancel',\n                    handler: () => {\n                    }\n                },\n                {\n                    text: this.translate.instant(\"ok\"),\n                    handler: () => {\n                        this.footerToolbar.addJob(Job.DeleteFilesSettings, this.translate.instant(\"settings.deleting_files\"));\n                        this.doDeleteAllFiles().then(() => {\n                            this.loadUsersAndDiskspace().then(() => {\n                                this.footerToolbar.removeJob(Job.DeleteFilesSettings);\n                                this.showFilesDeletedToast();\n                            })\n                        });\n                    }\n                }\n            ]\n        });\n        alert.present();\n    }\n\n    protected deleteFiles(user: User): Promise<any> {\n        return DesktopItem.findByUserId(user.id).then(iliasObjects => {\n            let promises = [];\n            iliasObjects.forEach(object => {\n                promises.push(this.fileService.removeRecursive(object));\n            });\n\n            return Promise.all(promises);\n        });\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/settings/settings.ts","import {Injectable} from '@angular/core';\nimport {ILIASRestProvider} from \"../ilias-rest.provider\";\nimport {User} from \"../../models/user\";\nimport {FileService} from \"../../services/file.service\";\nimport {FileData} from \"../../models/file-data\";\nimport {DataProviderILIASObjectHandler} from \"./ilias-object-handler\";\nimport {ILIASObject} from \"../../models/ilias-object\";\n\n\n@Injectable()\nexport class DataProviderFileObjectHandler implements DataProviderILIASObjectHandler {\n\n    public constructor(protected rest:ILIASRestProvider,\n                       protected file:FileService) {\n    }\n\n    onSave(iliasObject:ILIASObject, user:User):Promise<ILIASObject> {\n        return this.getFileMetaData(iliasObject, user);\n    }\n\n    onDelete(iliasObject:ILIASObject, user:User):Promise<any> {\n        // Note: Order matters! FileService::remove still needs FileData\n        return this.file.remove(iliasObject)\n            .then(() => FileData.find(iliasObject.id))\n            .then(fileData => fileData.destroy());\n    }\n\n    /**\n     * Gets file metadata for the given ILIASObject and stores it as FileData object and in the objects data property\n     * @param iliasObject\n     * @param user\n     * @returns {Promise<ILIASObject>}\n     */\n    public getFileMetaData(iliasObject:ILIASObject, user:User):Promise<ILIASObject> {\n\n        let fileMetaData;\n\n        return this.rest.getFileData(iliasObject.refId, user, 120000)\n            .then(aFileMetaData => {\n                fileMetaData = aFileMetaData;\n                return FileData.find(iliasObject.id);\n            }).then((fileData:FileData) => {\n                fileData.readFromObject(fileMetaData);\n                iliasObject.needsDownload = fileData.needsDownload();\n                return fileData.save() as Promise<ILIASObject>;\n            }).then(() => {\n                iliasObject.data = Object.assign(iliasObject.data, fileMetaData);\n                return iliasObject.save() as Promise<ILIASObject>;\n            });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/handlers/file-object-handler.ts","import {Component} from '@angular/core';\nimport {NavController, ActionSheetController} from 'ionic-angular';\nimport {ILIASObject} from \"../../models/ilias-object\";\nimport {Favorites} from \"../../models/favorites\";\nimport {FileService} from \"../../services/file.service\";\nimport {ShowObjectListPageAction} from \"../../actions/show-object-list-page-action\";\nimport {OpenObjectInILIASAction} from \"../../actions/open-object-in-ilias-action\";\nimport {ShowDetailsPageAction} from \"../../actions/show-details-page-action\";\nimport {UnMarkAsFavoriteAction} from \"../../actions/unmark-as-favorite-action\";\nimport {ILIASObjectAction} from \"../../actions/object-action\";\nimport { TranslateService } from \"ng2-translate/src/translate.service\";\nimport {FooterToolbarService} from \"../../services/footer-toolbar.service\";\nimport {User} from \"../../models/user\";\nimport {ILIASObjectActionSuccess} from \"../../actions/object-action\";\nimport {AlertController} from \"ionic-angular\";\nimport {ToastController} from \"ionic-angular\";\nimport {Job} from \"../../services/footer-toolbar.service\";\nimport {Log} from \"../../services/log.service\";\nimport {CantOpenFileTypeException} from \"../../exceptions/CantOpenFileTypeException\";\nimport {OfflineException} from \"../../exceptions/OfflineException\";\nimport {DownloadAndOpenFileExternalAction} from \"../../actions/download-and-open-file-external-action\";\nimport {RESTAPIException} from \"../../exceptions/RESTAPIException\";\nimport {ILIASLinkBuilder, TokenUrlConverter} from \"../../services/url-converter.service\";\nimport {InAppBrowser} from \"@ionic-native/in-app-browser\";\n\n\n\n@Component({\n    templateUrl: 'favorites.html'\n})\nexport class FavoritesPage {\n\n    public favorites:ILIASObject[] = null;\n\n    public actionSheetActive = false;\n\n    public rootParents = [];\n\n    constructor(public nav:NavController,\n                public file:FileService,\n                public actionSheet:ActionSheetController,\n                public translate:TranslateService,\n                public footerToolbar:FooterToolbarService,\n                public alert:AlertController,\n                public toast:ToastController,\n                private readonly urlConverter: TokenUrlConverter,\n                private readonly browser: InAppBrowser) {\n    }\n\n    public ionViewDidLoad() {\n        this.loadFavorites();\n    }\n\n    /**\n     * Execute primary action of given object\n     * @param iliasObject\n     */\n    public onClick(iliasObject:ILIASObject) {\n        if (this.actionSheetActive) return;\n        // let primaryAction = this.objectActions.getPrimaryAction(iliasObject);\n        let primaryAction = this.getPrimaryAction(iliasObject);\n        this.executeAction(primaryAction);\n        // When executing the primary action, we reset the isNew state\n        if (iliasObject.isNew || iliasObject.isUpdated) {\n            iliasObject.isNew = false;\n            iliasObject.isUpdated = false;\n            iliasObject.save();\n        }\n    }\n\n    public executeAction(action:ILIASObjectAction):void {\n        let hash = action.instanceId();\n        this.footerToolbar.addJob(hash, \"\");\n        action.execute().then((result) => {\n            this.handleActionResult(result);\n            this.footerToolbar.removeJob(hash);\n        }).catch((error:CantOpenFileTypeException) => {\n            if(error instanceof CantOpenFileTypeException) {\n                this.showAlert(this.translate.instant(\"actions.cant_open_file\"));\n                this.footerToolbar.removeJob(hash);\n                return Promise.resolve();\n            }\n            return Promise.reject(error);\n        }).catch(error => {\n            if(error instanceof OfflineException) {\n                this.showAlert(this.translate.instant(\"actions.offline_and_no_local_file\"));\n                this.footerToolbar.removeJob(hash);\n                return Promise.resolve();\n            }\n            return Promise.reject(error);\n        }).catch(error => {\n            if(error instanceof RESTAPIException) {\n                this.showAlert(this.translate.instant(\"actions.server_not_reachable\"));\n                this.footerToolbar.removeJob(hash);\n                return Promise.resolve();\n            }\n            return Promise.reject(error);\n\n        }).catch((message) => {\n            if (message) {\n                Log.describe(this, \"action gone wrong: \", message);\n            }\n            this.showAlert(this.translate.instant(\"something_went_wrong\"));\n            this.footerToolbar.removeJob(hash);\n        });\n    }\n\n    protected showAlert(message) {\n        let alert = this.alert.create({\n            title: message,\n            buttons: [\n                {\n                    text: this.translate.instant(\"close\"),\n                    role: 'cancel'\n                }\n                ]\n        });\n        alert.present();\n    }\n\n    protected handleActionResult(result) {\n        this.loadFavorites();\n        if (!result) return;\n        if (result instanceof ILIASObjectActionSuccess) {\n            if (result.message) {\n                let toast = this.toast.create({\n                    message: result.message,\n                    duration: 3000\n                });\n                toast.present();\n            }\n        }\n    }\n\n    /**\n     * Show action sheet for the given object\n     * @param object\n     */\n    public showActions(object:ILIASObject) {\n        this.actionSheetActive = true;\n        let actionButtons = [];\n        // let actions = this.objectActions.getActions(object, ILIASObjectActionsService.CONTEXT_ACTION_MENU);\n        let actions:ILIASObjectAction[] = [\n            new ShowDetailsPageAction(this.translate.instant(\"actions.show_details\"), object, this.nav),\n            new OpenObjectInILIASAction(this.translate.instant(\"actions.view_in_ilias\"), new ILIASLinkBuilder(object.link), this.urlConverter, this.browser),\n            new UnMarkAsFavoriteAction(this.translate.instant(\"actions.unmark_as_favorite\"), object)\n        ];\n        actions.forEach(action => {\n            actionButtons.push({\n                text: action.title,\n                handler: () => {\n                    this.executeAction(action);\n                    this.actionSheetActive = false;\n                }\n            });\n        });\n        actionButtons.push({\n            text: this.translate.instant(\"cancel\"),\n            handler: () => {\n                this.actionSheetActive = false;\n            }\n        });\n        let actionSheet = this.actionSheet.create({\n            'title': object.title,\n            'buttons': actionButtons\n        });\n        actionSheet.onDidDismiss(() => {\n            this.actionSheetActive = false;\n        });\n        actionSheet.present();\n    }\n\n    protected getPrimaryAction(iliasObject:ILIASObject):ILIASObjectAction {\n        if (iliasObject.isContainer()) {\n            return new ShowObjectListPageAction(this.translate.instant(\"actions.show_object_list\"), iliasObject, this.nav);\n        }\n        if (iliasObject.type == 'file') {\n            return new DownloadAndOpenFileExternalAction(this.translate.instant(\"actions.download_and_open_in_external_app\"), iliasObject, this.file, this.translate, this.alert);\n        }\n        return new OpenObjectInILIASAction(this.translate.instant(\"actions.view_in_ilias\"), new ILIASLinkBuilder(iliasObject.link), this.urlConverter, this.browser);\n    }\n\n    protected loadFavorites() {\n        this.footerToolbar.addJob(Job.LoadFavorites, \"\");\n        User.currentUser().then((user) => {\n            Favorites.findByUserId(user.id).then(favorites => {\n                favorites.sort(ILIASObject.compare);\n                this.favorites = favorites;\n                favorites.forEach(favorite => {\n                    this.rootParents[favorite.id] = favorite.rootParent;\n                });\n                this.footerToolbar.removeJob(Job.LoadFavorites);\n            });\n        });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/favorites/favorites.ts","import {Component} from '@angular/core';\nimport {NavController, NavParams, AlertController, ToastController} from 'ionic-angular';\nimport {ILIASObject} from \"../../models/ilias-object\";\nimport {DataProvider} from \"../../providers/data-provider.provider\";\nimport {ILIASObjectAction, ILIASObjectActionSuccess} from \"../../actions/object-action\";\nimport {SynchronizationService} from \"../../services/synchronization.service\";\nimport {FileService} from \"../../services/file.service\";\nimport {OpenObjectInILIASAction} from \"../../actions/open-object-in-ilias-action\";\nimport {MarkAsFavoriteAction} from \"../../actions/mark-as-favorite-action\";\nimport {UnMarkAsFavoriteAction} from \"../../actions/unmark-as-favorite-action\";\nimport {MarkAsOfflineAvailableAction} from \"../../actions/mark-as-offline-available-action\";\nimport {UnMarkAsOfflineAvailableAction} from \"../../actions/unmark-as-offline-available-action\";\nimport {SynchronizeAction} from \"../../actions/synchronize-action\";\nimport {RemoveLocalFilesAction} from \"../../actions/remove-local-files-action\";\nimport {RemoveLocalFileAction} from \"../../actions/remove-local-file-action\";\nimport {OpenFileExternalAction} from \"../../actions/open-file-external-action\";\nimport {DownloadFileAction} from \"../../actions/download-file-action\";\nimport {Log} from \"../../services/log.service\";\nimport {TranslateService} from \"ng2-translate/src/translate.service\";\nimport {ILIASObjectActionResult} from \"../../actions/object-action\";\nimport {FooterToolbarService} from \"../../services/footer-toolbar.service\";\nimport {ModalController} from \"ionic-angular/index\";\nimport {CantOpenFileTypeException} from \"../../exceptions/CantOpenFileTypeException\";\nimport {RESTAPIException} from \"../../exceptions/RESTAPIException\";\nimport {ILIASLinkBuilder, TokenUrlConverter} from \"../../services/url-converter.service\";\nimport {InAppBrowser} from \"@ionic-native/in-app-browser\";\n\n\n@Component({\n    templateUrl: 'object-details.html'\n})\nexport class ObjectDetailsPage {\n\n    public iliasObject: ILIASObject;\n\n    public actions: ILIASObjectAction[];\n\n    /**\n     * Holds the details of the current displayed ILIASObject\n     */\n    public details:Array<{label:string, value:string}>;\n\n    constructor(public nav: NavController,\n                public dataProvider: DataProvider,\n                public sync: SynchronizationService,\n                public file: FileService,\n                public alert: AlertController,\n                public toast: ToastController,\n                public translate: TranslateService,\n                public footerToolbar: FooterToolbarService,\n                public modal: ModalController,\n                private readonly urlConverter: TokenUrlConverter,\n                private readonly browser: InAppBrowser,\n                params: NavParams) {\n        this.iliasObject = params.get('object');\n        Log.describe(this, \"Showing details of: \", this.iliasObject);\n    }\n\n    public ionViewDidLoad() {\n        this.loadAvailableActions();\n        this.loadObjectDetails();\n    }\n\n    public executeAction(action: ILIASObjectAction) {\n        if (action.alert()) {\n            let alert = this.alert.create({\n                title: action.alert().title,\n                subTitle: action.alert().subTitle,\n                buttons: [\n                    {\n                        text: 'Cancel',\n                        role: 'cancel',\n                        handler: () => {\n                            // alert.dismiss();\n                        }\n                    },\n                    {\n                        text: 'Ok',\n                        handler: () => {\n                            this.executeAndHandleAction(action);\n                        }\n                    }\n                ]\n            });\n            alert.present();\n        } else {\n            this.executeAndHandleAction(action);\n        }\n    }\n\n    protected executeAndHandleAction(action: ILIASObjectAction) {\n        Log.write(this, \"executeAndHandleAction\");\n        Log.describe(this, \"action: \", action);\n        action.execute().then(result => {\n                this.actionHandler(result);\n            }\n        ).catch(error => {\n            if (error instanceof RESTAPIException) {\n                this.showAlert(this.translate.instant(\"actions.server_not_reachable\"));\n                return Promise.resolve();\n            } else if (error instanceof  CantOpenFileTypeException) {\n                this.showAlert(this.translate.instant(\"actions.cant_open_file\"));\n            }\n            return Promise.reject(error);\n        }).catch((message) => {\n            if (message) {\n                Log.describe(this, \"action gone wrong: \", message);\n            }\n            this.loadAvailableActions();\n            this.loadObjectDetails();\n            this.showAlert(this.translate.instant(\"something_went_wrong\"));\n        });\n    }\n\n    protected showAlert(message) {\n        let alert = this.alert.create({\n            title: message,\n            buttons: [\n                {\n                    text: this.translate.instant(\"close\"),\n                    role: 'cancel'\n                }\n            ]\n        });\n        alert.present();\n    }\n\n    protected actionHandler(result: ILIASObjectActionResult) {\n        Log.write(this, \"actionHandler\");\n        this.handleActionResult(result);\n        this.loadAvailableActions();\n        this.loadObjectDetails();\n    }\n\n    protected handleActionResult(result) {\n        Log.write(this, \"handleActionResult\");\n        if (!result) return;\n        if (result instanceof ILIASObjectActionSuccess) {\n            if (result.message) {\n                let toast = this.toast.create({\n                    message: result.message,\n                    duration: 3000\n                });\n                toast.present();\n            }\n        }\n    }\n\n    protected loadObjectDetails() {\n        this.iliasObject.presenter.details().then(details => {\n            Log.describe(this, \"Details are displayed: \", details);\n            this.details = details;\n        });\n    }\n\n    protected loadAvailableActions() {\n        this.actions = [new OpenObjectInILIASAction(this.translate.instant(\"actions.view_in_ilias\"), new ILIASLinkBuilder(this.iliasObject.link), this.urlConverter, this.browser)];\n        if (!this.iliasObject.isFavorite) {\n            this.actions.push(new MarkAsFavoriteAction(this.translate.instant(\"actions.mark_as_favorite\"), this.iliasObject));\n        } else if (this.iliasObject.isFavorite) {\n            this.actions.push(new UnMarkAsFavoriteAction(this.translate.instant(\"actions.unmark_as_favorite\"), this.iliasObject));\n        }\n        if (this.iliasObject.isContainer() && !this.iliasObject.isLinked()) {\n            if (!this.iliasObject.isOfflineAvailable) {\n                this.actions.push(new MarkAsOfflineAvailableAction(this.translate.instant(\"actions.mark_as_offline_available\"), this.iliasObject, this.dataProvider, this.sync, this.modal));\n            } else if (this.iliasObject.isOfflineAvailable && this.iliasObject.offlineAvailableOwner != ILIASObject.OFFLINE_OWNER_SYSTEM) {\n                this.actions.push(new UnMarkAsOfflineAvailableAction(this.translate.instant(\"actions.unmark_as_offline_available\"), this.iliasObject));\n                this.actions.push(new SynchronizeAction(this.translate.instant(\"actions.synchronize\"), this.iliasObject, this.sync, this.modal, this.translate));\n            }\n            this.actions.push(new RemoveLocalFilesAction(this.translate.instant(\"actions.remove_local_files\"), this.iliasObject, this.file, this.translate));\n        }\n        if (this.iliasObject.type == 'file') {\n            this.file.existsFile(this.iliasObject).then(() => {\n                this.actions.push(new OpenFileExternalAction(this.translate.instant(\"actions.open_in_external_app\"), this.iliasObject, this.file));\n                this.actions.push(new RemoveLocalFileAction(this.translate.instant(\"actions.remove_local_file\"), this.iliasObject, this.file));\n            }, () => {\n                Log.write(this, \"No file available: Remove and Open are not available.\");\n            });\n            if (!this.iliasObject.isOfflineAvailable) {\n                this.actions.push(new MarkAsOfflineAvailableAction(this.translate.instant(\"actions.mark_as_offline_available\"), this.iliasObject, this.dataProvider, this.sync, this.modal));\n            } else if (this.iliasObject.isOfflineAvailable && this.iliasObject.offlineAvailableOwner != ILIASObject.OFFLINE_OWNER_SYSTEM) {\n                this.actions.push(new UnMarkAsOfflineAvailableAction(this.translate.instant(\"actions.unmark_as_offline_available\"), this.iliasObject));\n            }\n            if (this.iliasObject.needsDownload) {\n                this.actions.push(new DownloadFileAction(this.translate.instant(\"actions.download\"), this.iliasObject, this.file, this.translate, this.alert));\n            }\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/object-details/object-details.ts","import {Component} from '@angular/core';\nimport {NavController} from 'ionic-angular';\nimport {InAppBrowser} from \"@ionic-native/in-app-browser\";\n\n/*\n  Generated class for the InfoPage page.\n\n  See http://ionicframework.com/docs/v2/components/#navigation for more info on\n  Ionic pages and navigation.\n*/\n@Component({\n  templateUrl: 'info.html'\n})\nexport class InfoPage {\n\n  public tab:string = 'info';\n\n  constructor(\n    public nav: NavController,\n    private readonly browser: InAppBrowser\n  ) {}\n\n  public call(number) {\n    (<any> window).location = number;\n  }\n\n  public browse(page) {\n    this.browser.create(page, \"_system\");\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/info/info.ts","import {Injectable} from '@angular/core';\nimport {CreateModelsMigration} from \"../migrations/1-create-models-migration\";\nimport {Migration} from \"../migrations/migration\";\nimport {SQLiteDatabaseService} from \"./database.service\";\nimport {Log} from \"./log.service\";\nimport {AddObjectAttributesMigration} from \"../migrations/2-add-object-attributes-migration\";\n\n@Injectable()\nexport class MigrationsService {\n\n    protected migrations:Array<{id:number, migration:Migration}>;\n\n    constructor() {\n        this.migrations = [\n            {id: 1, migration: new CreateModelsMigration()},\n            {id: 2, migration: new AddObjectAttributesMigration()}\n        ];\n    }\n\n    /**\n     * Execute all pending migrations\n     */\n    public executeAll():Promise<any> {\n        var migrations = [];\n        Log.describe(this, \"Migrations: \", this.migrations);\n\n        return this.init().then(() => {\n            Log.write(this, \"migrations table initialized.\");\n\n            this.migrations.forEach(migration => {\n                migrations.push(this.execute(migration.id));\n            });\n\n            return Promise.all(migrations);\n        });\n    }\n\n    /**\n     * Reverse migration with given ID\n     * @param id\n     */\n    public reverse(id:number):Promise<any> {\n        return new Promise((resolve, reject) => {\n            let migration = this.getMigration(id);\n            migration.down().then(() => {\n                SQLiteDatabaseService.instance().then( db => {\n                    db.query('DELETE FROM migrations WHERE id = ?', [id]).then(() => {\n                        console.log('Reversed migration ' + id);\n                        resolve();\n                    }, () => {\n                        reject();\n                    });\n                });\n            });\n        });\n    }\n\n    protected init() {\n        return SQLiteDatabaseService.instance()\n            .then(db => { db.query('CREATE TABLE IF NOT EXISTS migrations (id INTEGER, timestamp DATETIME DEFAULT CURRENT_TIMESTAMP)'); })\n            .then(() => {\n                Log.write(this, \"init migrations table finished.\");\n                return Promise.resolve();\n            });\n    }\n\n    /**\n     * Execute migration with given ID if not yet executed\n     * @param id\n     */\n    protected execute(id:number):Promise<any> {\n        return new Promise((resolve, reject) => {\n            SQLiteDatabaseService.instance().then( db => {\n                Log.write(this, \"got db instance.\");\n                db.query('SELECT * FROM migrations WHERE id = ?', [id]).then((response) => {\n                    Log.describe(this, \"found migrations: \", response);\n                    // Only execute the migration if not executed before!\n                    if (response.rows.length > 0) {\n                        resolve();\n                    } else {\n                        let migration = this.getMigration(id);\n                        Log.write(this, \"Migrate UP!\");\n                        migration.up().then(() => {\n                            SQLiteDatabaseService.instance().then(db => {\n                                db.query('INSERT INTO migrations (id) VALUES (?)', [id]).then(() => {\n                                    resolve();\n                                }, (error) => {\n                                    reject(error);\n                                });\n                            }, (error) => {\n                                reject(error);\n                            });\n                        });\n                    }\n                }, (error) => {\n                    Log.error(this, error);\n                    reject(error);\n                });\n            });\n        });\n    }\n\n    /**\n     * Return migration with given ID\n     * @param id\n     * @returns {Migration}\n     */\n    protected getMigration(id:number):Migration {\n        return this.migrations.filter(function (migration) {\n            return migration.id == id;\n        })[0].migration;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/migrations.service.ts","export interface Migration {\n\n    /**\n     * Run the migration\n     */\n    up():Promise<any>;\n\n    /**\n     * Reverse the migration\n     */\n    down():Promise<any>;\n\n}\n\n/**\n * How to create a new migration:\n * - Create a new ts file in migrations\n * - Create a new class extending BaseMigration and implement up() and down()\n * - Add your migration to the services/migrations.service.ts file so it gets executed when starting the app\n */\nexport class BaseMigration implements Migration {\n\n    constructor() {\n    }\n\n    up():Promise<any> {\n        return Promise.resolve();\n    }\n\n    down():Promise<any> {\n        return Promise.resolve();\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/migrations/migration.ts","import {Component} from '@angular/core';\nimport {\n    NavController, NavParams, ActionSheetController, LoadingController, AlertController,\n    ToastController\n} from 'ionic-angular';\nimport {ILIASObject} from \"../../models/ilias-object\";\nimport {FileService} from \"../../services/file.service\";\nimport {User} from \"../../models/user\";\nimport {SynchronizationService} from \"../../services/synchronization.service\";\nimport {LoginPage} from \"../login/login\";\nimport {ILIASObjectAction, ILIASObjectActionSuccess} from \"../../actions/object-action\";\nimport {ShowObjectListPageAction} from \"../../actions/show-object-list-page-action\";\nimport {OpenObjectInILIASAction} from \"../../actions/open-object-in-ilias-action\";\nimport {ShowDetailsPageAction} from \"../../actions/show-details-page-action\";\nimport {MarkAsFavoriteAction} from \"../../actions/mark-as-favorite-action\";\nimport {UnMarkAsFavoriteAction} from \"../../actions/unmark-as-favorite-action\";\nimport {MarkAsOfflineAvailableAction} from \"../../actions/mark-as-offline-available-action\";\nimport {UnMarkAsOfflineAvailableAction} from \"../../actions/unmark-as-offline-available-action\";\nimport {SynchronizeAction} from \"../../actions/synchronize-action\";\nimport {RemoveLocalFilesAction} from \"../../actions/remove-local-files-action\";\nimport {DesktopItem} from \"../../models/desktop-item\";\nimport {FooterToolbarService} from \"../../services/footer-toolbar.service\";\nimport {DownloadAndOpenFileExternalAction} from \"../../actions/download-and-open-file-external-action\";\nimport {Log} from \"../../services/log.service\";\nimport {TranslateService} from \"ng2-translate/src/translate.service\";\nimport {Job} from \"../../services/footer-toolbar.service\";\nimport {ModalController} from \"ionic-angular\";\nimport {DataProvider} from \"../../providers/data-provider.provider\";\nimport {CantOpenFileTypeException} from \"../../exceptions/CantOpenFileTypeException\";\nimport {OfflineException} from \"../../exceptions/OfflineException\";\nimport {RESTAPIException} from \"../../exceptions/RESTAPIException\";\nimport {ILIASLinkBuilder, TokenUrlConverter} from \"../../services/url-converter.service\";\nimport {InAppBrowser} from \"@ionic-native/in-app-browser\";\n\n\n@Component({\n    templateUrl: 'new-objects.html',\n})\nexport class NewObjectsPage {\n\n    /**\n     * Objects under the given parent object\n     */\n    public objects: {[containerId: number]: ILIASObject[]} = {};\n\n    /**\n     * The parent container object that was clicked to display the current objects\n     */\n    public parent: ILIASObject;\n    public pageTitle: string;\n    public user: User;\n    public actionSheetActive = false;\n    public desktopItems: ILIASObject[] = null;\n    public allObjects: ILIASObject[] = [];\n\n    constructor(public nav: NavController,\n                params: NavParams,\n                public actionSheet: ActionSheetController,\n                public loading: LoadingController,\n                public file: FileService,\n                public sync: SynchronizationService,\n                public alert: AlertController,\n                public toast: ToastController,\n                public footerToolbar: FooterToolbarService,\n                public translate: TranslateService,\n                public modal: ModalController,\n                public dataProvider: DataProvider,\n                private readonly urlConverter: TokenUrlConverter,\n                private readonly browser: InAppBrowser) {\n        this.parent = params.get('parent');\n        this.pageTitle = 'New Content';\n    }\n\n\n    /**\n     * Only called if page is newly loaded\n     */\n    public ionViewDidLoad() {\n        this.loadObjects();\n    }\n\n\n    protected loadObjects() {\n        User.currentUser().then(user => {\n            this.user = user;\n            this.loadObjectData();\n        }, () => {\n            // We should never get to this page if no user is logged in... just in case -> redirect to LoginPage\n            this.nav.push(LoginPage);\n        });\n    }\n\n    /**\n     * Loads objects from local DB and then from remote\n     */\n    protected loadObjectData() {\n        Log.write(this, \"Collecting new items from Database\");\n        this.footerToolbar.addJob(Job.LoadNewObjects, \"\");\n\n        // we want to group the new items by course/group\n        DesktopItem.findByUserId(this.user.id).then(desktopItems => {\n            this.desktopItems = [];\n            this.objects = {};\n            this.allObjects = [];\n            let promises = [];\n\n            desktopItems.forEach(desktopItem => {\n                if (desktopItem.isContainer()) {\n                    //get all the subitems by course/group\n                    promises.push(ILIASObject.findByParentRefIdRecursive(desktopItem.refId, this.user.id).then(objects => {\n\n                        //filter out the new ones.\n                        let newObjects = objects.filter(iliasObject => {\n                            // return true;\n                            return (iliasObject.isNew || iliasObject.isUpdated);\n                        });\n\n                        // add the new ones to the dictionary\n                        newObjects.forEach(newObject => {\n                            if (!this.objects[desktopItem.refId]) {\n                                this.objects[desktopItem.refId] = [];\n                            }\n                            this.objects[desktopItem.refId].push(newObject);\n                            this.allObjects.push(newObject);\n                        });\n\n                        Log.write(this, \"New objects for \", desktopItem);\n                        Log.write(this, \"New dektopitem? \", desktopItem.isNew);\n                        Log.write(this, \"Add new \", desktopItem.isNew == true);\n                        Log.write(this, \"Found new objects\", newObjects);\n\n                        // only add course if there are new items in there.\n                        if (this.objects[desktopItem.refId] || desktopItem.isNew || desktopItem.isUpdated) {\n                            Log.describe(this, \"Desktop items \", this.desktopItems);\n                            Log.write(this, \"adding desktop item.\")\n                            this.desktopItems.push(desktopItem);\n                            this.objects[desktopItem.refId].sort(ILIASObject.compare);\n                        }\n\n                    }));\n                }\n\n            });\n            return Promise.all(promises).then(() => {\n                Log.write(this, \"Desktop items\", this.desktopItems);\n\n                this.footerToolbar.removeJob(Job.LoadNewObjects);\n            });\n        }).catch((error) => {\n            Log.write(this, 'Collecting new items failed', error);\n            this.footerToolbar.removeJob(Job.LoadNewObjects);\n        });\n    }\n\n    /**\n     * Execute primary action of given object\n     * @param iliasObject\n     */\n    public onClick(iliasObject: ILIASObject) {\n        if (this.actionSheetActive) return;\n        let primaryAction = this.getPrimaryAction(iliasObject);\n        this.executeAction(primaryAction);\n\n        // When executing the primary action, we reset the isNew state\n        //TODO: should be moved imho\n        if (iliasObject.isNew || iliasObject.isUpdated) {\n            iliasObject.isNew = false;\n            iliasObject.isUpdated = false;\n            iliasObject.save();\n        }\n    }\n\n    public markAllAsSeen() {\n        let promises = [];\n        this.desktopItems.forEach(deskItem => {\n            let promise = this.mark(deskItem.refId, this.objects[deskItem.refId]);\n            deskItem.isNew = false;\n            deskItem.isUpdated = false;\n            promises.push(promise);\n            promises.push(deskItem.save());\n        });\n        Promise.all(promises).then(() => {\n           this.desktopItems = [];\n           this.allObjects = [];\n           this.objects = {};\n        });\n    }\n\n    public markItemAsSeen(desktopItem: ILIASObject, id) {\n        let obj = this.allObjects.filter((object) => {\n            return object.id == id;\n        });\n        desktopItem.isNew = false;\n        desktopItem.isUpdated = false;\n\n        return Promise.all([desktopItem.save(), this.mark(desktopItem.refId, obj)]);\n    }\n\n    public markDesktopItemAsSeen(desktopItem: ILIASObject) {\n        return this.mark(desktopItem.refId, this.objects[desktopItem.refId]).then(() => {\n            delete this.objects[desktopItem.refId];\n            Log.write(this, 'allObjects', this.allObjects);\n        });\n    }\n\n    /**\n     * Returns the primary action for the given object\n     * @param iliasObject\n     * @returns {ILIASObjectAction}\n     */\n    protected getPrimaryAction(iliasObject: ILIASObject): ILIASObjectAction {\n        if (iliasObject.isContainer()) {\n            return new ShowObjectListPageAction(this.translate.instant(\"actions.show_object_list\"), iliasObject, this.nav);\n        }\n        if (iliasObject.type == 'file') {\n            return new DownloadAndOpenFileExternalAction(this.translate.instant(\"actions.download_and_open_in_external_app\"), iliasObject, this.file, this.translate, this.alert);\n        }\n\n        return new OpenObjectInILIASAction(this.translate.instant(\"actions.view_in_ilias\"), new ILIASLinkBuilder(iliasObject.link), this.urlConverter, this.browser);\n    }\n\n    /**\n     * Show the action sheet for the given object\n     * @param iliasObject\n     */\n    public showActions(iliasObject: ILIASObject) {\n        this.actionSheetActive = true;\n        let actionButtons = [];\n        // let actions = this.objectActions.getActions(object, ILIASObjectActionsService.CONTEXT_ACTION_MENU);\n        let actions: ILIASObjectAction[] = [\n            new ShowDetailsPageAction(this.translate.instant(\"actions.show_details\"), iliasObject, this.nav),\n            new OpenObjectInILIASAction(this.translate.instant(\"actions.view_in_ilias\"), new ILIASLinkBuilder(iliasObject.link), this.urlConverter, this.browser),\n        ];\n        if (!iliasObject.isFavorite) {\n            actions.push(new MarkAsFavoriteAction(this.translate.instant(\"actions.mark_as_favorite\"), iliasObject));\n        } else if (iliasObject.isFavorite) {\n            actions.push(new UnMarkAsFavoriteAction(this.translate.instant(\"actions.unmark_as_favorite\"), iliasObject));\n        }\n        if (iliasObject.isContainer()) {\n            if (!iliasObject.isOfflineAvailable) {\n                actions.push(new MarkAsOfflineAvailableAction(this.translate.instant(\"actions.mark_as_offline_available\"), iliasObject, this.dataProvider, this.sync, this.modal));\n            } else if (iliasObject.isOfflineAvailable && iliasObject.offlineAvailableOwner != ILIASObject.OFFLINE_OWNER_SYSTEM) {\n                actions.push(new UnMarkAsOfflineAvailableAction(this.translate.instant(\"actions.unmark_as_offline_available\"), iliasObject));\n                actions.push(new SynchronizeAction(this.translate.instant(\"actions.synchronize\"), iliasObject, this.sync, this.modal, this.translate));\n            }\n            actions.push(new RemoveLocalFilesAction(this.translate.instant(\"actions.remove_local_files\"), iliasObject, this.file, this.translate));\n        }\n\n        actions.forEach(action => {\n            actionButtons.push({\n                text: action.title,\n                handler: () => {\n                    this.actionSheetActive = false;\n                    // This action displays an alert before it gets executed\n                    if (action.alert()) {\n                        let alert = this.alert.create({\n                            title: action.alert().title,\n                            subTitle: action.alert().subTitle,\n                            buttons: [\n                                {\n                                    text: 'Cancel',\n                                    role: 'cancel'\n                                },\n                                {\n                                    text: 'Ok',\n                                    handler: () => {\n                                        this.executeAction(action);\n                                    }\n                                }\n                            ]\n                        });\n                        alert.present();\n                    } else {\n                        this.executeAction(action);\n                    }\n                }\n            });\n        });\n        actionButtons.push({\n            text: this.translate.instant(\"cancel\"),\n            role: 'cancel',\n            handler: () => {\n                this.actionSheetActive = false;\n            }\n        });\n        let actionSheet = this.actionSheet.create({\n            'title': iliasObject.title,\n            'buttons': actionButtons\n        });\n        actionSheet.onDidDismiss(() => {\n            this.actionSheetActive = false;\n        });\n        actionSheet.present();\n    }\n\n    /**\n     * @param desktopItemRefId\n     * @param objects\n     * @returns {Promise<any>}\n     */\n    public mark(desktopItemRefId: number, objects: ILIASObject[]) {\n        if (!objects) {\n            return;\n        }\n        let promises = [];\n        this.footerToolbar.addJob(Job.MarkFiles, \"\");\n        objects.forEach((item: ILIASObject) => {\n            item.isNew = false;\n            item.isUpdated = false;\n            promises.push(item.save());\n            this.removeFromList(desktopItemRefId, item);\n        });\n        return Promise.all(promises).then(() => {\n            this.footerToolbar.removeJob(Job.MarkFiles);\n        }).catch(() => {\n            this.footerToolbar.removeJob(Job.MarkFiles);\n        });\n    }\n\n\n    protected handleActionResult(result) {\n        if (!result) return;\n        if (result instanceof ILIASObjectActionSuccess) {\n            if (result.message) {\n                let toast = this.toast.create({\n                    message: result.message,\n                    duration: 3000\n                });\n                toast.present();\n            }\n        }\n    }\n\n    public executeAction(action: ILIASObjectAction): void {\n        let hash = action.instanceId();\n        this.footerToolbar.addJob(hash, \"\");\n        action.execute().then((result) => {\n            this.handleActionResult(result);\n            this.footerToolbar.removeJob(hash);\n        }).catch(error => {\n            if (error instanceof CantOpenFileTypeException) {\n                this.showAlert(this.translate.instant(\"actions.cant_open_file\"));\n                this.footerToolbar.removeJob(hash);\n                return Promise.resolve();\n            }\n            return Promise.reject(error);\n        }).catch(error => {\n            if (error instanceof OfflineException) {\n                this.showAlert(this.translate.instant(\"actions.offline_and_no_local_file\"));\n                this.footerToolbar.removeJob(hash);\n                return Promise.resolve();\n            }\n            return Promise.reject(error);\n        }).catch(error => {\n            if (error instanceof RESTAPIException) {\n                this.showAlert(this.translate.instant(\"actions.server_not_reachable\"));\n                this.footerToolbar.removeJob(hash);\n                return Promise.resolve();\n            }\n            return Promise.reject(error);\n        }).catch((message) => {\n            if (message) {\n                Log.describe(this, \"action gone wrong: \", message);\n            }\n\n            this.showAlert(this.translate.instant(\"something_went_wrong\"));\n            this.footerToolbar.removeJob(hash);\n        });\n    }\n\n    protected showAlert(message) {\n        let alert = this.alert.create({\n            title: message,\n            buttons: [\n                {\n                    text: this.translate.instant(\"close\"),\n                    role: 'cancel'\n                }\n            ]\n        });\n        alert.present();\n    }\n\n    public removeFromList(desktopItemRefId: number, item: ILIASObject): void {\n        this.extractFromArray(item, this.allObjects);\n        this.extractFromArray(item, this.objects[desktopItemRefId]);\n    }\n\n    public extractFromArray(item: ILIASObject, list: ILIASObject[]) {\n        let index = null;\n        for (let key in list) {\n            let object = list[key];\n            if (object.id == item.id) {\n                index = key;\n                break;\n            }\n        }\n        if (index !== null) {\n            Log.describe(this, \"deleting key: \", index);\n            Log.describe(this, \"element was: \", list[index]);\n            delete list[index];\n        }\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/new-objects/new-objects.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import {NgModule, ErrorHandler} from '@angular/core';\nimport {IonicApp, IonicModule, IonicErrorHandler} from 'ionic-angular';\nimport { MyApp } from './app.component';\nimport {HttpModule, Http} from '@angular/http';\nimport {ConnectionService} from \"../services/ilias-app.service\";\nimport {ILIASRestProvider} from \"../providers/ilias-rest.provider\";\nimport {MigrationsService} from \"../services/migrations.service\";\nimport {FooterToolbarService} from \"../services/footer-toolbar.service\";\nimport {FileService} from \"../services/file.service\";\nimport {DataProvider} from \"../providers/data-provider.provider\";\nimport {ObjectListPage} from \"../pages/object-list/object-list\";\nimport {FavoritesPage} from \"../pages/favorites/favorites\";\nimport {NewObjectsPage} from \"../pages/new-objects/new-objects\";\nimport {SettingsPage} from \"../pages/settings/settings\";\nimport {InfoPage} from \"../pages/info/info\";\nimport {SynchronizationService} from \"../services/synchronization.service\";\nimport {DataProviderFileObjectHandler} from \"../providers/handlers/file-object-handler\";\nimport {FileSizePipe} from \"../pipes/fileSize.pipe\";\nimport {TranslateModule} from 'ng2-translate/ng2-translate';\nimport {TranslateLoader} from \"ng2-translate/src/translate.service\";\nimport {TranslateStaticLoader} from \"ng2-translate/src/translate.service\";\nimport {ObjectDetailsPage} from \"../pages/object-details/object-details\";\nimport {LoginPage} from \"../pages/login/login\";\nimport {ModalPage} from \"../pages/modal/modal\";\nimport {SyncFinishedModal} from \"../pages/sync-finished-modal/sync-finished-modal\";\nimport {TokenUrlConverter} from \"../services/url-converter.service\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {InAppBrowser} from \"@ionic-native/in-app-browser\";\nimport {StatusBar} from \"@ionic-native/status-bar\";\nimport {FileTransfer} from \"@ionic-native/file-transfer\";\nimport {Network} from \"@ionic-native/network\";\nimport {File} from \"@ionic-native/file\";\nimport {SQLite} from \"@ionic-native/sqlite\";\nimport {Toast} from \"@ionic-native/toast\";\nimport {HttpILIASConfigFactory, ILIAS_CONFIG_FACTORY} from \"../services/ilias-config-factory\";\n\n\nexport function createTranslateLoader(http: Http) {\n  return new TranslateStaticLoader(http, './assets/i18n', '.json');\n}\n\n@NgModule({\n  declarations: [\n    MyApp,\n    ObjectListPage,\n    FavoritesPage,\n    NewObjectsPage,\n    SettingsPage,\n    InfoPage,\n    ObjectDetailsPage,\n    LoginPage,\n    FileSizePipe,\n    SyncFinishedModal,\n    ModalPage\n  ],\n  imports: [\n    IonicModule.forRoot(MyApp),\n    BrowserModule,\n    HttpModule,\n    TranslateModule.forRoot({\n      provide: TranslateLoader,\n      useFactory: (createTranslateLoader),\n      deps: [Http]\n    })\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    ObjectListPage,\n    FavoritesPage,\n    NewObjectsPage,\n    SettingsPage,\n    InfoPage,\n    ObjectDetailsPage,\n    LoginPage,\n    SyncFinishedModal,\n  ],\n  providers: [\n    {\n      provide: ILIAS_CONFIG_FACTORY,\n      useClass: HttpILIASConfigFactory\n    },\n    ConnectionService,\n    MigrationsService,\n    ILIASRestProvider,\n    FooterToolbarService,\n    DataProvider,\n    FileService,\n    SynchronizationService,\n    DataProviderFileObjectHandler,\n    TokenUrlConverter,\n    StatusBar,\n    InAppBrowser,\n    File,\n    FileTransfer,\n    Network,\n    SQLite,\n    Toast,\n    {provide: ErrorHandler, useClass: IonicErrorHandler}\n  ],\n  exports: [\n    TranslateModule\n  ]\n})\nexport class AppModule {}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import {Injectable} from '@angular/core';\nimport {Events, Platform} from \"ionic-angular\";\nimport {User} from \"../models/user\";\nimport {ILIASObject} from \"../models/ilias-object\";\nimport {ILIASRestProvider} from \"../providers/ilias-rest.provider\";\nimport {File} from '@ionic-native/file';\nimport {FileData} from \"../models/file-data\";\nimport {FooterToolbarService} from \"./footer-toolbar.service\";\nimport {Log} from \"./log.service\";\nimport {TranslateService} from \"ng2-translate/src/translate.service\";\nimport {Settings} from \"../models/settings\";\nimport {Job} from \"./footer-toolbar.service\";\nimport {CantOpenFileTypeException} from \"../exceptions/CantOpenFileTypeException\";\nimport {NoWLANException} from \"../exceptions/noWLANException\";\nimport {Network} from \"@ionic-native/network\"\n\nexport interface DownloadProgress {\n    fileObject:ILIASObject;\n    loaded:number;\n    total:number;\n    percentCompleted:number;\n}\n\n@Injectable()\nexport class FileService {\n\n    public constructor(protected events:Events,\n                       protected platform:Platform,\n                       protected rest:ILIASRestProvider,\n                       protected footerToolbar:FooterToolbarService,\n                       protected translate:TranslateService,\n                       private readonly file: File,\n                       private readonly network: Network) {\n    }\n\n\n    /**\n     * Return the storage location to store files for the given user and object, depending on platform (iOS or Android)\n     * @param user\n     * @param iliasObject\n     * @returns {string}\n     */\n    public getStorageLocation(user:User, iliasObject:ILIASObject) {\n        if (this.platform.is('android')) {\n            return window['cordova'].file.externalApplicationStorageDirectory + 'ilias-app/' + user.id + '/' + iliasObject.objId + '/';\n        } else if (this.platform.is('ios')) {\n            return window['cordova'].file.dataDirectory + user.id + '/' + iliasObject.objId + '/';\n        }\n    }\n\n\n    /**\n     * Download the file from given file ILIAS Object\n     * @param fileObject\n     * @param progressListener\n     * @param forceDownload If set to true it will also download if you are NOT in WLAN\n     * @returns {Promise<any>}\n     */\n    public download(fileObject:ILIASObject, forceDownload = false) {\n\n        let user;\n\n        return User.find(fileObject.userId)\n            .then(aUser => {\n                user = aUser;\n                return Settings.findByUserId(user.id);\n            }).then(settings => {\n\n                // We don't want to download if we're not in wlan\n                if (forceDownload == false && settings.shouldntDownloadBecauseOfWLAN()) {\n                    return Promise.reject(new NoWLANException());\n                }\n\n                // If we have no file name we throw an error.\n                if (!fileObject.data.hasOwnProperty('fileName')) {\n                    return Promise.reject(new Error('Metadata of file object is not present'));\n                }\n\n                Log.write(this, \"Resolving storage location\");\n                let storageLocation = this.getStorageLocation(user, fileObject) + fileObject.data.fileName;\n\n                // Provide a general listener that throws an event\n                Log.write(this, \"start DL\");\n                let fileEntry;\n                return this.rest.downloadFile(fileObject.refId, storageLocation, user)\n                    .then(aFileEntry => {\n                        Log.describe(this, \"Download Complete: \", fileEntry);\n                        fileEntry = aFileEntry;\n                        return this.storeFileVersionLocal(fileObject);\n                    }).then(() => Promise.resolve(fileEntry));\n\n            });\n    }\n\n    /**\n     * Check if a local file exists for the given ILIAS file object. Resolves a promise with the corresponding FileEntry,\n     * rejects the Promise if no file is existing.\n     * @param fileObject\n     * @returns {Promise<FileEntry>}\n     */\n    public existsFile(fileObject:ILIASObject) {\n        return new Promise((resolve, reject) => {\n            User.find(fileObject.userId).then(user => {\n                let storageLocation = this.getStorageLocation(user, fileObject);\n                if (!window['resolveLocalFileSystemURL']) {\n                    Log.write(this, \"ResolveLocalFileSystemURL is not a function. You're probably not on a phone.\");\n                    reject(\"ResolveLocalFileSystemURL is not a function. You're probably not on a phone.\");\n                    return;\n                }\n                window['resolveLocalFileSystemURL'](storageLocation, (dirEntry) => {\n                    if (fileObject.data.hasOwnProperty('fileName')) {\n                        dirEntry.getFile(fileObject.data.fileName, {create: false}, (fileEntry) => {\n                            resolve(fileEntry);\n                        }, (error) => {\n                            reject();\n                        });\n                    } else {\n                        reject(new Error('Metadata of file object is not present'));\n                    }\n                });\n            }).catch(error => {\n                Log.error(this, error);\n                reject(error);\n            });\n        });\n    }\n\n\n    /**\n     * Deletes the local file on the device from the given ILIAS file object\n     * @param fileObject\n     */\n    public remove(fileObject:ILIASObject):Promise<void> {\n        return User.find(fileObject.userId).then(user => {\n            if (fileObject.data.hasOwnProperty('fileName') && fileObject.data.hasOwnProperty('fileVersionDateLocal')) {\n                let storageLocation = this.getStorageLocation(user, fileObject);\n\n                // There's no local file to delete.\n                if(fileObject.data.fileVersionDateLocal == null)\n                    return Promise.resolve();\n\n                // We delete the file and save the metadata.\n                return Promise.all([\n                    this.file.removeFile(storageLocation, fileObject.data.fileName),\n                    this.resetFileVersionLocal(fileObject)\n                ]).then(() => { return Promise.resolve() });\n\n            } else {\n                return Promise.reject(new Error('Metadata of file object is not (fully) present'));\n            }\n        });\n    }\n\n    /**\n     * Remove all local files recursively under the given container ILIAS object\n     * @param containerObject\n     */\n    public removeRecursive(containerObject:ILIASObject):Promise<any> {\n            this.footerToolbar.addJob(Job.DeleteFilesTree, this.translate.instant(\"deleting_files\"));\n            return ILIASObject.findByParentRefIdRecursive(containerObject.refId, containerObject.userId).then(iliasObjects => {\n                iliasObjects.push(containerObject);\n                let fileObjects = iliasObjects.filter(iliasObject => {\n                    return iliasObject.type == 'file';\n                });\n                let promises = [];\n                fileObjects.forEach(fileObject => {\n                    promises.push(this.remove(fileObject));\n                });\n\n                return Promise.all(promises);\n            }).then(() => {\n                Log.write(this, \"Deleting Files complete\");\n                this.footerToolbar.removeJob(Job.DeleteFilesTree);\n                return Promise.resolve();\n            }).catch((error) => {\n                Log.error(this, error)\n                this.footerToolbar.removeJob(Job.DeleteFilesTree);\n                return Promise.reject(error);\n            });\n    }\n\n    /**\n     * Recursive function that will remove all fileObjects given.\n     * @param fileObjects\n     * @returns {any}\n     */\n    protected removeAll(fileObjects:ILIASObject[]):Promise<any> {\n        if (fileObjects.length == 0)\n            return Promise.resolve();\n\n        var object = fileObjects.pop();\n        return this.remove(object)\n            .then(() => this.removeAll(fileObjects));\n    }\n\n\n    /**\n     * Tries to open the given file with an external application\n     * @param fileObject\n     * @returns {Promise<T>}\n     */\n    public open(fileObject:ILIASObject):Promise<any> {\n        return this.platform.ready()\n            .then(() => this.existsFile(fileObject))\n            .then(fileEntry => this.openExisting(fileEntry, fileObject));\n    }\n\n    protected openExisting(fileEntry, fileObject):Promise<any> {\n        if (this.platform.is('android')) {\n            return this.openExistingAndroid(fileEntry, fileObject);\n        } else {\n            return this.openExistingIOS(fileEntry, fileObject);\n        }\n    }\n\n    protected openExistingAndroid(fileEntry, fileObject):Promise<any> {\n        return new Promise((resolve, reject) => {\n            Log.write(this, \"Opening a file...\");\n            window['cordova'].plugins.fileOpener2.open(\n                fileEntry.toURL(),\n                fileObject.data.fileType,\n                {\n                    error: function (e) {\n                        if (e.status == 9)\n                            reject(new CantOpenFileTypeException());\n                        else\n                            reject(e);\n                    },\n                    success: function () {\n                        //Log.write(this, \"File opened!\");\n                        resolve();\n                    }\n                }\n            );\n        });\n    }\n\n    protected openExistingIOS(fileEntry, fileObject) {\n        let handler = <any> window;\n        return User.currentUser().then(user => {\n            return new Promise((resolve, reject) => {\n                Log.write(this, \"opening: \" + this.getStorageLocation(user, fileObject) + fileObject.data.fileName);\n                handler.handleDocumentWithURL(\n                    function (msg) {\n                        Log.write(this, 'success: ' + msg)\n                        resolve();\n                    },\n                    function (msg) {\n                        Log.write(this, 'error: ' + msg)\n                        reject(new CantOpenFileTypeException());\n                    },\n                    fileEntry.toURL()\n                );\n            });\n        });\n    }\n\n//    User.c\n    /**\n     * Recursively calculates the used disk space by files under the given ilias Object - if they exist!.\n     * Resolves a promise with the used disk space in bytes\n     * @param iliasObject\n     * @param inUse iff set to true only used up diskspace is shown, otherwise potentially needed disk space is calculated (not precise!)\n     * @returns {Promise<number>}\n     */\n    public static calculateDiskSpace(iliasObject:ILIASObject, inUse = true):Promise<number> {\n        return new Promise((resolve, reject) => {\n            Log.describe(this, \"Calculating disk space for\", iliasObject);\n            ILIASObject.findByParentRefIdRecursive(iliasObject.refId, iliasObject.userId).then(iliasObjects => {\n                let fileObjects = iliasObjects.filter(iliasObject => {\n                    return iliasObject.type == 'file';\n                });\n                let diskSpace = 0;\n                fileObjects.forEach(fileObject => {\n                    let metaData = fileObject.data;\n                    if (metaData.hasOwnProperty('fileVersionDateLocal') && metaData.fileVersionDateLocal || !inUse && metaData) {\n                        Log.describe(this, \"Found disk space usage: \", fileObject.data);\n\n                        diskSpace += parseInt(metaData.fileSize);\n                    }\n                });\n                resolve(diskSpace);\n            }, () => {\n                resolve(0);\n            });\n        });\n    }\n\n    /**\n     * @param A\n     * @param B\n     * @returns {boolean}\n     */\n    public static isAOlderThanB(A:string, B:string) {\n        return (Date.parse(B) > Date.parse(A));\n    }\n\n    /**\n     * Set the fileVersionDateLocal to fileVersionDate from ILIAS\n     * @param fileObject\n     */\n    protected storeFileVersionLocal(fileObject:ILIASObject):Promise<ILIASObject> {\n        return new Promise((resolve, reject) => {\n            FileData.find(fileObject.id).then(fileData => {\n                // First update the local file date.\n                fileData.fileVersionDateLocal = fileData.fileVersionDate;\n                fileData.save().then(() => {\n                    //and update the metadata.\n                    let metaData = fileObject.data;\n                    metaData.fileVersionDateLocal = fileData.fileVersionDate;\n                    fileObject.data = metaData;\n\n                    // recursivly update the download state and resolve\n                    fileObject.updateNeedsDownload().then(() => {\n                        resolve(fileObject);\n                    });\n                });\n            }).catch(error => {\n                reject(error);\n            });\n        });\n    }\n\n    /**\n     * Reset fileVersionDateLocal\n     * @param fileObject\n     */\n    protected resetFileVersionLocal(fileObject:ILIASObject):Promise<ILIASObject> {\n        return new Promise((resolve, reject) => {\n            FileData.find(fileObject.id).then(fileData => {\n                Log.write(this, \"File meta found.\")\n                // First update the local file date.\n                fileData.fileVersionDateLocal = null;\n                fileData.save().then(() => {\n                    Log.write(this, \"file meta saved\")\n                    //and update the metadata.\n                    let metaData = fileObject.data;\n                    metaData.fileVersionDateLocal = null;\n                    fileObject.data = metaData;\n                    fileObject.save().then(() => {\n                        // recursivly update the download state and resolve\n                        fileObject.updateNeedsDownload().then(() => {\n                            Log.write(this, \"File Metadata updated after deletion.\");\n                            resolve(fileObject);\n                        });\n                    });\n                });\n\n            }).catch(error => {\n                reject(error);\n            });\n        });\n    }\n\n    /**\n     * returns the online / offline status.\n     * @returns {boolean}\n     */\n    public isOffline():boolean {\n        return this.network.type == 'none';\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/file.service.ts","import { Component, ViewChild } from '@angular/core';\nimport { Platform, MenuController, Nav, Events} from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport {LoginPage} from '../pages/login/login';\nimport {SettingsPage} from '../pages/settings/settings';\nimport {FavoritesPage} from '../pages/favorites/favorites';\nimport {InfoPage} from '../pages/info/info';\nimport {MigrationsService} from \"../services/migrations.service\";\nimport {ObjectListPage} from \"../pages/object-list/object-list\";\nimport {FooterToolbarService} from \"../services/footer-toolbar.service\";\nimport {NewObjectsPage} from \"../pages/new-objects/new-objects\";\nimport {Log} from \"../services/log.service\";\nimport {Settings} from \"../models/settings\";\nimport {User} from \"../models/user\";\nimport {Network} from \"@ionic-native/network\";\nimport { TranslateService } from \"ng2-translate/src/translate.service\";\nimport {ToastController} from \"ionic-angular\";\nimport {SynchronizationService} from \"../services/synchronization.service\";\nimport {ModalController} from \"ionic-angular\";\nimport {SQLiteDatabaseService} from \"../services/database.service\";\nimport {SQLite} from \"@ionic-native/sqlite\";\n\n@Component({\n    templateUrl: 'app.html'\n})\nexport class MyApp {\n    @ViewChild(Nav) nav:Nav;\n\n    rootPage:any;\n\n    public objectListPage = ObjectListPage;\n    public favoritesPage = FavoritesPage;\n    public newObjectsPage = NewObjectsPage;\n    public settingsPage = SettingsPage;\n    public infoPage = InfoPage;\n    public loginPage = LoginPage;\n    public loggedIn = false;\n    /**\n     * The current logged in user\n     */\n    protected user:User;\n\n  /**\n   *\n   * This constructor sets on classes which are not injectable yet\n   * member instances. This is a workaround for Ionic 3 update with\n   * the current app architecture. This will be changed on release 2.0.0.\n   *\n   * @param {Platform} platform\n   * @param {MenuController} menu\n   * @param {MigrationsService} migrations\n   * @param {FooterToolbarService} footerToolbar\n   * @param {TranslateService} translate\n   * @param {Events} event\n   * @param {ToastController} toast\n   * @param {SynchronizationService} sync\n   * @param {ModalController} modal\n   * @param {StatusBar} statusBar\n   * @param {Network} network\n   * @param {SQLite} sqlite\n   */\n    constructor(public platform:Platform,\n                public menu:MenuController,\n                public migrations:MigrationsService,\n                public footerToolbar:FooterToolbarService,\n                public translate:TranslateService,\n                public event:Events,\n                public toast:ToastController,\n                public sync:SynchronizationService,\n                public modal:ModalController,\n                private readonly statusBar: StatusBar,\n                private readonly network: Network,\n                sqlite: SQLite\n    ) {\n\n      // Set members on classes which are not injectable\n      Settings.NETWORK = this.network;\n      SQLiteDatabaseService.SQLITE = sqlite;\n\n\n        //we initialize the app => db migration, //get global events.\n        this.initializeApp()\n            .then(() => this.loadCurrentUser())\n            .then(() => {\n                (<any> navigator).splashscreen.hide();\n                return Promise.resolve();\n            })\n            // .then(sync.hasUnfinishedSync)\n            // .then(() => sync.execute())\n            // .then(syncResult => {\n            //     if (syncResult.objectsLeftOut.length > 0) {\n            //         let syncModal = this.modal.create(SyncFinishedModal, {syncResult: syncResult});\n            //         syncModal.present();\n            //     } else {\n            //         let toast = this.toast.create({\n            //             message: this.translate.instant(\"sync.success\"),\n            //             duration: 3000\n            //         });\n            //         toast.present();\n            //     }\n            // })\n            // SYNC Nur wenn och eine offen war, lasse dies drin, wird vielleicht nochmals gebraucht ;)\n            // .catch(exception => {\n            //     if (exception == \"NoSyncOpenException\") {\n            //         Log.write(this, \"No sync running.\");\n            //         return Promise.resolve();\n            //     }\n            //     return Promise.reject(exception);\n            // }) // The NoSyncOpeNException is used to cancel the chain, we just log that there's nothing more to do.\n            .catch(error => {\n                Log.error(this, error)\n            }); // Any Errors occuring during initialization get logged.\n    }\n\n    initializeApp():Promise<any> {\n        return this.platform.ready().then(() => {\n            Log.write(this, \"Platform ready.\");\n            // Okay, so the platform is ready and our plugins are available.\n            // Here you can do any higher level native things you might need.\n            this.statusBar.styleLightContent();\n            this.handleGlobalEvents();\n\n            return this.handleMigrations();\n        });\n    }\n\n    handleMigrations():Promise<any> {\n        // return this.migrations.reverse(1).then( () => {\n            return this.executeAllMigrations();\n        // });\n    }\n\n    protected loadCurrentUser():Promise<User> {\n        return User.currentUser()\n            .then(user => {\n                this.loggedIn = true;\n                this.user = user;\n                return this.translateConfig(user);\n            }, () => {\n                this.translateConfigDefault();\n                this.rootPage = LoginPage;\n                (<any> navigator).splashscreen.hide();\n                Log.write(this, \"No user found.\");\n                return Promise.reject(\"No user found.\");\n            })\n            .then(user => {\n                Log.write(this, \"set root page to object list page\");\n                this.nav.setRoot(ObjectListPage);\n                return Promise.resolve(user);\n            });\n    }\n\n    private executeAllMigrations() {\n        return this.migrations.executeAll().catch(error => {\n            Log.write(this, \"Some migrations were rejected...\");\n            Log.error(this, error);\n        });\n    };\n\n    handleGlobalEvents() {\n        this.event.subscribe(\"doLogout\", () => {\n            this.logout();\n        });\n\n        // TODO: we need a user service...\n        this.event.subscribe(\"login\", () => {\n            // this.loggedIn = true;\n            // this.nav.setRoot(ObjectListPage);\n            this.loadCurrentUser();\n        });\n        this.event.subscribe(\"logout\", () => {\n            this.loggedIn = false;\n        });\n        this.network.onDisconnect().subscribe(() => {\n            this.footerToolbar.offline = true;\n        });\n        this.network.onConnect().subscribe(() => {\n            this.footerToolbar.offline = false;\n        });\n    }\n\n    protected logout() {\n        this.menu.close();\n\n        User.currentUser().then(user => {\n            user.accessToken = null;\n            user.refreshToken = null;\n            user.save().then(() => {\n                // this.event.publish(\"logout\");\n                this.loggedIn = false;\n                this.nav.setRoot(LoginPage);\n            }).catch(err => {\n                Log.error(this, err);\n            });\n        });\n\n        let toast = this.toast.create({\n            message: this.translate.instant(\"logout.logged_out\"),\n            duration: 3000\n        });\n        toast.present();\n    }\n\n    translateConfig(user:User):Promise<User> {\n        return Settings.findByUserId(user.id).then(settings => {\n            Log.write(this, \"Using settings language: \" + settings.language);\n            this.translate.use(settings.language);\n            this.translate.setDefaultLang('de');\n            return Promise.resolve(user);\n        });\n    }\n\n    translateConfigDefault():void {\n        Log.write(this, \"Using Default translation.\");\n        let userLang = navigator.language.split('-')[0]; // use navigator lang if available\n        userLang = /(de|en)/gi.test(userLang) ? userLang : 'de';\n\n        // this language will be used as a fallback when a translation isn't found in the current language\n        this.translate.setDefaultLang('de');\n        this.translate.use(userLang);\n    }\n\n    public openPage(page) {\n        // close the menu when clicking a link from the menu\n        this.menu.close();\n        // navigate to the new page if it is not the current page\n        this.nav.push(page);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import {ILIASObject} from \"../models/ilias-object\";\nimport {ILIASObjectPresenter, GenericILIASObjectPresenter} from \"./object-presenter\";\nimport {CourseObjectPresenter} from \"./course-presenter\";\nimport {FolderObjectPresenter} from \"./folder-presenter\";\nimport {GroupObjectPresenter} from \"./group-presenter\";\nimport {FileObjectPresenter} from \"./file-presenter\";\n\nexport class ILIASObjectPresenterFactory {\n    public static instance(object:ILIASObject):ILIASObjectPresenter {\n        if (object.type == 'crs') return new CourseObjectPresenter(object);\n        if (object.type == 'fold') return new FolderObjectPresenter(object);\n        if (object.type == 'grp') return new GroupObjectPresenter(object);\n\n        if (object.type == 'file') return new FileObjectPresenter(object);\n\n        return new GenericILIASObjectPresenter(object);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/presenters/presenter-factory.ts","import {GenericILIASObjectPresenter} from \"./object-presenter\";\n\nexport class CourseObjectPresenter extends GenericILIASObjectPresenter {\n\n    icon():string {\n        return 'easel';\n    }\n\n    showTypeAsText():boolean {\n        return false;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/presenters/course-presenter.ts","import {GenericILIASObjectPresenter} from \"./object-presenter\";\n\nexport class FolderObjectPresenter extends GenericILIASObjectPresenter {\n    \n    icon():string {\n        return 'folder';\n    }\n\n    showTypeAsText():boolean {\n        return false;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/presenters/folder-presenter.ts","import {GenericILIASObjectPresenter} from \"./object-presenter\";\n\nexport class GroupObjectPresenter extends GenericILIASObjectPresenter {\n\n    icon():string {\n        return 'people';\n    }\n\n    showTypeAsText():boolean {\n        return false;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/presenters/group-presenter.ts","import {GenericILIASObjectPresenter} from \"./object-presenter\";\nimport {ILIASAppUtils} from \"../services/ilias-app-utils.service\";\n\nexport class FileObjectPresenter extends GenericILIASObjectPresenter {\n\n    icon():string {\n        return 'document';\n    }\n\n    title():string {\n        return super.title() + ` (${this.getFormattedSize()})`;\n    }\n\n    showTypeAsText():boolean {\n        return false;\n    }\n\n    details():Promise<Array<{label:string; value:string}>> {\n        return super.details().then(details => {\n            let metaData = this.iliasObject.data;\n            details.push({label: 'details.availability', value: this.getLanguageVariableForLocalFile(), translate: true});\n            details.push({label: 'details.size', value: this.getFormattedSize()});\n            details.push({label: 'details.version', value: metaData.fileVersion});\n            details.push({label: 'details.remote_version_date', value: metaData.fileVersionDate});\n            if (metaData.hasOwnProperty('fileVersionDateLocal') && metaData.fileVersionDateLocal) {\n                details.push({label: 'details.local_version_date', value: metaData.fileVersionDateLocal});\n            }\n            return Promise.resolve(details);\n        });\n    }\n\n    protected getLanguageVariableForLocalFile():string {\n        if (this.fileReadyAndUpToDate()) {\n            return 'details.availabilities.up-to-date';\n        } else if (this.fileReady()) {\n            return 'details.availabilities.needs_update';\n        }\n        return 'details.availabilities.needs_download';\n    }\n\n    protected fileReady():boolean {\n        return (this.iliasObject.data.hasOwnProperty('fileVersionDateLocal') && this.iliasObject.data.fileVersionDateLocal);\n    }\n\n    protected fileReadyAndUpToDate():boolean {\n        return this.fileReady() && !this.iliasObject.needsDownload;\n    }\n\n    protected getFormattedSize() {\n        return (this.iliasObject.data.hasOwnProperty('fileSize')) ? ILIASAppUtils.formatSize(this.iliasObject.data.fileSize) : '';\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/presenters/file-presenter.ts","import {ILIASObject} from \"./ilias-object\";\nimport {SQLiteDatabaseService} from \"../services/database.service\";\n\nexport class Favorites {\n\n    public static findByUserId(userId:number):Promise<ILIASObject[]> {\n        return SQLiteDatabaseService.instance()\n            .then(db => db.query('SELECT * FROM objects WHERE isFavorite = 1 AND userId = ? ORDER BY title ASC', [userId]))\n            .then((response) => {\n                let favorites = [];\n                for (let i = 0; i < (<any> response).rows.length; i++) {\n                    favorites.push(ILIASObject.find(<number> (<any> response).rows.item(i).id))\n                }\n                return Promise.all(favorites);\n            });\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/favorites.ts","import {ILIASObject} from \"../models/ilias-object\";\nimport {ILIASObjectAction, ILIASObjectActionAlert, ILIASObjectActionSuccess} from \"./object-action\";\nimport {FileService} from \"../services/file.service\";\nimport {ILIASObjectActionResult} from \"./object-action\";\n\nexport class RemoveLocalFileAction extends ILIASObjectAction {\n\n    public constructor(public title:string, public fileObject:ILIASObject, public file:FileService) {\n        super();\n    }\n\n    public execute():Promise<ILIASObjectActionResult> {\n        return new Promise((resolve, reject) => {\n            this.file.remove(this.fileObject).then(() => {\n                resolve(new ILIASObjectActionSuccess('Sucessfully removed file'));\n            });\n        });\n    }\n\n    public alert():ILIASObjectActionAlert {\n        return {\n            title: 'Delete downloaded file ' + this.fileObject.title,\n            subTitle: 'Are you sure you want to delete this file?',\n        }\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/actions/remove-local-file-action.ts","import {ILIASObject} from \"../models/ilias-object\";\nimport {ILIASObjectAction, ILIASObjectActionAlert} from \"./object-action\";\nimport {FileService} from \"../services/file.service\";\nimport {ILIASObjectActionResult} from \"./object-action\";\nimport {ILIASObjectActionNoMessage} from \"./object-action\";\n\nexport class OpenFileExternalAction extends ILIASObjectAction {\n\n    public constructor(public title:string,\n                       public fileObject:ILIASObject,\n                       public file:FileService) {\n        super();\n    }\n\n    public execute():Promise<ILIASObjectActionResult> {\n        return new Promise((resolve, reject) => {\n            this.file.existsFile(this.fileObject).then(() => {\n                this.file.open(this.fileObject).then(() => {\n                    resolve(new ILIASObjectActionNoMessage());\n                }, (error) => {\n                    reject(error);\n                });\n            }, (error) => {\n                reject(error);\n            });\n        });\n    }\n\n    public alert():ILIASObjectActionAlert {\n        return null;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/actions/open-file-external-action.ts","import {ILIASObject} from \"../models/ilias-object\";\nimport {ILIASObjectAction, ILIASObjectActionAlert} from \"./object-action\";\nimport {FileService} from \"../services/file.service\";\nimport {TranslateService} from \"ng2-translate/ng2-translate\";\nimport {Log} from \"../services/log.service\";\nimport {User} from \"../models/user\";\nimport {Settings} from \"../models/settings\";\nimport {AlertController} from \"ionic-angular/index\";\nimport {ILIASObjectActionNoMessage} from \"./object-action\";\nimport {ILIASObjectActionSuccess} from \"./object-action\";\nimport {ILIASObjectActionResult} from \"./object-action\";\nimport {OfflineException} from \"../exceptions/OfflineException\";\n\nexport class DownloadFileAction extends ILIASObjectAction {\n\n\n    public constructor(public title: string,\n                       public fileObject: ILIASObject,\n                       public file: FileService,\n                       public translate: TranslateService,\n                       public alerter: AlertController) {\n        super();\n        this.title = title;\n    }\n\n    public execute(): Promise<ILIASObjectActionResult> {\n        // Download is only executed if a newer version is available in ILIAS\n        Log.write(this, \"Do we need to download the file first? \", this.fileObject.needsDownload)\n        if (this.fileObject.needsDownload && this.file.isOffline())\n            return Promise.reject(new OfflineException());\n\n        if (this.fileObject.needsDownload)\n            return this.wlanAndDownload();\n\n        return this.file.open(this.fileObject);\n    }\n\n    public wlanAndDownload(): Promise<ILIASObjectActionResult> {\n        return new Promise((resolve, reject) => {\n\n            User.find(this.fileObject.userId).then(user => {\n                Settings.findByUserId(user.id).then(settings => {\n                    if (settings.shouldntDownloadBecauseOfWLAN()) {\n                        let alert = this.alerter.create({\n                            title: this.translate.instant(\"actions.download_without_wlan\"),\n                            subTitle: this.translate.instant(\"actions.download_without_wlan_continue\"),\n                            buttons: [\n                                {\n                                    text: this.translate.instant(\"cancel\"),\n                                    role: 'cancel',\n                                    handler: () => {\n                                        resolve(new ILIASObjectActionNoMessage());\n                                    }\n                                },\n                                {\n                                    text: 'Ok',\n                                    handler: () => {\n                                        this.download(resolve, reject);\n                                    }\n                                }\n                            ]\n                        });\n                        alert.present();\n                    } else {\n                        this.download(resolve, reject);\n                    }\n                });\n            });\n        });\n\n    }\n\n    public download(resolve, reject) {\n        this.file.download(this.fileObject, true).then(() => {\n            resolve(new ILIASObjectActionSuccess(this.translate.instant(\"actions.download_successful\")));\n        }, (error) => {\n            Log.describe(this, \"Could not download file: \", error);\n            reject(this.translate.instant(\"actions.offline_and_no_local_file\"));\n        });\n    };\n\n    public alert(): ILIASObjectActionAlert {\n        return null;\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/actions/download-file-action.ts","/**\n * Holds the the styling information, if an ILIAS object has a page layout.\n */\nexport class PageLayout {\n\n  readonly icon: string = \"information-circle\";\n  readonly text: string;\n\n  constructor(\n    type: string = \"\"\n  ) {\n\n    switch (type) {\n      case \"crs\":\n        this.text = \"page-layout.course\";\n        break;\n      case \"grp\":\n        this.text = \"page-layout.group\";\n        break;\n      case \"fold\":\n        this.text = \"page-layout.folder\";\n        break;\n      default:\n        this.text = \"page-layout.default\";\n        break;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/page-layout.ts","/**\n * Contains the data to display a timeline.\n */\nexport class TimeLine {\n\n  readonly icon: string = \"pulse\";\n  readonly text: string;\n\n  /**\n   * Sets the text as language variable depending on the given {@code type}.\n   * If the type can not be identified a default text will be set.\n   *\n   *\n   * @param {string} type an ILIAS object type\n   */\n  constructor(\n    type: string = \"\"\n  ) {\n\n    switch (type) {\n      case \"crs\":\n        this.text = \"timeline.course\";\n        break;\n      case \"grp\":\n        this.text = \"timeline.group\";\n        break;\n      default:\n        this.text = \"timeline.default\";\n        break;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/timeline.ts","import {BaseMigration} from \"./migration\";\nimport {SQLiteDatabaseService} from \"../services/database.service\";\n\nexport class CreateModelsMigration extends BaseMigration {\n\n    up():Promise<any> {\n        return new Promise((resolve, reject) => {\n\n            SQLiteDatabaseService.instance().then(db => {\n                // users\n                var users = db.query(\n                    'CREATE TABLE IF NOT EXISTS users ( ' +\n                    'id INTEGER PRIMARY KEY AUTOINCREMENT,' +\n                    'iliasUserId INTEGER,' +\n                    'iliasLogin TEXT,' +\n                    'installationId INTEGER,' +\n                    'accessToken TEXT,' +\n                    'refreshToken TEXT,' +\n                    'lastTokenUpdate INTEGER' +\n                    ')'\n                ).then((data) => {\n                    console.log(\"Created table users\");\n                }, (error) => {\n                    console.log(\"Could not create table users\");\n                });\n\n                // objects\n                var objects = db.query(\n                    'CREATE TABLE IF NOT EXISTS objects ( ' +\n                    'id INTEGER PRIMARY KEY AUTOINCREMENT,' +\n                    'userId INTEGER,' +\n                    'objId INTEGER,' +\n                    'refId INTEGER,' +\n                    'parentRefId INTEGER,' +\n                    'type TEXT,' +\n                    'title TEXT,' +\n                    'description TEXT,' +\n                    'link TEXT,' +\n                    'isOfflineAvailable INTEGER,' +\n                    'offlineAvailableOwner TEXT,' +\n                    'isNew INTEGER,' +\n                    'isUpdated INTEGER,' +\n                    'isFavorite INTEGER,' +\n                    'data TEXT,' +\n                    'repoPath TEXT,' +\n                    'needsDownload INTEGER,' +\n                    'createdAt DATETIME DEFAULT CURRENT_TIMESTAMP,' +\n                    'updatedAt DATETIME' +\n                    ')'\n                ).then((data) => {\n                    console.log(\"Created table objects\");\n                }, (error) => {\n                    console.log(\"Could not create table objects\");\n                });\n\n                // files\n                var files = db.query(\n                    'CREATE TABLE IF NOT EXISTS files ( ' +\n                    'id INTEGER PRIMARY KEY AUTOINCREMENT,' +\n                    'iliasObjectId INTEGER,' +\n                    'fileName TEXT,' +\n                    'fileSize INTEGER,' +\n                    'fileType TEXT,' +\n                    'fileExtension TEXT,' +\n                    'fileVersionDate DATETIME,' +\n                    'fileVersionDateLocal DATETIME' +\n                    ')'\n                ).then((data) => {\n                    console.log(\"Created table files\");\n                }, (error) => {\n                    console.log(\"Could not create table files\");\n                });\n\n                // desktop\n                var desktop = db.query(\n                    'CREATE TABLE IF NOT EXISTS desktop ( ' +\n                    'id INTEGER PRIMARY KEY AUTOINCREMENT,' +\n                    'userId INTEGER,' +\n                    'objId INTEGER' +\n                    ')'\n                ).then((data) => {\n                    console.log(\"Created table desktop\");\n                }, (error) => {\n                    console.log(\"Could not create table desktop\");\n                });\n\n\n                // sync\n                var sync = db.query(\n                    'CREATE TABLE IF NOT EXISTS synchronization ( ' +\n                    'id INTEGER PRIMARY KEY AUTOINCREMENT,' +\n                    'userId INTEGER,' +\n                    'startDate DATETIME,' +\n                    'endDate DATETIME,' +\n                    'isRunning INTEGER' +\n                    ')'\n                ).then((data) => {\n                    console.log(\"Created table synchronization\");\n                }, (error) => {\n                    console.log(\"Could not create table synchronization\");\n                });\n\n                // settings\n                var settings = db.query(\n                    'CREATE TABLE IF NOT EXISTS settings ( ' +\n                    'id INTEGER PRIMARY KEY AUTOINCREMENT,' +\n                    'userId INTEGER,' +\n                    'language TEXT,' +\n                    'downloadSize INTEGER,' +\n                    'quotaSize INTEGER,' +\n                    'downloadWlan INTEGER' +\n                    ')'\n                ).then((data) => {\n                    console.log(\"Created table settings\");\n                }, (error) => {\n                    console.log(\"Could not create table settings\");\n                });\n\n                Promise.all([\n                    users,\n                    objects,\n                    files,\n                    desktop,\n                    sync,\n                    settings\n                ]).then(() => {\n                    resolve();\n                }).catch(err => {\n                    reject(err);\n                });\n            });\n        });\n\n    }\n\n    down():Promise<any> {\n        return new Promise((resolve, reject) => {\n\n            SQLiteDatabaseService.instance().then(db => {\n                var users = db.query(\"DROP TABLE IF EXISTS users\");\n                var objects = db.query(\"DROP TABLE IF EXISTS objects\");\n                var files = db.query(\"DROP TABLE IF EXISTS files\");\n                var file = db.query(\"DROP TABLE IF EXISTS file\");\n                var desktop = db.query(\"DROP TABLE IF EXISTS desktop\");\n                var sync = db.query(\"DROP TABLE IF EXISTS synchronization\");\n                var settings = db.query(\"DROP TABLE IF EXISTS settings\");\n\n                Promise.all([\n                    users,\n                    objects,\n                    files,\n                    file,\n                    desktop,\n                    sync,\n                    settings\n                ]).then( () => {\n                    resolve();\n                }).catch(err => {\n                    reject(err);\n                });\n            });\n        });\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/migrations/1-create-models-migration.ts","\nimport {BaseMigration} from \"./migration\";\nimport {SQLiteDatabaseService} from \"../services/database.service\";\n\nexport class AddObjectAttributesMigration\n  extends BaseMigration {\n\n  up(): Promise<any> {\n    return new Promise((resolve, reject) => {\n\n        SQLiteDatabaseService.instance().then(db => {\n\n          const alterPageLayout: Promise<any> = db.query(\n            \"ALTER TABLE objects \" +\n            \"ADD hasPageLayout BOOLEAN NOT NULL DEFAULT 0 CHECK (hasPageLayout IN (0,1))\"\n          ).then(() => {\n            console.log(\"Alter table objects with column 'hasPageLayout'\");\n          }, (error) => {\n            console.log(`Could not alter table objects with column 'hasPageLayout': ${JSON.stringify(error)}`)\n          });\n\n          const alterTimeline: Promise<any> = db.query(\n            \"ALTER TABLE objects \" +\n            \"ADD hasTimeline BOOLEAN NOT NULL DEFAULT 0 CHECK (hasTimeline IN (0,1))\"\n          ).then(() => {\n            console.log(\"Alter table objects with column 'hasTimeline'\");\n          }, (error) => {\n            console.debug(`Could not alter table objects with column 'hasTimeline': ${JSON.stringify(error)}`)\n          });\n\n          const alterPermissionType: Promise<any> = db.query(\n            \"ALTER TABLE objects \" +\n            \"ADD permissionType TEXT NOT NULL DEFAULT 'visible'\"\n          ).then(() => {\n            console.log(\"Alter table objects with column 'permissionType'\");\n          }, (error) => {\n            console.log(`Could not alter table objects with column 'permissionType': ${JSON.stringify(error)}`)\n          });\n\n          Promise.all([alterPageLayout, alterTimeline, alterPermissionType]).then(() => {\n            resolve()\n          }).catch((error) => {\n            reject(error)\n          });\n        })\n    });\n  }\n\n  down(): Promise<any> {\n    return new Promise((resovle, reject) => {\n\n      SQLiteDatabaseService.instance().then(db => {\n\n        const alterPageLayout: Promise<any> = db.query(\"ALTER TABLE objects \" +\n          \"DROP COLUMN hasPageLayout\"\n        ).then(() => {\n          console.log(\"Alter table objects: drop column 'hasPageLayout'\");\n        }, (error) => {\n          console.log(`Could not alter table objects: drop column 'hasPageLayout', error=${JSON.stringify(error)}`)\n        });\n\n        const alterTimeline: Promise<any> = db.query(\"ALTER TABLE objects \" +\n          \"DROP COLUMN hasTimeline\"\n        ).then(() => {\n          console.log(\"Alter table objects: drop column 'hasTimeline'\");\n        }, (error) => {\n          console.log(`Could not alter table objects: drop column 'hasTimeline', error=${JSON.stringify(error)}`)\n        });\n\n        const alterPermissionType: Promise<any> = db.query(\"ALTER TABLE objects \" +\n          \"DROP COLUMN permissionType\"\n        ).then(() => {\n          console.log(\"Alter table objects: drop column 'permissionType'\");\n        }, (error) => {\n          console.log(`Could not alter table objects: drop column 'permissionType', error=${JSON.stringify(error)}`)\n        });\n\n        Promise.all([alterPageLayout, alterTimeline, alterPermissionType]).then(() => {\n          resovle();\n        }).catch((error) => {\n          reject(error);\n        });\n      })\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/migrations/2-add-object-attributes-migration.ts","import {Inject, Injectable} from '@angular/core';\nimport {User} from \"../models/user\";\nimport {ILIASInstallation} from \"../config/ilias-config\";\nimport {SQLiteDatabaseService} from \"./database.service\";\nimport {DatabaseService} from \"./database.service\";\nimport {ILIAS_CONFIG_FACTORY, ILIASConfigFactory} from \"./ilias-config-factory\";\n\n/**\n * Main service of the ILIAS app, used to access globals such as the current user, config etc.\n * An instance of this service is created when bootstrapping the app and is globally available across all components.\n */\n@Injectable()\nexport class ConnectionService {\n\n    constructor(\n      @Inject(ILIAS_CONFIG_FACTORY)\n      private readonly configFactory: ILIASConfigFactory\n    ) {}\n\n    /**\n     * Access to singleton instance of DatabaseService\n     * @returns {DatabaseService}\n     */\n    get db():Promise<DatabaseService>{\n        return SQLiteDatabaseService.instance();\n    }\n\n    /**\n     * Get the ILIAS installation from the given user, see www/app-config.json\n     * @param user\n     * @returns {Promise<Object>}\n     */\n    installation(user:User):Promise<ILIASInstallation> {\n        return new Promise((resolve, reject) => {\n            let installationId = user.installationId;\n            this.configFactory.get().then((config) => {\n                let installation = config.installations.filter((installation) => {\n                    return installation.id == installationId;\n                });\n                if (installation.length) {\n                    resolve(installation[0]);\n                }\n            });\n        });\n    }\n\n    installations():Promise<ILIASInstallation[]> {\n        return new Promise((resolve, reject) => {\n        \tthis.configFactory.get().then( (config) => {\n                resolve(config.installations);\n            })\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/ilias-app.service.ts","import { Pipe, PipeTransform } from '@angular/core';\nimport {ILIASAppUtils} from \"../services/ilias-app-utils.service\";\n\n\n@Pipe({name: 'fileSize'})\nexport class FileSizePipe implements PipeTransform {\n    transform(value: number): any {\n        return ILIASAppUtils.formatSize(value);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pipes/fileSize.pipe.ts","import {Component} from '@angular/core';\nimport {NavParams} from 'ionic-angular';\n\n@Component({\n    templateUrl: 'modal.html',\n})\nexport class ModalPage {\n\n    public title = '';\n\n    public text = '';\n\n    /**\n     * @param params\n     */\n    constructor(public params:NavParams) {\n        this.text = params.get('text');\n        this.title = params.get('title');\n    }\n\n\n    ngAfterViewInit() {\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/modal/modal.ts","import {ActiveRecord, SQLiteConnector} from \"./active-record\";\nimport {SQLiteDatabaseService} from \"../services/database.service\";\nimport {User} from \"./user\";\n\n/**\n * Holds additional meta data for ILIAS file objects\n */\nexport class FileData extends ActiveRecord {\n\n    /**\n     * Internal ID of the corresponding ILIASObject\n     */\n    public iliasObjectId: number;\n\n    /**\n     * File name, including file extension\n     */\n    public fileName: string;\n\n    /**\n     * File size in bytes\n     */\n    public fileSize: number;\n\n    /**\n     * File type, e.g. application/pdf\n     */\n    public fileType: string;\n\n    /**\n     * Extension, e.g. pdf\n     */\n    public fileExtension: string;\n\n    /**\n     * Last version date (create date of file object) in ILIAS\n     */\n    public fileVersionDate: string;\n\n    /**\n     * Last version date from file on device\n     * Note: This date is set to fileVersionDate after a successful download. Meaning: If the date is set, the file\n     * is also existing on the local device. If fileVersionDate > fileVersionDateLocal, a new version is available in ILIAS\n     */\n    public fileVersionDateLocal: string;\n\n    constructor(id = 0) {\n        super(id, new SQLiteConnector('files', [\n            'iliasObjectId',\n            'fileName',\n            'fileSize',\n            'fileType',\n            'fileExtension',\n            'fileVersionDate',\n            'fileVersionDateLocal',\n        ]));\n    }\n\n    public needsDownload() {\n        if (!this.hasOwnProperty('fileVersionDateLocal')) {\n            return true;\n        }\n        if (!this.fileVersionDateLocal) {\n            return true;\n        }\n        return (Date.parse(this.fileVersionDate) > Date.parse(this.fileVersionDateLocal));\n    }\n\n    /**\n     * Get FileData object by corresponding internal ID of an ILIASObject\n     * @param iliasObjectId\n     * @returns {Promise<FileData>}\n     */\n    public static find(iliasObjectId: number): Promise<FileData> {\n        return SQLiteDatabaseService.instance()\n            .then(db => {\n                return db.query('SELECT * FROM files WHERE iliasObjectId = ?', [iliasObjectId]);\n            })\n            .then((response: any) => {\n                let fileData = new FileData();\n                if (response.rows.length == 0) {\n                    fileData.iliasObjectId = iliasObjectId;\n                } else {\n                    fileData.readFromObject(response.rows.item(0));\n                }\n                return Promise.resolve(fileData);\n            });\n    }\n\n    /**\n     * Calculate the used disk space of the given user\n     * @param user\n     * @returns {Promise<number>}\n     */\n    public static getTotalDiskSpaceForUser(user:User): Promise<number> {\n        return SQLiteDatabaseService.instance()\n            .then(db => {\n                return db.query(\"SELECT SUM(files.fileSize) AS diskSpace FROM users \" +\n                    \"INNER JOIN objects ON objects.userId = users.id \" +\n                    \"INNER JOIN files ON files.iliasObjectId = objects.id \" +\n                    \"WHERE users.id = ? AND files.fileVersionDateLocal is NOT NULL GROUP BY users.id\", [user.id]);\n            })\n            .then((response: any) => {\n                let diskSpace = 0;\n                if (response.rows.length) {\n                    diskSpace = response.rows.item(0).diskSpace;\n                }\n                return Promise.resolve(diskSpace);\n        });\n    }\n\n    /**\n     * Returns the total disk space used by files on this device over all users and installations\n     * @returns {Promise<number>}\n     */\n    public static getTotalDiskSpace(): Promise<number> {\n        return SQLiteDatabaseService.instance()\n            .then(db => {\n                return db.query('SELECT * FROM files WHERE fileVersionDateLocal is NOT NULL');\n            })\n            .then((response: any) => {\n                let usedDiskSpace = 0;\n                for (let i = 0; i < response.rows.length; i++) {\n                    usedDiskSpace += response.rows.item(i).fileSize;\n                }\n                return Promise.resolve(usedDiskSpace);\n            });\n    }\n\n    /**\n     * Returns true if there is a local file version but it is no longer up to date\n     * @returns {boolean}\n     */\n    isUpdated(): boolean {\n        return this.hasOwnProperty('fileVersionDateLocal') && this.fileVersionDateLocal && this.needsDownload();\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/models/file-data.ts","import {Injectable} from '@angular/core';\nimport 'rxjs/add/operator/toPromise';\nimport {User} from \"../models/user\";\nimport {ILIASRestProvider} from \"./ilias-rest.provider\";\nimport {ILIASObject} from \"../models/ilias-object\";\nimport {DesktopItem} from \"../models/desktop-item\";\nimport {DataProviderFileObjectHandler} from \"./handlers/file-object-handler\";\nimport {Log} from \"../services/log.service\";\n\n@Injectable()\nexport class DataProvider {\n\n    constructor(protected rest:ILIASRestProvider,\n                protected fileObjectHandler:DataProviderFileObjectHandler) {\n    }\n\n    /**\n     * Get ILIAS objects on desktop\n     * @param user\n     * @returns {Promise<ILIASObject[]>}\n     */\n    public getDesktopData(user:User):Promise<ILIASObject[]> {\n        return this.rest.getDesktopData(user)\n            .then(data => this.storeILIASDesktopObjects(data, user))\n            .then(objects => objects.sort(ILIASObject.compare));\n    }\n\n\n    /**\n     * Fetch and store ILIAS objects under the given parent ref-ID\n     * @param parentObject\n     * @param user\n     * @param recursive\n     * @returns {Promise<ILIASObject[]>}\n     */\n    public getObjectData(parentObject:ILIASObject, user:User, recursive, refreshFiles = true):Promise<ILIASObject[]> {\n        //TODO: we want to update the meta data just once.\n        return this.rest.getObjectData(parentObject.refId, user, recursive)\n            .then((data) => this.storeILIASObjects(data, user, parentObject, recursive, refreshFiles))\n            .then(objects => objects.sort(ILIASObject.compare));\n    }\n\n    /**\n     * Creates or updates an ILIASObject based on data by a given JS-object (fetched from remote)\n     * @param object\n     * @param user\n     * @param rootParent\n     * @returns {Promise<ILIASObject>}\n     */\n    protected storeILIASObject(object:any, user:User, rootParent:ILIASObject = null, refreshFiles = true):Promise<ILIASObject> {\n\n        Log.write(this, \"Storing ILIAS Object\");\n\n        let the_iliasObject:ILIASObject = null;\n\n        return ILIASObject.findByRefId(object.refId, user.id)\n            .then(iliasObject => {\n                iliasObject.readFromObject(object);\n\n                // If the object is stored newly, we inherit the offlineAvailable flag from the parent and also mark the object as new\n                if (rootParent && !iliasObject.id && rootParent.isOfflineAvailable) {\n                    iliasObject.isOfflineAvailable = true;\n                    iliasObject.offlineAvailableOwner = ILIASObject.OFFLINE_OWNER_SYSTEM;\n                }\n                the_iliasObject = iliasObject;\n                return iliasObject;\n            })\n            .then(iliasObject => iliasObject.parent)\n            .then(parent => {\n                if(the_iliasObject.id == 0 && parent != null)\n                    the_iliasObject.isNew = true;\n                return the_iliasObject.save() as Promise<ILIASObject>;\n            })\n            .then((iliasObject:ILIASObject) => {\n                if (iliasObject.type == 'file') {\n                    if(refreshFiles)\n                        return this.onSaveFile(user, iliasObject);\n                    else {\n                        iliasObject.isOfflineAvailable = false;\n                        return iliasObject.save() as Promise<ILIASObject>;\n                    }\n                } else {\n                    return Promise.resolve(iliasObject);\n                }\n            });\n    }\n\n    protected onSaveFile(user, iliasObject:ILIASObject):Promise<ILIASObject> {\n\n        let resolveObject:ILIASObject;\n\n        return this.fileObjectHandler.onSave(iliasObject, user)\n            .then(iliasObject => {\n                resolveObject = iliasObject;\n                return iliasObject.updateNeedsDownload();\n            }).then(() => {\n                return Promise.resolve(resolveObject);\n            })\n    }\n\n    /**\n     * Stores courses and groups on desktop\n     * @param objects\n     * @param user\n     * @returns {Promise<ILIASObject[]>}\n     */\n    protected storeILIASDesktopObjects(objects:Array<any>, user:User):Promise<ILIASObject[]> {\n            let iliasObjects = [];\n            let promises = [];\n            // We store desktop items that are only courses or groups\n            objects.forEach(object => {\n                let promise = this.storeILIASObject(object, user).then((iliasObject) => {\n                    iliasObjects.push(iliasObject);\n                });\n                promises.push(promise);\n            });\n\n            Log.write(this, \"Storing Objects in Cache.\");\n            return Promise.all(promises)\n                .then( () => DesktopItem.storeDesktopItems(user.id, iliasObjects) )\n                .then( () => Promise.resolve(iliasObjects) );\n\n    }\n\n\n    /**\n     * Stores (create, update) local ILIAS objects from the given objects fetched from remote.\n     * This method also deletes local ILIAS objects not being delivered anymore\n     * @param remoteObjects\n     * @param user\n     * @param parentObject\n     * @param recursive\n     * @returns {Promise<ILIASObject[]>}\n     */\n    protected storeILIASObjects(remoteObjects:Array<any>, user:User, parentObject:ILIASObject, recursive = false, refreshFiles = true):Promise<ILIASObject[]> {\n\n        if(recursive) {\n            return ILIASObject.findByParentRefIdRecursive(parentObject.refId, user.id)\n                .then(existingObjects => this.saveOrDeleteObjects(remoteObjects, existingObjects, user, parentObject, refreshFiles));\n        } else {\n            return ILIASObject.findByParentRefId(parentObject.refId, user.id)\n                .then(existingObjects => this.saveOrDeleteObjects(remoteObjects, existingObjects, user, parentObject, refreshFiles));\n        }\n    }\n\n    /**\n     * @param remoteObjects\n     * @param existingObjects\n     * @param user\n     * @param rootParent\n     * @returns {Promise<ILIASObject[]>}\n     */\n    protected saveOrDeleteObjects(remoteObjects:Array<any>, existingObjects:ILIASObject[], user:User, rootParent:ILIASObject, refreshFiles = true):Promise<ILIASObject[]> {\n            let iliasObjects = [];\n            let promises = [];\n            let objectsToDelete = existingObjects;\n            Log.describe(this, \"Existing Objects.\", existingObjects);\n            remoteObjects.forEach(remoteObject => {\n                let promise = this.storeILIASObject(remoteObject, user, rootParent, refreshFiles).then((iliasObject) => {\n                    iliasObjects.push(iliasObject);\n                    // Check if the stored object exists already locally, if so, remove it from objectsToDelete\n                    let objectIndex = existingObjects.findIndex(existingObject => {\n                        return existingObject.objId == iliasObject.objId;\n                    });\n                    if (objectIndex > -1) {\n                        objectsToDelete.splice(objectIndex, 1);\n                    }\n                });\n                promises.push(promise);\n            });\n\n            return Promise.all(promises).then(() => {\n                // TODO: build the following into the chain.\n                // Delete all existing objects left that were not delivered\n                objectsToDelete.forEach(iliasObject => {\n                    this.deleteObject(iliasObject, user);\n                });\n\n                return Promise.resolve(iliasObjects);\n            });\n    }\n\n    /**\n     * Deletes a given ILIAS Object from local DB\n     * Note: This is fired async atm, we don't care about the result\n     * @param iliasObject\n     * @param user\n     */\n    protected deleteObject(iliasObject:ILIASObject, user:User) {\n        let promises = [];\n        promises.push(iliasObject.destroy());\n        if (iliasObject.type == 'file') {\n            promises.push(this.fileObjectHandler.onDelete(iliasObject, user));\n        }\n        // Container object must also delete their children\n        if (iliasObject.isContainer()) {\n            this.getObjectData(iliasObject, user, false, true).then(iliasObjects => {\n                iliasObjects.forEach(iliasObject => {\n                    promises.push(this.deleteObject(iliasObject, user));\n                });\n            });\n        }\n        return Promise.all(promises);\n    }\n\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/data-provider.provider.ts","import {Injectable} from '@angular/core';\nimport {ILIASObject} from \"../models/ilias-object\";\nimport {DataProvider} from \"../providers/data-provider.provider\";\nimport {User} from \"../models/user\";\nimport {SQLiteDatabaseService} from \"./database.service\";\nimport {FileService} from \"./file.service\";\nimport {Events} from \"ionic-angular\";\nimport {FooterToolbarService} from \"./footer-toolbar.service\";\nimport { TranslateService } from \"ng2-translate/src/translate.service\";\nimport {Log} from \"./log.service\";\nimport {Job} from \"./footer-toolbar.service\";\nimport {FileData} from \"../models/file-data\";\n\n@Injectable()\nexport class SynchronizationService {\n\n    protected db:SQLiteDatabaseService;\n\n    /**\n     * File ILIASObject that should be downloaded\n     * @type {Array}\n     */\n    protected downloads:ILIASObject[] = [];\n\n    protected user:User;\n\n\n    protected syncQueue:{object:ILIASObject, resolver, rejecter}[] = [];\n\n    public lastSync: Date;\n    public lastSyncString: string;\n\n    public constructor(protected dataProvider:DataProvider,\n                       protected events:Events,\n                       protected fileService:FileService,\n                       protected footerToolbar:FooterToolbarService,\n                       protected translate:TranslateService) {\n    }\n\n    protected _isRunning:boolean = false;\n\n    /**\n     * Execute synchronization\n     * If iliasObject is null, executes a global sync (data is fetched for all objects marked as offline available)\n     * If iliasObject is given, only fetches data for the given object\n     * @param iliasObject\n     * @returns {any}\n     */\n    public execute(iliasObject:ILIASObject = null):Promise<SyncResults> {\n        Log.write(this, \"Sync started!\");\n        if (this._isRunning && iliasObject == null) {\n            return Promise.reject(this.translate.instant(\"actions.sync_already_running\"));\n        }else if(this._isRunning) {\n            let resolver;\n            let rejecter;\n            let promise: Promise<SyncResults> = new Promise((resolve, reject) => {\n                resolver = resolve;\n                rejecter = reject;\n            });\n            this.syncQueue.push({\n                object: iliasObject,\n                resolver: resolver,\n                rejecter: rejecter\n            });\n            return promise;\n        }\n\n        this.events.publish(\"sync:start\");\n\n        return User.currentUser()\n            .then(user => {\n                this.user = user;\n                return this.syncStarted(this.user.id);\n            })\n            .then( () => {\n                if(iliasObject) {\n                    return this.executeContainerSync(iliasObject);\n                } else {\n                    return this.executeGlobalSync();\n                }\n            }).then((syncResult) => {\n                if(this.syncQueue.length > 0) {\n                    let sync = this.syncQueue.pop();\n                    this.execute(sync.object)\n                        .then(syncResult => {\n                            sync.resolver(syncResult);\n                        }).catch(error => {\n                            sync.rejecter(error);\n                    });\n                }\n                return Promise.resolve(syncResult);\n            })\n            .catch( (error) => {\n                // we catch any occuring errors in the process so we can turn off the sync status. then we delegate for any view to be able to recatch the exception.\n                this.syncEnded(this.user.id);\n                return Promise.reject(error);\n            });\n    }\n\n    public get isRunning() {\n        return this._isRunning;\n    }\n\n    /**\n     * set local isRunning and db entry that a sync is in progress\n     */\n    protected syncStarted(user_id:number):Promise<any> {\n        return new Promise((resolve, reject) => {\n            this.footerToolbar.addJob(Job.Synchronize, this.translate.instant(\"synchronisation_in_progress\"));\n            this._isRunning = true;\n            SQLiteDatabaseService.instance().then(db => {\n                db.query(\"INSERT INTO synchronization (userId, startDate, endDate, isRunning) VALUES (\" + user_id + \", date('now'), NULL, 1)\").then(() => {\n                    resolve();\n                }).catch(err => {\n                    Log.error(this, err);\n                    reject();\n                });\n            });\n        });\n    }\n\n    /**\n     * set local isRunning and closes the db entry that a sync is in progress\n     */\n    protected syncEnded(user_id:number):Promise<any> {\n            this.footerToolbar.removeJob(Job.Synchronize);\n            this._isRunning = false;\n            Log.write(this, \"ending Sync.\");\n            return SQLiteDatabaseService.instance()\n                .then(db => db.query(\"UPDATE synchronization SET isRunning = 0, endDate = date('now') WHERE userId = \" + user_id + \" AND isRunning = 1\"))\n                .then(() => this.updateLastSync(user_id));\n    }\n\n    public updateLastSync(user_id: number){\n        return SQLiteDatabaseService.instance()\n            .then(db => db.query(\"SELECT endDate FROM synchronization WHERE userId = \" + user_id + \" AND endDate not Null ORDER BY endDate DESC LIMIT 1\"))\n            .then((result) => {\n                if(result.rows.length == 0)\n                    return Promise.resolve(null);\n                Log.describe(this, \"last sync: \", new Date(result.rows.item(0).endDate));\n                this.lastSync = new Date(result.rows.item(0).endDate);\n                this.lastSyncString = this.lastSync.getDate()+\".\"+(this.lastSync.getMonth()+1)+\".\"+this.lastSync.getFullYear();\n                Log.describe(this, \"lastdate\", this.lastSync);\n                return Promise.resolve(this.lastSync);\n            });\n    }\n\n    /**\n     * check if the user still has a running sync in the db.\n     */\n    public hasUnfinishedSync(user:User):Promise<boolean> {\n        if(!user)\n            return Promise.reject(\"No user given.\");\n\n        return SQLiteDatabaseService.instance()\n                .then(db => db.query(\"SELECT * FROM synchronization WHERE isRunning = 1 AND userId = \" + user.id))\n                .then(result => Promise.resolve((<any> result).rows.length > 0));\n    }\n\n    /**\n     * Get all objects marked as offline available by the user\n     * @param user\n     * @returns {Promise<ILIASObject[]>}\n     */\n    protected getOfflineAvailableObjects(user:User):Promise<ILIASObject[]> {\n        let sql = \"SELECT * FROM objects WHERE userId = ? AND isOfflineAvailable = 1 AND offlineAvailableOwner = ?\";\n\n        return SQLiteDatabaseService.instance()\n            .then(db => db.query(sql, [user.id, ILIASObject.OFFLINE_OWNER_USER]))\n            .then((response:any) => {\n                    let iliasObjectPromises = [];\n                    for (let i = 0; i < response.rows.length; i++) {\n                        iliasObjectPromises.push(ILIASObject.find(response.rows.item(i).id));\n                    }\n\n                    return Promise.all(iliasObjectPromises);\n            });\n    }\n\n    /**\n     * Finds all files that should be downloaded. Also performs checks if these files can be downloaded based\n     * on the user's settings\n     * @param iliasObjects\n     */\n    protected checkForFileDownloads(iliasObjects:ILIASObject[]):Promise<SyncResults> {\n        return new Promise((resolve, reject) => {\n            this.user.settings.then(settings => {\n                FileData.getTotalDiskSpace().then(space => {\n\n                    // We split the objects in different categories.\n                    let downloads:ILIASObject[] = [];\n                    let filesTooBig:{object: ILIASObject, reason:LeftOutReason}[] = [];\n                    let noMoreSpace:{object: ILIASObject, reason:LeftOutReason}[] = [];\n                    let filesAlreadySynced:ILIASObject[] = [];\n\n                    // Furthermore we need some infos\n                    let availableSpace:number = settings.quotaSize * 1000 * 1000;\n                    let currentlyUsedSpace:number = space;\n\n                    // make sure to only sync files.\n                    let fileObjects = iliasObjects.filter(iliasObject => {\n                        return iliasObject.type == 'file';\n                    });\n\n                    // We sort all objects to know which to download and which to leave out.\n                    fileObjects.forEach(fileObject => {\n                        if (fileObject.needsDownload) {\n                            let fileSize = parseInt(fileObject.data.fileSize);\n                            if (currentlyUsedSpace + fileSize <= availableSpace) {\n                                if (fileSize <= settings.downloadSize * 1000 * 1000) {\n                                    downloads.push(fileObject);\n                                    currentlyUsedSpace += fileSize;\n                                } else {\n                                    filesTooBig.push({object: fileObject, reason: LeftOutReason.FileTooBig});\n                                }\n                            } else {\n                                noMoreSpace.push({object: fileObject, reason: LeftOutReason.QuotaExceeded});\n                            }\n                        } else {\n                            filesAlreadySynced.push(fileObject);\n                        }\n                    });\n\n                    // We make a copy of the files to download, as the list gets decreased in the download process\n                    let totalDownloads = downloads.length;\n                    let allDownloads = downloads.slice(0); // This is the javascript's clone function....\n\n                    // We set the job to downloading and add a listener to track the progress.\n                    this.footerToolbar.addJob(Job.FileDownload, this.translate.instant(\"sync.download\") + \" 0/\" + totalDownloads);\n                    let progressListener = (outstandingDownloads:number) => {\n                        this.footerToolbar.addJob(Job.FileDownload, this.translate.instant(\"sync.download\") + \" \" + (totalDownloads - outstandingDownloads) + \"/\" + totalDownloads);\n                    }\n\n                    // we execute the file downloads and afterwards\n                    this.executeFileDownloads(downloads, progressListener).then(() => {\n                        this.footerToolbar.removeJob(Job.FileDownload);\n                        resolve(new SyncResults(\n                            fileObjects,\n                            allDownloads,\n                            filesAlreadySynced,\n                            filesTooBig.concat(noMoreSpace)\n                        ));\n                    }).catch(error => {\n                        Log.describe(this, \"Execute File Download rejected\", error);\n                        this.footerToolbar.removeJob(Job.FileDownload);\n                        reject(error);\n                    });\n                }).catch((error) => {\n                    reject(error);\n                });\n            });\n        });\n    }\n\n    /**\n     * Downloads one file after another\n     */\n    protected executeFileDownloads(downloads:ILIASObject[], progressListener?:(outstanding_downloads:number) => void):Promise<any> {\n        return new Promise((resolve, reject) => {\n            if (downloads.length == 0) {\n                resolve();\n            } else {\n                var download = downloads.pop();\n                if (progressListener != null)\n                    progressListener(downloads.length);\n                this.fileService.download(download).then(() => {\n                    this.executeFileDownloads(downloads, progressListener).then(() => {\n                        resolve();\n                    });\n                }).catch(error => {\n                    downloads.push(download);\n                    reject(error);\n                });\n            }\n        });\n    }\n\n    private executeContainerSync(container:ILIASObject):Promise<SyncResults> {\n        return this.dataProvider.getObjectData(container, this.user, true)\n            .then( (iliasObjects) => {\n                iliasObjects.push(container)\n                return this.checkForFileDownloads(iliasObjects);\n\n            })\n            .then( (syncResults) =>\n                this.syncEnded(this.user.id).then( () => Promise.resolve(syncResults))\n            );\n    }\n\n    private executeGlobalSync(fetchAllMetaData = true):Promise<SyncResults> {\n        // Run sync for all objects marked as \"offline available\"\n        Log.write(this, \"Fetching offline available objects.\")\n\n        return this.dataProvider.getDesktopData(this.user)\n            .then(desktopObjects => {\n                this.footerToolbar.addJob(Job.MetaDataFetch, this.translate.instant(\"sync.fetching_metadata\"));\n                let promises = Promise.resolve();\n                for (let iliasObject of desktopObjects) {\n                    promises = promises.then(() => {\n                        this.footerToolbar.addJob(Job.MetaDataFetch, this.translate.instant(\"sync.fetching_metadata\") + \": \" + iliasObject.title)\n                        Log.write(this, \"Fetching offline available objects for \" + iliasObject.title);\n                       return this.dataProvider.getObjectData(iliasObject, this.user, true);\n                    }).then(() => {\n                        Log.write(this, \"Fetching finished.\")\n                    });\n                }\n                return promises;\n            })\n            .catch(error => {\n                this.footerToolbar.removeJob(Job.MetaDataFetch);\n                return Promise.reject(error);\n            })\n            .then( () => {\n                Log.write(this, \"Fetching metadata finished.\");\n                this.footerToolbar.removeJob(Job.MetaDataFetch);\n                return this.getOfflineAvailableObjects(this.user)\n            })\n            .then(offlineAvailableObjects => {\n                let promises = [];\n                for (let iliasObject of offlineAvailableObjects) {\n                    promises.push(ILIASObject.findByParentRefIdRecursive(iliasObject.refId, this.user.id));\n                }\n                promises.push(Promise.resolve(offlineAvailableObjects));\n\n                return Promise.all(promises);\n            })\n            .then((listOfIliasObjectLists) => {\n                let iliasObjects = [];\n                listOfIliasObjectLists.forEach(list => {\n                    iliasObjects = iliasObjects.concat(list);\n                });\n\n                return this.checkForFileDownloads(iliasObjects);\n            }).then((syncResults) =>\n                this.syncEnded(this.user.id).then( () => Promise.resolve(syncResults) )\n            );\n    }\n}\n\nexport class SyncResults {\n    constructor(public totalObjects:ILIASObject[],\n                public objectsDownloaded:ILIASObject[],\n                public objectsUnchanged:ILIASObject[],\n                public objectsLeftOut:{object:ILIASObject, reason:LeftOutReason}[]) {\n    }\n}\n\n/**\n * WARNING at the moment we only use FileTooBig, the other two reasons lead to an abortion of the sync!\n */\nexport enum LeftOutReason {\n    // In most cases you don't want to download files if you're not in the wlan.\n    NoWLAN = 1,\n    // In the settings you can specify how big files should be you want to download.\n    FileTooBig = 2,\n    // In the settings you can set a max quota.\n    QuotaExceeded = 3\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/synchronization.service.ts","import {DatabaseService, SQLiteDatabaseService} from \"../services/database.service\";\nimport {Log} from \"../services/log.service\";\n\nexport interface DatabaseConnector {\n    /**\n     * Table name\n     */\n    table:string;\n\n    /**\n     * Table fields\n     */\n    dbFields:Array<string>;\n\n    /**\n     * Execute a query\n     * @param sql\n     * @param params\n     */\n    query(sql:string, params?:Array<any>);\n\n    /**\n     * Read data from database with given ID and return fields and values\n     * Returns a promise that resolves the data\n     * @param id\n     */\n    read(id:number):Promise<Object>;\n\n    /**\n     * Persist data with given values in database. If id is zero, create entry otherwise update entry\n     * Returns a promise that resolves the generated primary ID\n     * @param id\n     * @param values\n     */\n    save(id:number, values:Array<any>):Promise<number>;\n\n\n    /**\n     * Deletes the object with given primary ID from database\n     * @param id\n     */\n    destroy(id:number):Promise<any>;\n\n}\n\n/**\n * Connects a model to the database by providing table name and fields\n */\nexport class SQLiteConnector implements DatabaseConnector {\n\n    public table:string;\n    public dbFields:Array<string>;\n    protected database:DatabaseService;\n\n    constructor(table:string, dbFields:Array<string>) {\n        this.table = table;\n        this.dbFields = dbFields;\n    }\n\n    query(sql:string, params = []) {\n        return SQLiteDatabaseService.instance()\n            .then(db => db.query(sql, params));\n    }\n\n    read(id:number):Promise<Object> {\n        return this.query('SELECT * FROM ' + this.table + ' WHERE id = ?', [id]).then((response:any) => {\n            if (response.rows.length == 0) {\n                let error = new Error('ActiveRecord: Could not find database entry with primary key `' + id + '` in table ' + this.table);\n                return Promise.reject(error);\n            }\n            return Promise.resolve(response.rows.item(0));\n        });\n    }\n\n    save(id:number, values:Array<any>):Promise<number> {\n        if (id > 0) {\n            return this.update(values, id);\n        } else {\n            return this.create(values);\n        }\n    }\n\n    /**\n     * creates an array with length \"n\" where all values are \"value\"\n     * @param n\n     * @param value\n     * @returns {string[]}\n     */\n    private nTimes(n, value) {\n        let placeholders:string[] = [];\n        for (let i = 0; i < n; i++) {\n            i = i; // just to shut up the linter\n            placeholders.push(value);\n        }\n        return placeholders;\n    };\n\n    /**\n     * Crates an entry for the DB and returns the ID.\n     * @param values\n     * @returns {Promise<TResult>}\n     */\n    private create(values):Promise<number> {\n        this.setArrayValueToNow('createdAt', values);\n        return this.query('INSERT INTO ' + this.table + '(' + this.dbFields.join() + ') VALUES (' + this.nTimes(this.dbFields.length, '?').join() + ')', values)\n            .then((response:any) => Promise.resolve(<number> response.insertId));\n    };\n\n    /**\n     * updates the entry into the db an returns the ID\n     * @param values\n     * @param id\n     * @returns {Promise<TResult>}\n     */\n    private update(values, id):Promise<number> {\n        this.setArrayValueToNow('updatedAt', values);\n        return this.query('UPDATE ' + this.table + ' SET ' + this.dbFields.join('=?,') + '=? WHERE id = ' + id, values).then( () => {\n            return Promise.resolve(<number> id);\n        });\n    };\n\n    /**\n     *\n     * @param values\n     */\n    private setArrayValueToNow(field, values) {\n        let pos = this.dbFields.indexOf(field);\n        if (pos > -1) {\n            let date = new Date().toISOString();\n            values[pos] = date;\n        }\n    };\n\n    destroy(id:number):Promise<any> {\n        Log.describe(this, \"deleting item with table and id: \", {table: this.table, id: id});\n        return this.query('DELETE FROM ' + this.table + ' WHERE id = ?', [id]);\n    }\n}\n\n/**\n * Base class for models that need to persis data in the database\n */\nexport abstract class ActiveRecord {\n\n    public _id:number = 0;\n    protected connector:DatabaseConnector;\n\n    constructor(id = 0, connector:DatabaseConnector) {\n        this._id = id;\n        this.connector = connector;\n    }\n\n    /**\n     * Initialize object properties from connector\n     */\n    public read():Promise<ActiveRecord> {\n            return this.connector.read(this._id).then((data) => {\n                for (let key in data) {\n                    if (this.connector.dbFields.indexOf(key) > -1) {\n                        this[key] = data[key];\n                    }\n                }\n                return Promise.resolve(this);\n            });\n    }\n\n    /**\n     * Build the ActiveRecord object from a given JS Object (handles primary key and all properties)\n     * @param object\n     */\n    public readFromObject(object:Object) {\n        for (let property in object) {\n            if (property == 'id') {\n                this._id = object[property];\n            } else if (object.hasOwnProperty(property)) {\n                this[property] = object[property];\n            }\n        }\n    }\n\n\n    /**\n     * Returns the primary key\n     * @returns {number}\n     */\n    public get id() {\n        return this._id;\n    }\n\n\n    /**\n     * Persist object in database, new objects are created while existing are updated\n     * Returns a Promise resolving the saved object\n     */\n    public save():Promise<ActiveRecord> {\n        return this.connector.save(this._id, this.getDbFieldValues()).then((newId) => {\n            this._id = newId;\n            return Promise.resolve(this);\n        });\n    }\n\n    /**\n     * Deletes the object from the database\n     * Note: delete is a reserved word ;)\n     * @returns {Promise<any>}\n     */\n    public destroy():Promise<any> {\n        return this.connector.destroy(this._id);\n    }\n\n\n    /**\n     * Return the current values of all dbFields\n     * @returns {Array}\n     */\n    protected getDbFieldValues() {\n        let values = [];\n        for (let property of this.connector.dbFields) {\n            // Convert undefined to null\n            let value = (this[property] === undefined) ? null : this[property];\n            // Automatic conversions\n            if (typeof value === 'boolean') {\n                value = (value) ? 1 : 0;\n            } else if (typeof value === 'object' && value !== null) {\n                value = JSON.stringify(value);\n            }\n            values.push(value);\n        }\n        return values;\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/active-record.ts","import {ActiveRecord, SQLiteConnector} from \"./active-record\";\nimport {SQLiteDatabaseService} from \"../services/database.service\";\nimport {Network} from \"@ionic-native/network\";\nimport {FileData} from \"./file-data\";\nimport {ILIASObject} from \"./ilias-object\";\n\nexport class Settings extends ActiveRecord {\n\n    static NETWORK: Network;\n\n    /**\n     * Internal userId\n     */\n    public userId:number;\n\n    /**\n     * Language for app\n     */\n    public language:string = 'de';\n\n    /**\n     * Max. allowed size for automatic downloads (mega bytes)\n     */\n    public downloadSize:number = 10;\n\n    /**\n     * Max. allowed quota for all files the app is storing (mega bytes)\n     */\n    public quotaSize:number = 300;\n\n    /**\n     * If true, only execute sync when WLAN is available\n     */\n    public downloadWlan:boolean = true;\n\n    constructor(id = 0) {\n        super(id, new SQLiteConnector('settings', [\n            'userId',\n            'language',\n            'downloadSize',\n            'quotaSize',\n            'downloadWlan'\n        ]));\n\n        if(id == 0) {\n            var userLang = navigator.language.split('-')[0]; // use navigator lang if available\n            userLang = /(de|en)/gi.test(userLang) ? userLang : 'en';\n\n            this.language = userLang;\n        }\n    }\n\n    /**\n     * Find settings object by given user, if it does not exist yet, creates a new instance with default settings values.\n     * @param userId\n     * @returns {Promise<Settings>}\n     */\n    public static findByUserId(userId:number):Promise<Settings> {\n        return new Promise((resolve, reject) => {\n            SQLiteDatabaseService.instance().then(db => {\n                db.query('SELECT * FROM settings WHERE userId = ?', [userId]).then((response) => {\n                    let settings = new Settings();\n                    if (response.rows.length == 0) {\n                        settings.userId = userId;\n                        resolve(settings);\n                    } else {\n                        settings.readFromObject(response.rows.item(0));\n                        resolve(settings);\n                    }\n                }, (error) => {\n                    reject(error);\n                });\n            });\n        });\n    }\n\n    /**\n     * Returns true if we are on a smartphone AND we have the only download in WLAN BUT (are NOT in Wifi and NOT in Ethernet)\n     * @returns {boolean}\n     */\n    public shouldntDownloadBecauseOfWLAN():boolean {\n        return window.hasOwnProperty('cordova') && this.downloadWlan && (Settings.NETWORK.type != \"wifi\" && Settings.NETWORK.type != \"ethernet\");\n\n    }\n\n    public fileTooBig(fileObject:ILIASObject):boolean {\n        let fileSize = parseInt(fileObject.data.fileSize);\n            return fileSize > this.downloadSize * 1000 * 1000;\n    }\n\n    public quotaExceeds(fileObject:ILIASObject):Promise<boolean> {\n            //only check files...\n            if(fileObject.type != 'file') {\n            return Promise.resolve(false);\n        }\n\n        return FileData.getTotalDiskSpace().then( used => {\n            let fileSize = parseInt(fileObject.data.fileSize);\n            return Promise.resolve(this.quotaSize * 1000 * 1000 < used + fileSize);\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/settings.ts","import {ILIASObject} from \"../models/ilias-object\";\nimport {ILIASAppUtils} from \"../services/ilias-app-utils.service\";\nimport {FileService} from \"../services/file.service\";\nimport {Log} from \"../services/log.service\";\n/**\n * Decorator to present data of ILIASObjects in the view.\n * Wraps an ILIASObject instance and returns presentation specific stuff\n */\nexport interface ILIASObjectPresenter {\n\n    /**\n     * Returns the ionic icon name for this object\n     */\n    icon():string;\n\n    /**\n     * Returns the title\n     */\n    title():string;\n\n    /**\n     * Should the type be displayed as text before the title?\n     */\n    showTypeAsText():boolean;\n\n    /**\n     * Gets the language variable for the type;\n     */\n    typeLangVar():string;\n\n    /**\n     * Return details from this object (used on the details page)\n     */\n    details():Promise<Array<{label:string, value:string}>>\n\n    /**\n     * Return a list of badges to display for this object, color should be one of ionics colors, e.g. primary\n     */\n    metaBadges():Promise<Array<{value:string, color:string}>>\n\n    /**\n     * Return a list of icons that are displayed for this object\n     */\n    metaIcons():Promise<Array<{name:string, color:string}>>\n\n}\n\n/**\n * A generic presenter if the object type does not match a more specific one, e.g. CourseObjectPresenter\n */\nexport class GenericILIASObjectPresenter implements ILIASObjectPresenter {\n\n    public constructor(protected iliasObject:ILIASObject) {\n    }\n\n    icon():string {\n        return 'open';\n    }\n\n    title():string {\n        return this.iliasObject.title;\n    }\n\n    typeLangVar():string {\n        return \"object_type.\"+this.iliasObject.type;\n    }\n\n    public showTypeAsText():boolean {\n        return true;\n    }\n\n    details():Promise<Array<{label:string, value:string, translate?:boolean}>> {\n        // let details = [{label: 'details.last_update', value: this.iliasObject.updatedAt ? this.iliasObject.updatedAt : this.iliasObject.createdAt}];\n        let details = [];\n        if (this.iliasObject.isContainer() && !this.iliasObject.isLinked()) {\n            let detailPromises = [];\n\n            // Container objects display the used disk space of file items below\n            detailPromises.push(\n                FileService.calculateDiskSpace(this.iliasObject)\n                    .then(diskSpace => {\n                        Log.describe(this, \"Disk space used: \", ILIASAppUtils.formatSize(diskSpace));\n                        let detail = {label: 'details.used_disk_space', value: ILIASAppUtils.formatSize(diskSpace)};\n                        details.push(detail);\n                        return Promise.resolve(detail);\n                    })\n            );\n\n            // And the potentially used diskspace\n            detailPromises.push(\n                FileService.calculateDiskSpace(this.iliasObject, false)\n                    .then(diskSpace => {\n                        Log.describe(this, \"Potentially used disk space: \", ILIASAppUtils.formatSize(diskSpace));\n                        let detail = {label: 'details.potentially_used_disk_space', value: ILIASAppUtils.formatSize(diskSpace)};\n                        details.push(detail);\n                        return Promise.resolve(detail);\n                    })\n            );\n            detailPromises.push(\n                Promise.resolve({label: 'details.offline_available', value: (this.iliasObject.isOfflineAvailable && !this.iliasObject.needsDownload)?'yes':'no', translate: true})\n            )\n\n            return Promise.all(detailPromises);\n        } else {\n            return Promise.resolve(details);\n        }\n    }\n\n    metaBadges():Promise<Array<{value:string; color:string}>> {\n        return new Promise((resolve, reject) => {\n            let badges = [];\n            if (this.iliasObject.isNew) {\n                badges.push({value: 'New', color: 'primary'});\n            }\n            if (this.iliasObject.isUpdated) {\n                badges.push({value: 'Updated', color: 'primary'});\n            }\n            // Container display the number of new objects of their children\n            if (this.iliasObject.isContainer()) {\n                ILIASObject.findByParentRefIdRecursive(this.iliasObject.refId, this.iliasObject.userId).then(iliasObjects => {\n                    let newObjects = iliasObjects.filter(iliasObject => {\n                        return iliasObject.isNew;\n                    });\n                    let n = newObjects.length;\n                    if (n) {\n                        badges.push({value: n, color: 'primary'});\n                    }\n                    resolve(badges);\n                });\n            } else {\n                resolve(badges);\n            }\n        });\n    }\n\n    metaIcons():Promise<Array<{name:string; color:string}>> {\n        return new Promise((resolve, reject) => {\n            let icons = [];\n            if (this.iliasObject.isFavorite) {\n                icons.push({name: 'star', color: ''});\n            }\n            resolve(icons);\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/presenters/object-presenter.ts","import {Inject, Injectable} from '@angular/core';\nimport {Http, Headers} from \"@angular/http\";\nimport {User} from \"../models/user\";\nimport {URLSearchParams} from '@angular/http'\nimport {Log} from \"../services/log.service\";\nimport {ILIASInstallation} from \"../config/ilias-config\";\nimport {FileTransfer} from \"@ionic-native/file-transfer\";\nimport {Events} from \"ionic-angular\";\nimport \"rxjs/add/observable/defer\";\nimport \"rxjs/add/operator/timeout\";\nimport {RESTAPIException} from \"../exceptions/RESTAPIException\";\nimport {ILIAS_CONFIG_FACTORY, ILIASConfigFactory} from \"../services/ilias-config-factory\";\n\n@Injectable()\nexport class ILIASRestProvider {\n    public constructor(\n      private http: Http,\n      @Inject(ILIAS_CONFIG_FACTORY)\n      private readonly configFactory: ILIASConfigFactory,\n      private readonly transfer: FileTransfer,\n      protected event: Events) {\n    }\n\n    protected defaultTimeout = 20000;\n    protected api_url = '/Customizing/global/plugins/Services/UIComponent/UserInterfaceHook/REST/api.php';\n    protected app_routes_url = '/v1/';\n    // protected api_url = '/restplugin.php';\n    // protected app_routes_url = '/';\n\n    public getAuthToken(user: User, timeout: number = null): Promise<any> {\n\n let installation;\n\n return this.getInstallation(user)\n   .then(insta => {\n     installation = insta;\n     return this.checkAndUpdateAccessToken(user, installation, timeout);\n   })\n   .then(() => {\n     Log.describe(this, \"User\", user);\n\n     let endpoint = installation.url + this.api_url + this.app_routes_url + 'ilias-app/auth-token';\n\n     return <Promise<Object>> this.http.get(endpoint, {headers: this.getAuthHeaders(user)})\n       .timeout(timeout?timeout:this.defaultTimeout)\n       .map((response) => response.json())\n       .toPromise()\n       .then(result => {\n         Log.describe(this, \"res\", result);\n         return Promise.resolve(result);\n       })\n       .catch(error => {\n         Log.error(this, error);\n         if (error.status && error.status == 401) {\n           this.logout();\n         }\n         return Promise.reject(new RESTAPIException(error));\n       })\n   });\n}\n\n    /**\n     * Get ILIAS objects on desktop\n     * @param user\n     * @returns {Promise<Array<Object>>}\n     */\n    public getDesktopData(user: User, timeout:number = null): Promise<Object[]> {\n\n        let installation;\n\n        return this.getInstallation(user)\n            .then(insta => {\n                installation = insta;\n                return this.checkAndUpdateAccessToken(user, installation, timeout);\n            })\n            .then(() => {\n                Log.describe(this, \"User\", user);\n\n                //build request\n                let endpoint = installation.url + this.api_url + this.app_routes_url + 'ilias-app/desktop?';\n                let params: URLSearchParams = new URLSearchParams();\n\n                //fire request and resolve.\n                return <Promise<Object[]>> this.http.get(endpoint, {headers: this.getAuthHeaders(user), search: params})\n                    .timeout(timeout?timeout:this.defaultTimeout)\n                    // .timeoutWith\n                    .map((response) => response.json())\n                    .toPromise()\n                    .then(result =>  {\n                        Log.describe(this, \"res\", result);\n                        return Promise.resolve(result);\n                    })\n                    .catch(error => {\n                        Log.error(this, error);\n                        if (error.status && error.status == 401) {\n                            this.logout();\n                        }\n                        return Promise.reject(new RESTAPIException(error));\n                    });\n                });\n    }\n\n    /**\n     * FOR TESTING ONLY!\n     * @param ms\n     * @returns {Promise<T>}\n     */\n    protected delay(ms: number) {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n\n    /**\n     * Get ILIAS objects under the given parent ref-ID\n     * @param parentRefId\n     * @param user\n     * @param recursive\n     * @returns {Promise<Array<Object>>}\n     */\n    public getObjectData(parentRefId: number, user: User, recursive: boolean = false, timeout: number = null): Promise<Object[]> {\n\n        let installation;\n\n        return this.getInstallation(user)\n            .then(insta => {\n                installation = insta;\n                return this.checkAndUpdateAccessToken(user, installation, timeout);\n            }).then(() => {\n                // do your work.\n                let endpoint = installation.url + this.api_url + this.app_routes_url + 'ilias-app/objects/' + parentRefId;\n                if (recursive) endpoint += '?recursive=1';\n\n                return <Promise<Object[]>> this.http.get(endpoint, {headers: this.getAuthHeaders(user)})\n                    .timeout(timeout?timeout:this.defaultTimeout)\n                    .map((response) => response.json())\n                    .toPromise()\n                    .catch(error => {\n                        if (error.status && error.status == 401) {\n                            this.logout();\n                        }\n                        return Promise.reject(new RESTAPIException(error));\n                    });\n            });\n    }\n\n\n    /**\n     * Get metadata of an ILIAS file object with the given refId\n     * @param refId\n     * @param user\n     * @returns {Promise<Object>}\n     */\n    public getFileData(refId: number, user: User, timeout: number = null): Promise<Object> {\n        let installation;\n\n        return this.getInstallation(user)\n            .then(insta => {\n                installation = insta;\n                return this.checkAndUpdateAccessToken(user, installation, timeout);\n            }).then(() => {\n                let endpoint = installation.url + this.api_url + this.app_routes_url + 'ilias-app/files/' + refId;\n                return this.http.get(endpoint, {headers: this.getAuthHeaders(user)})\n                    .timeout(timeout?timeout:this.defaultTimeout)\n                    .map((response) => response.json())\n                    .toPromise()\n                    .catch(error => {\n                        if (error.status && error.status == 401) {\n                            this.logout();\n                        }\n                        return Promise.reject(new RESTAPIException(error));\n                    });\n            });\n    }\n\n\n    public downloadFile(refId: number, storageLocation: string, user: User, progressListener = null, timeout = null): Promise<any> {\n        let installation: ILIASInstallation;\n        return this.getInstallation(user)\n            .then((install) => {\n                installation = install;\n                return this.checkAndUpdateAccessToken(user, installation, timeout);\n            })\n            .then(user => {\n\n                let endpoint = encodeURI(installation.url + this.api_url + '/v1/files/' + refId);\n                try {\n                    let transfer = this.transfer.create();\n\n                    if (progressListener) {\n                        transfer.onProgress(progressListener);\n                    }\n\n                    Log.describe(this, \"Downloading from: \", endpoint);\n                    Log.describe(this, \"Downloading to: \", storageLocation);\n\n                    return transfer.download(endpoint, storageLocation, false, {headers: this.getAuthHeaders(user)});\n                } catch (e) {\n                    return Promise.reject(e);\n                }\n            }).catch(error => {\n                //if we no longer have the permission to the ressource we want to logout.\n                if (error.status && error.status == 401) {\n                    this.logout();\n                }\n                return Promise.reject(new RESTAPIException(error));\n            })\n    }\n\n    protected getInstallation(user: User): Promise<ILIASInstallation> {\n        return this.configFactory.get()\n            .then(config => {\n                const installation = config.installations.filter((installation) => {\n                    return installation.id == user.installationId;\n                });\n                if (installation.length) {\n                    return Promise.resolve(installation[0]);\n                }\n                return Promise.reject(\"The user has no valid installation ID!\");\n            });\n    }\n\n    public checkAndUpdateAccessToken(user: User, installation: ILIASInstallation, timeout = null): Promise<User> {\n        Log.describe(this, \"install...\", this.isStillValid(user.lastTokenUpdate, installation.accessTokenTTL));\n\n        // If the token is fresh enough, we just resolve.\n        if (this.isStillValid(user.lastTokenUpdate, installation.accessTokenTTL)) {\n            Log.describe(this, \"lastTokenUpdate\", user.lastTokenUpdate);\n            Log.describe(this, \"accessTokenTTL\", installation.accessTokenTTL);\n            return Promise.resolve(user);\n        }\n\n        //Otherwise we update the token\n        //generates post request that looks sth like: http://localhost/ilias_50/restplugin.php/v2/oauth2/token?api_key=ilias_app&api_secret=abb1.6b92-9c&grant_type=refresh_token&refresh_token=Nix0cnVuayxpbGlhc19hcHAscmVmcmVzaCwsLDIwMzk0NjY0OTUxLE5xaGcyUWl5TzE5VlVvOEQzMlZPQzR4elFOalIySSwzMzE0NzNlODNjNWYzOTJmMTMzZjc5ZWY2Yzc1MmFjNzE2NzIzYmQ5ZDAzMzNhNDVlNjE2Zjg3MTBiMDJmMzk4\n        let endpoint = installation.url + this.api_url + '/v2/oauth2/token?api_key=' + installation.apiKey + '&api_secret=' + installation.apiSecret + '&grant_type=refresh_token&refresh_token=' + user.refreshToken;\n        Log.describe(this, \"Refreshing Token using: \", endpoint);\n\n        return this.http.post(endpoint, null)\n            .timeout(timeout?timeout:this.defaultTimeout)\n            .toPromise()\n            .then(response => {\n                let data = response.json();\n                user.accessToken = data.access_token;\n                user.refreshToken = data.refresh_token;\n                user.lastTokenUpdate = Date.now();\n                return user.save() as Promise<User>;\n            }).catch(error => {\n                if (error.status && error.status == 401) {\n                    this.logout();\n                }\n                return Promise.reject(new RESTAPIException(error));\n            })\n    }\n\n    protected isStillValid(updatedAt: number, timeToLife: number): boolean {\n        return Date.now() - updatedAt < timeToLife;\n    }\n\n    /**\n     * Build authentication headers containing the users accessToken\n     * @param user\n     * @param withDebugHeaders\n     * @returns Headers\n     */\n    protected getAuthHeaders(user: User, withDebugHeaders: boolean = false): Headers {\n        let authHeaders = new Headers();\n        authHeaders.append('Authorization', 'Bearer ' + user.accessToken);\n        if (withDebugHeaders) {\n            authHeaders.append('XDEBUG_SESSION', 'PHPSTORM');\n        }\n        return authHeaders;\n    }\n\n    protected logout() {\n        this.event.publish(\"doLogout\");\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/ilias-rest.provider.ts","import {Exception} from \"./Exception\";\n\nexport class RESTAPIException extends Exception {\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/exceptions/RESTAPIException.ts","export class Exception {\n    public message;\n\n    public constructor(message = null) {\n        this.message = message;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/exceptions/Exception.ts","export interface ILIASObjectActionAlert {\n    title:string,\n    subTitle:string\n}\n\n\nexport abstract class ILIASObjectAction {\n\n    title:string;\n\n    public id:number;\n\n    public static idCounter:number = 9999999;\n\n    /**\n     * Resolves a promise if the action is completed, rejects if the action failed\n     */\n    abstract execute():Promise<ILIASObjectActionResult>;\n\n    /**\n     * Returns a object if this action needs an alert before it is executed\n     */\n    abstract alert():ILIASObjectActionAlert;\n\n    public instanceId():number {\n        if(this.id == null) {\n            this.id = ILIASObjectAction.idCounter;\n            ILIASObjectAction.idCounter++;\n        }\n        return this.id;\n    }\n\n}\n\nexport abstract class ILIASObjectActionResult {\n    public constructor(public message:string ) {\n    }\n}\n\n/**\n * An instance of this class can be returned when an action resolves its promise.\n */\nexport class ILIASObjectActionSuccess extends ILIASObjectActionResult {\n}\n\n/**\n * An instance of this class can be returned when an action rejects its promise.\n */\nexport class ILIASObjectActionError extends ILIASObjectActionResult{\n}\n\nexport class ILIASObjectActionNoMessage extends ILIASObjectActionResult {\n    public constructor() {\n        super(\"\");\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/actions/object-action.ts","import {ILIASConfig} from \"../config/ilias-config\";\nimport {Injectable, InjectionToken} from \"@angular/core\";\nimport {isArray, isNumber, isString, isUndefined} from \"ionic-angular/es2015/util/util\";\nimport {Http, Response} from \"@angular/http\";\nimport {ILIASInstallation} from \"../config/ilias-config\";\n\nexport const ILIAS_CONFIG_FACTORY = new InjectionToken<ILIASConfigFactory>(\"ilias-config-factory\");\n\n/**\n * Describes a factory to initialize the config.json file.\n *\n * @author nmaerchy\n * @version 1.0.0\n */\n\nexport interface ILIASConfigFactory {\n\n  /**\n   * The instance returned is always the same.\n   *\n   * @returns {ILIASConfig} a loaded ILIAS config\n   */\n  get(): Promise<ILIASConfig>\n}\n\n@Injectable()\nexport class HttpILIASConfigFactory implements ILIASConfigFactory {\n\n  private static readonly  configFile = \"assets/config.json\";\n\n  private config: Promise<ILIASConfig>;\n\n  constructor(\n    private readonly http: Http\n  ) {\n    this.config = this.loadConfig()\n  }\n\n  /**\n   * Loads the config.json file and parses it into a {@link ILIASConfig} class.\n   * The instance returned is always be the same.\n   *\n   * @returns {ILIASConfig} a loaded ILIAS config\n   */\n  async get(): Promise<ILIASConfig> { return this.config; }\n\n  private async loadConfig(): Promise<ILIASConfig> {\n\n    const installations: Array<ILIASInstallation> = await this.loadInstallations();\n\n    return <ILIASConfig> {\n      installations: installations\n    };\n  }\n\n  private async loadInstallations(): Promise<Array<ILIASInstallation>> {\n\n    const response: Response = await this.http.get(HttpILIASConfigFactory.configFile).toPromise();\n    const body: object = response.json();\n\n    const installations: Array<object> = this.getArray(body, \"installations\");\n\n    return installations.map(installation => {\n\n      return <ILIASInstallation>{\n        id: this.getNumber(installation, \"id\"),\n        title: this.getString(installation, \"title\"),\n        url: this.getString(installation, \"url\"),\n        clientId: this.getString(installation, \"clientId\"),\n        apiKey: this.getString(installation, \"apiKey\"),\n        apiSecret: this.getString(installation, \"apiSecret\"),\n        accessTokenTTL: this.getNumber(installation, \"accessTokenTTL\")\n      };\n    });\n  }\n\n  private getString(object: object, property: string): string {\n\n    const prop: any = this.getProperty(object, property);\n\n    if (!isString(prop)) {\n      throw new TypeError(`Can not parse config file '${HttpILIASConfigFactory.configFile}': property '${property}' is not a string`);\n    }\n\n    return prop;\n  }\n\n  private getNumber(object: object, property: string): number {\n\n    const prop: any = this.getProperty(object, property);\n\n    if (!isNumber(prop)) {\n      throw new TypeError(`Can not parse config file '${HttpILIASConfigFactory.configFile}': property '${property}' is not a number`);\n    }\n\n    return prop;\n  }\n\n  private getArray(object: object, property: string): Array<object> {\n\n    const prop: any = this.getProperty(object, property);\n\n    if (!isArray(prop)) {\n      throw new TypeError(`Can not parse config file '${HttpILIASConfigFactory.configFile}': property '${property}' is not an array`);\n    }\n\n    return prop;\n  }\n\n  private getProperty(object: object, property: string): any {\n\n    const prop: any = object[property];\n\n    if (isUndefined(prop)) {\n      throw new TypeError(`Can not parse config file '${HttpILIASConfigFactory.configFile}': property '${property}' is undefined`);\n    }\n\n    return prop;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/ilias-config-factory.ts","import {Exception} from \"./Exception\";\n\nexport class CantOpenFileTypeException extends Exception {\n}\n\n\n// WEBPACK FOOTER //\n// ./src/exceptions/CantOpenFileTypeException.ts","import {Exception} from \"./Exception\";\n/**\n */\nexport class OfflineException extends Exception {\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/exceptions/OfflineException.ts","import {ILIASRestProvider} from \"../providers/ilias-rest.provider\";\nimport {User} from \"../models/user\";\nimport {Injectable} from \"@angular/core\";\n\n/**\n * Describes a converter for a {@link ILIASLink}.\n */\nexport interface UrlConverter {\n\n  /**\n   * Converts the given {@code link}.\n   *\n   * @param {ILIASLinkBuilder} linkBuilder the builder to get an {@link ILIASLink}\n   * @returns {Promise<string>} the resulting url\n   */\n  convert(linkBuilder: ILIASLinkBuilder): Promise<string>\n}\n\n/**\n * {@link TokenUrlConverter} converts an link to an url\n * that can be used for sign in and redirect in ILIAS.\n *\n * A token will be get over the {@link ILIASRestProvider}.\n */\n@Injectable()\nexport class TokenUrlConverter implements UrlConverter{\n\n  public constructor(\n    private readonly restProvider: ILIASRestProvider\n  ) {}\n\n  /**\n   * Converts the given {@code link} to a specific url, that can be used\n   * by the ILIAS Pegasus Helper Plugin.\n   *\n   * @see https://github.com/studer-raimann/PegasusHelper\n   *\n   * If the given {@link ILIASLinkBuilder} can not build a {@link ILIASLink},\n   * the unconverted url will be returned.\n   *\n   * @param {ILIASLinkBuilder} linkBuilder the builder to get an {@link ILIASLink}\n   * @returns {Promise<string>} the resulting url\n   */\n  convert(linkBuilder: ILIASLinkBuilder): Promise<string> {\n\n    let userId = 0;\n\n    return User.currentUser()\n      .then(user => {\n        userId = user.iliasUserId;\n        return this.restProvider.getAuthToken(user);\n      })\n      .then(tokenObject => {\n\n        if (linkBuilder.validate()) {\n\n          const link = linkBuilder.build();\n\n          const view = ILIASLinkView[link.view].toLowerCase();\n          const url = `${link.host}/goto.php?target=ilias_app_auth|${userId}|${link.refId}|${view}|${tokenObject.token}`;\n\n          return Promise.resolve(url);\n        }\n\n        return Promise.resolve(linkBuilder.url);\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n  }\n}\n\n/**\n * Builder class for an {@link ILIASLink}.\n *\n * This builder can only build links, if the provided url matches the regex.\n * The url must contain the ref id after the match [a-z_].\n * @example https://ilias.de/goto.php?target=crs_67 or https://ilias.de/goto_ilias_crs_67\n */\nexport class ILIASLinkBuilder {\n\n  private readonly pattern: RegExp = new RegExp(\"(http(?:s?):\\\\/\\\\/.*)\\\\/.*[a-z_](\\\\d+)\");\n\n  /**\n   * Creates an builder for a link to ILIAS.\n   *\n   * @param {string} url a link to ILIAS\n   * @param {string} view the wanted view of the of the object\n   */\n  constructor(\n    readonly url: string,\n    readonly view: ILIASLinkView = ILIASLinkView.DEFAULT\n  ) {}\n\n  /**\n   * Checks the url of this builder against the regex of this builder.\n   *\n   * @returns {boolean} true, if the url matches the regex, otherwise false\n   */\n  validate(): boolean { return this.pattern.test(this.url); }\n\n  /**\n   * Builds an {@link ILIASLink} by the url and the regex of this builder.\n   * This methods calls the {@link ILIASLinkBuilder#validate} method before the build.\n   *\n   * @returns {ILIASLink} the resulting link object\n   * @throws Error if the url does not match the regex of this builder\n   */\n  build(): ILIASLink {\n\n    if (!this.validate()) {\n      throw new Error(`Can not build link: url does not match regex, url=${this.url}`)\n    }\n\n    const matches: string[] = this.pattern.exec(this.url);\n\n    return new ILIASLink(\n      matches[1],\n      parseInt(matches[2], 10),\n      this.view\n    )\n  }\n}\n\n/**\n * Data class containing information for a link to ILIAS.\n */\nclass ILIASLink {\n  constructor(\n    readonly host: string,\n    readonly refId: number,\n    readonly view: ILIASLinkView\n  ) {}\n}\n\n/**\n * All views for an {@link ILIASLinkView}, that are supported\n * by the {@link TokenUrlConverter}.\n */\nexport enum ILIASLinkView {\n  DEFAULT,\n  TIMELINE\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/url-converter.service.ts","import {Component, Inject} from '@angular/core';\nimport {NavController, Platform} from 'ionic-angular';\nimport {User} from \"../../models/user\";\nimport {ILIASInstallation} from \"../../config/ilias-config\";\nimport {InAppBrowser, InAppBrowserObject, InAppBrowserOptions} from \"@ionic-native/in-app-browser\";\nimport {Toast} from \"@ionic-native/toast\";\nimport {Log} from \"../../services/log.service\";\nimport {Events} from \"ionic-angular\";\nimport {ILIAS_CONFIG_FACTORY, ILIASConfigFactory} from \"../../services/ilias-config-factory\";\n\n@Component({\n    templateUrl: 'login.html',\n    providers: [Toast]\n})\nexport class LoginPage {\n\n    public readonly installations: Array<ILIASInstallation> = [];\n\n    /**\n     * Selected installation id\n     */\n    public installationId:number;\n\n    constructor(public platform:Platform,\n                public nav:NavController,\n\n                @Inject(ILIAS_CONFIG_FACTORY)\n                private readonly configFactory: ILIASConfigFactory,\n\n                public toast:Toast,\n                public event:Events,\n                private readonly browser: InAppBrowser\n    ) {\n\n      this.configFactory.get().then((config) => {\n        console.log(config.installations);\n        this.installations.push(...config.installations);\n      });\n    }\n\n    public login() {\n        const installation = this.getSelectedInstallation();\n        const url = `${installation.url}/login.php?target=ilias_app_oauth2&clientId=${installation.clientId}`;\n        const options: InAppBrowserOptions = {\n          location: \"no\", clearsessioncache: \"yes\", clearcache: \"yes\"\n        };\n        const browser: InAppBrowserObject = this.browser.create(url, '_blank', options);\n        Log.describe(this, \"inappBrowser\", browser);\n        browser.on('loadstop').subscribe(() => {\n            // Fetch data from inAppBrowser\n            Log.write(this, \"Loadstop registered.\");\n            browser.executeScript({code: 'document.getElementById(\"data\").value'}).then( (encodedData) => {\n                if (encodedData.length) {\n                    Log.write(this, \"Login successfull from script\");\n                    // Data is an array with the following chunks: iliasUserId, iliasLogin, accessToken, refreshToken\n                    let data = encodedData[0].split('|||');\n                    Log.describe(this, \"Data received from OAuth\", data);\n                    this.saveUser(data[0], data[1], data[2], data[3]).then(() => {\n                        Log.write(this, \"User saved.\");\n                        browser.close();\n                    }, (err) => {\n                        Log.error(this, err);\n                        browser.close();\n                    });\n                }\n            });\n        });\n        browser.on('exit').subscribe(() => {\n            Log.write(this, \"exit browser.\");\n            this.checkLogin();\n        });\n    }\n\n    /**\n     * Checks if an active user is found in the app and redirects to desktop.\n     * If no active user is found, the login mechanism went wrong --> display same page again\n     */\n    protected checkLogin() {\n        return User.currentUser().then(() => {\n            Log.write(this, \"got user.\");\n            this.event.publish(\"login\");\n        }, () => {\n            Log.write(this, \"Login went wrong....\");\n            this.toast.showShortTop('Login failed');\n        });\n    }\n\n\n    /**\n     * Create or update existing user\n     * @param iliasUserId\n     * @param iliasLogin\n     * @param accessToken\n     * @param refreshToken\n     */\n    protected saveUser(iliasUserId:number, iliasLogin:string, accessToken:string, refreshToken:string) {\n        return new Promise((resolve, reject) => {\n            User.findByILIASUserId(iliasUserId, this.installationId).then((user:User) => {\n                Log.write(this, \"found user with ilias id\" + iliasUserId);\n                Log.describe(this, \"refreshtoken: \", refreshToken);\n                user.accessToken = accessToken;\n                user.iliasLogin = iliasLogin;\n                user.refreshToken = refreshToken;\n                user.lastTokenUpdate = Date.now();\n                user.save().then(() => {\n                    resolve();\n                }, (err) => {\n                    Log.error(this, err);\n                    reject();\n                });\n            }, (err) => {\n                reject(err);\n            });\n        });\n    }\n\n\n    /**\n     * @returns {ILIASInstallation}\n     */\n    protected getSelectedInstallation():ILIASInstallation {\n        return this.installations.filter(installation => {\n            return (installation.id == this.installationId);\n        })[0];\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","import {ActiveRecord, SQLiteConnector} from \"./active-record\";\nimport {SQLiteDatabaseService} from \"../services/database.service\";\nimport {ILIASObject} from \"./ilias-object\";\nimport {Log} from \"../services/log.service\";\n\nexport class DesktopItem extends ActiveRecord {\n    /**\n     * Internal user-ID\n     */\n    public userId:number;\n\n    /**\n     * ILIAS Object-ID\n     */\n    public objId:number;\n\n    constructor(id = 0) {\n        super(id, new SQLiteConnector('desktop', [\n            'userId',\n            'objId',\n        ]));\n    }\n\n    /**\n     * Store all given ILIAS object as DesktopItem for the given user\n     * @param userId\n     * @param desktopItems\n     */\n    static storeDesktopItems(userId:number, desktopItems:ILIASObject[]):Promise<any> {\n        return SQLiteDatabaseService.instance()\n            .then(db => db.query('SELECT * FROM desktop WHERE userId = ?', [userId]))\n            .then((response:any) => {\n                let existingItems:DesktopItem[] = [];\n                let promises = [];\n                for (let i = 0; i < response.rows.length; i++) {\n                    let desktopItem = new DesktopItem();\n                    desktopItem.readFromObject(response.rows.item(i));\n                    existingItems.push(desktopItem);\n                }\n                // Store new delivered desktopItems\n                desktopItems.forEach(desktopItem => {\n                    let index = existingItems.findIndex(item => {\n                        return (item.objId == desktopItem.objId);\n                    });\n                    if (index == -1) {\n                        // Item does not yet exist, create\n                        let newDesktopItem = new DesktopItem();\n                        newDesktopItem.userId = userId;\n                        newDesktopItem.objId = desktopItem.objId;\n                        promises.push(newDesktopItem.save());\n                    }\n                });\n                // Delete items no longer delivered\n                existingItems.forEach(existingItem => {\n                    let index = desktopItems.findIndex(item => {\n                        return (item.objId == existingItem.objId);\n                    });\n                    if (index == -1) {\n                        promises.push(existingItem.destroy());\n                    }\n                });\n\n                return Promise.all(promises);\n            });\n    }\n\n    /**\n     * The overriden method makes sure the save action is atomic. We don't want the same input item twice on the desktop.\n     * @returns {Promise<DesktopItem>}\n     */\n    public save():Promise<ActiveRecord> {\n        return this.connector.query('INSERT OR REPLACE INTO ' + this.connector.table + '(userId, objId) VALUES (' + this.userId + ', ' + this.objId + ')')\n            .then((response:any) => Promise.resolve(<number> response.insertId))\n            .then((newId) => {\n            this._id = newId;\n            return Promise.resolve(this);\n        });\n    }\n\n    /**\n     * Get ILIAS objects on desktop from a given user\n     * @param userId\n     * @returns {Promise<ILIASObject[]>}\n     */\n    static findByUserId(userId:number):Promise<ILIASObject[]> {\n        return SQLiteDatabaseService.instance()\n            .then(db => {\n                let sql =\n                    'SELECT objects.* FROM desktop ' +\n                    'INNER JOIN objects ON (objects.objId = desktop.objId AND objects.userId = desktop.userId) ' +\n                    'WHERE desktop.userId = ?';\n                return db.query(sql, [userId])\n            }).then((response:any) => {\n                let iliasObjectPromises = [];\n                for (let i = 0; i < response.rows.length; i++) {\n                    iliasObjectPromises.push(ILIASObject.find(response.rows.item(i).id));\n                    Log.describe(this, \"Desktop item row: \", response.rows.item(i))\n                }\n\n                return Promise.all(iliasObjectPromises)\n                    .then(desktopItems => desktopItems.sort(ILIASObject.compare));\n            });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/models/desktop-item.ts","import {ILIASObjectAction, ILIASObjectActionAlert} from \"./object-action\";\nimport {ILIASObjectActionResult} from \"./object-action\";\nimport {ILIASObjectActionNoMessage} from \"./object-action\";\nimport {ILIASLinkBuilder, TokenUrlConverter} from \"../services/url-converter.service\";\nimport {Subscription} from \"rxjs/Subscription\";\nimport {InAppBrowser, InAppBrowserObject, InAppBrowserOptions} from \"@ionic-native/in-app-browser\";\n\nexport class OpenObjectInILIASAction extends ILIASObjectAction {\n\n  constructor(\n      public title:string,\n      public linkBuilder: ILIASLinkBuilder,\n      private readonly urlConverter: TokenUrlConverter,\n      private readonly browser: InAppBrowser\n  ) { super() }\n\n    public execute():Promise<ILIASObjectActionResult> {\n\n      return new Promise((resolve, reject) => {\n\n        let options: InAppBrowserOptions = {\n          location: \"no\",\n          clearcache: \"yes\",\n          clearsessioncache: \"yes\"\n        };\n        let browser: InAppBrowserObject = this.browser.create(this.linkBuilder.url, \"_blank\", options);\n\n        let subscription: Subscription = browser.on(\"loadstart\").subscribe(() => {\n          subscription.unsubscribe();\n\n          this.urlConverter.convert(this.linkBuilder)\n              .then(link => {\n                // the promise may not be executed depending on the hosts security settings\n                browser.executeScript({code: `window.open('${link}')`});\n                resolve(new ILIASObjectActionNoMessage())\n              })\n              .catch(error => {\n                browser.close();\n                reject(error)\n              })\n        })\n      });\n    }\n\n    public alert():ILIASObjectActionAlert|any {\n        return null;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/actions/open-object-in-ilias-action.ts","import {ILIASObject} from \"../models/ilias-object\";\nimport {ILIASObjectAction, ILIASObjectActionAlert} from \"./object-action\";\nimport {ILIASObjectActionNoMessage} from \"./object-action\";\nimport {ILIASObjectActionResult} from \"./object-action\";\n\nexport class UnMarkAsFavoriteAction extends ILIASObjectAction {\n\n    public constructor(public title:string, public object:ILIASObject) {\n        super();\n    }\n\n    public execute():Promise<ILIASObjectActionResult> {\n        return new Promise((resolve, reject) => {\n            this.object.isFavorite = false;\n            this.object.save().then(() => {\n                resolve(new ILIASObjectActionNoMessage());\n            }).catch(error =>{\n                reject(error);\n            });\n        });\n    }\n\n    public alert():ILIASObjectActionAlert|any {\n        return null;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/actions/unmark-as-favorite-action.ts","import {Component} from '@angular/core';\nimport {SyncResults} from \"../../services/synchronization.service\";\nimport {TranslateService} from \"ng2-translate/ng2-translate\";\nimport {LeftOutReason} from \"../../services/synchronization.service\";\nimport {NavParams} from \"ionic-angular/index\";\nimport {ViewController} from \"ionic-angular/index\";\n\n@Component({\n    templateUrl: 'sync-finished-modal.html',\n})\nexport class SyncFinishedModal {\n\n    public title = '';\n\n    public totalItems:number;\n    public updated:number;\n    public tooBigs:Promise<string>[];\n    public noMoreSpace:Promise<string>[];\n    public uptodate:number;\n\n    /**\n     * @param params\n     */\n    constructor(params: NavParams,\n                public translate:TranslateService,\n                public viewCtrl: ViewController) {\n        let syncResult:SyncResults = params.get('syncResult');\n        this.title = this.translate.instant(\"sync.title\");\n        this.totalItems = syncResult.totalObjects.length;\n        this.updated = syncResult.objectsDownloaded.length;\n        this.uptodate = syncResult.objectsUnchanged.length;\n        this.tooBigs = [];\n        syncResult.objectsLeftOut.forEach(item => {\n           if(item.reason == LeftOutReason.FileTooBig) {\n                this.tooBigs.push(this.getPathToObject(item.object));\n            }\n        });\n\n        this.noMoreSpace = [];\n        syncResult.objectsLeftOut.forEach(item => {\n            if(item.reason == LeftOutReason.QuotaExceeded) {\n                this.noMoreSpace.push(this.getPathToObject(item.object));\n            }\n        });\n    }\n\n\n    public closeModal() {\n        this.viewCtrl.dismiss();\n    }\n\n    protected getPathToObject(object) {\n        return object.getParentsTitleChain()\n            .then(parentTitles => parentTitles.join(\"/\"))\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/sync-finished-modal/sync-finished-modal.ts"],"sourceRoot":""}